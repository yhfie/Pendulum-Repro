#globals
globals: (unsafe.$heap, fixed.$heap);(unsafe.$intArrayType, fixed.$intArrayType);(unsafe.$charArrayType, fixed.$charArrayType);(unsafe.$boolArrayType, fixed.$boolArrayType);(unsafe.$byteArrayType, fixed.$byteArrayType);(unsafe.$longArrayType, fixed.$longArrayType);(unsafe.$arrSizeHeap, fixed.$arrSizeHeap);(unsafe.$stringSizeHeap, fixed.$stringSizeHeap);(unsafe.$boolArrHeap, fixed.$boolArrHeap);(unsafe.$refArrHeap, fixed.$refArrHeap);(unsafe.$realArrHeap, fixed.$realArrHeap);(unsafe.$intArrHeap, fixed.$intArrHeap);(unsafe.$objIndex, fixed.$objIndex);(unsafe.char$lp$$rp$$java.lang.String$chars259, fixed.char$lp$$rp$$java.lang.String$chars259);(unsafe.boolean$java.lang.Boolean$value0, fixed.boolean$java.lang.Boolean$value0);
#types
types: (unsafe.ref, fixed.ref);(unsafe.javaType, fixed.javaType);(unsafe.Field, fixed.Field);(unsafe.$heap_type, fixed.$heap_type);(unsafe.boolArrHeap_type, fixed.boolArrHeap_type);(unsafe.refArrHeap_type, fixed.refArrHeap_type);(unsafe.realArrHeap_type, fixed.realArrHeap_type);(unsafe.intArrHeap_type, fixed.intArrHeap_type);
#constants
constants: (unsafe.$type, fixed.$type);(unsafe.$alloc, fixed.$alloc);(unsafe.$null, fixed.$null);(unsafe.java.lang.Object, fixed.java.lang.Object);(unsafe.java.lang.String, fixed.java.lang.String);(unsafe.java.io.Serializable, fixed.java.io.Serializable);(unsafe.java.lang.Throwable, fixed.java.lang.Throwable);(unsafe.java.lang.Exception, fixed.java.lang.Exception);(unsafe.java.lang.RuntimeException, fixed.java.lang.RuntimeException);(unsafe.java.lang.IndexOutOfBoundsException, fixed.java.lang.IndexOutOfBoundsException);(unsafe.java.lang.ArrayIndexOutOfBoundsException, fixed.java.lang.ArrayIndexOutOfBoundsException);(unsafe.java.lang.NullPointerException, fixed.java.lang.NullPointerException);(unsafe.java.lang.Boolean, fixed.java.lang.Boolean);(unsafe.UsernamePasswordLoginModule, fixed.UsernamePasswordLoginModule);(unsafe.java.lang.Comparable, fixed.java.lang.Comparable);(unsafe.java.lang.CharSequence, fixed.java.lang.CharSequence);
#functions
function: (unsafe.$arrayType, fixed.$arrayType) / (t, t);(out_ret, out_ret);
function: (unsafe.$intToReal, fixed.$intToReal) / (x, x);(out_ret, out_ret);
function: (unsafe.$intToBool, fixed.$intToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$refToBool, fixed.$refToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$boolToInt, fixed.$boolToInt) / (x, x);(out_ret, out_ret);
function: (unsafe.$cmpBool, fixed.$cmpBool) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpRef, fixed.$cmpRef) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpReal, fixed.$cmpReal) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpInt, fixed.$cmpInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitOr, fixed.$bitOr) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitAnd, fixed.$bitAnd) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$xorInt, fixed.$xorInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shlInt, fixed.$shlInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$ushrInt, fixed.$ushrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shrInt, fixed.$shrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$mulInt, fixed.$mulInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$divInt, fixed.$divInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$modInt, fixed.$modInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$intToRef, fixed.$intToRef) / (id, id);(out_ret, out_ret);

#procedures
procedure: (unsafe.$new, fixed.$new) / (obj_type, obj_type);($obj, $obj);
procedure: (unsafe.java.lang.Object$java.lang.Object$clone$43, fixed.java.lang.Object$java.lang.Object$clone$43) / ($this, $this);($other, $other);
procedure: (unsafe.int$java.lang.String$compareTo$87, fixed.int$java.lang.String$compareTo$87) / ($this, $this);($other, $other);($return, $return);
procedure: (unsafe.java.lang.String$$la$init$ra$$, fixed.java.lang.String$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.Object$$la$init$ra$$, fixed.java.lang.Object$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.String$charAt$int, fixed.java.lang.String$charAt$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$toCharArray$, fixed.java.lang.String$toCharArray$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$$la$init$ra$$boolean, fixed.java.lang.Boolean$$la$init$ra$$boolean) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$valueOf$boolean, fixed.java.lang.Boolean$valueOf$boolean) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$booleanValue$, fixed.java.lang.Boolean$booleanValue$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.UsernamePasswordLoginModule$$la$init$ra$$, fixed.UsernamePasswordLoginModule$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.UsernamePasswordLoginModule$validatePassword_unsafe$java.lang.String_java.lang.String, fixed.UsernamePasswordLoginModule$validatePassword_unsafe$java.lang.String_java.lang.String) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.UsernamePasswordLoginModule$equals$java.lang.String_java.lang.String, fixed.UsernamePasswordLoginModule$equals$java.lang.String_java.lang.String) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$toCharArray$_loop_block3, fixed.java.lang.String$toCharArray$_loop_block3) / (in_$return, in_$return);(in_$exception, in_$exception);(in_$i1, in_$i1);(in_i3, in_i3);(in_r1, in_r1);(in_$fakelocal_4, in_$fakelocal_4);(in_$c2, in_$c2);(in_$r3, in_$r3);(in_$fakelocal_2, in_$fakelocal_2);(in_$r4, in_$r4);(in_r0, in_r0);(in_$fakelocal_3, in_$fakelocal_3);(out_$return, out_$return);(out_$exception, out_$exception);(out_$i1, out_$i1);(out_i3, out_i3);(out_$fakelocal_4, out_$fakelocal_4);(out_$c2, out_$c2);(out_$r3, out_$r3);(out_$fakelocal_2, out_$fakelocal_2);(out_$r4, out_$r4);(out_$fakelocal_3, out_$fakelocal_3);
procedure: (unsafe.UsernamePasswordLoginModule$equals$java.lang.String_java.lang.String_loop_block15, fixed.UsernamePasswordLoginModule$equals$java.lang.String_java.lang.String_loop_block66) / (in_$return, in_$return);(in_$exception, in_$exception);(in_r3, in_r3);(in_i8, in_i8);(in_$c5, in_$c5);(in_$i2, in_$i2);(in_$fakelocal_0, in_$fakelocal_0);(in_$c4, in_$c4);(in_$i1, in_$i1);(in_i6, in_i6);(in_$fakelocal_1, in_$fakelocal_1);(in_i7, in_i7);(in_r2, in_r2);(in_$i3, in_$i3);(out_$return, out_$return);(out_$exception, out_$exception);(out_i8, out_i8);(out_$c5, out_$c5);(out_$i2, out_$i2);(out_$fakelocal_0, out_$fakelocal_0);(out_$c4, out_$c4);(out_$i1, out_$i1);(out_i6, out_i6);(out_$fakelocal_1, out_$fakelocal_1);(out_i7, out_i7);(out_$i3, out_$i3);


