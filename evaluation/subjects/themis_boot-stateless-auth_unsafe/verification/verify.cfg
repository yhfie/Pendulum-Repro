#globals
globals: (unsafe.$heap, fixed.$heap);(unsafe.$intArrayType, fixed.$intArrayType);(unsafe.$charArrayType, fixed.$charArrayType);(unsafe.$boolArrayType, fixed.$boolArrayType);(unsafe.$byteArrayType, fixed.$byteArrayType);(unsafe.$longArrayType, fixed.$longArrayType);(unsafe.$arrSizeHeap, fixed.$arrSizeHeap);(unsafe.$stringSizeHeap, fixed.$stringSizeHeap);(unsafe.$boolArrHeap, fixed.$boolArrHeap);(unsafe.$refArrHeap, fixed.$refArrHeap);(unsafe.$realArrHeap, fixed.$realArrHeap);(unsafe.$intArrHeap, fixed.$intArrHeap);(unsafe.$objIndex, fixed.$objIndex);(unsafe.javax.crypto.Mac$TokenHandler$hmac262, fixed.javax.crypto.Mac$TokenHandler$hmac262);(unsafe.boolean$TokenHandler$safeMode0, fixed.boolean$TokenHandler$safeMode0);(unsafe.com.jdriven.stateless.security.User$TokenHandler$VALID_USER263, fixed.com.jdriven.stateless.security.User$TokenHandler$VALID_USER263);
#types
types: (unsafe.ref, fixed.ref);(unsafe.javaType, fixed.javaType);(unsafe.Field, fixed.Field);(unsafe.$heap_type, fixed.$heap_type);(unsafe.boolArrHeap_type, fixed.boolArrHeap_type);(unsafe.refArrHeap_type, fixed.refArrHeap_type);(unsafe.realArrHeap_type, fixed.realArrHeap_type);(unsafe.intArrHeap_type, fixed.intArrHeap_type);
#constants
constants: (unsafe.$type, fixed.$type);(unsafe.$alloc, fixed.$alloc);(unsafe.$null, fixed.$null);(unsafe.java.lang.Object, fixed.java.lang.Object);(unsafe.TokenHandler, fixed.TokenHandler);(unsafe.$StringConst0, fixed.$StringConst0);(unsafe.java.lang.Cloneable, fixed.java.lang.Cloneable);(unsafe.javax.crypto.Mac, fixed.javax.crypto.Mac);(unsafe.java.io.Serializable, fixed.java.io.Serializable);(unsafe.java.lang.Comparable, fixed.java.lang.Comparable);(unsafe.java.lang.CharSequence, fixed.java.lang.CharSequence);(unsafe.java.lang.String, fixed.java.lang.String);(unsafe.java.lang.Throwable, fixed.java.lang.Throwable);(unsafe.java.lang.Exception, fixed.java.lang.Exception);(unsafe.java.security.GeneralSecurityException, fixed.java.security.GeneralSecurityException);(unsafe.java.security.NoSuchAlgorithmException, fixed.java.security.NoSuchAlgorithmException);(unsafe.java.security.spec.KeySpec, fixed.java.security.spec.KeySpec);(unsafe.java.security.Key, fixed.java.security.Key);(unsafe.javax.security.auth.Destroyable, fixed.javax.security.auth.Destroyable);(unsafe.javax.crypto.SecretKey, fixed.javax.crypto.SecretKey);(unsafe.javax.crypto.spec.SecretKeySpec, fixed.javax.crypto.spec.SecretKeySpec);(unsafe.java.lang.RuntimeException, fixed.java.lang.RuntimeException);(unsafe.java.security.KeyException, fixed.java.security.KeyException);(unsafe.java.security.InvalidKeyException, fixed.java.security.InvalidKeyException);(unsafe.java.lang.IllegalStateException, fixed.java.lang.IllegalStateException);(unsafe.java.lang.Appendable, fixed.java.lang.Appendable);(unsafe.java.lang.AbstractStringBuilder, fixed.java.lang.AbstractStringBuilder);(unsafe.java.lang.StringBuilder, fixed.java.lang.StringBuilder);(unsafe.$StringConst1, fixed.$StringConst1);(unsafe.com.jdriven.stateless.security.User, fixed.com.jdriven.stateless.security.User);(unsafe.$StringConst2, fixed.$StringConst2);(unsafe.java.lang.NullPointerException, fixed.java.lang.NullPointerException);(unsafe.java.lang.IndexOutOfBoundsException, fixed.java.lang.IndexOutOfBoundsException);(unsafe.java.lang.ArrayIndexOutOfBoundsException, fixed.java.lang.ArrayIndexOutOfBoundsException);(unsafe.java.lang.IllegalArgumentException, fixed.java.lang.IllegalArgumentException);(unsafe.java.util.Date, fixed.java.util.Date);(unsafe.$StringConst3, fixed.$StringConst3);(unsafe.com.fasterxml.jackson.databind.ObjectMapper, fixed.com.fasterxml.jackson.databind.ObjectMapper);(unsafe.com.fasterxml.jackson.core.JsonProcessingException, fixed.com.fasterxml.jackson.core.JsonProcessingException);(unsafe.java.lang.ClassCastException, fixed.java.lang.ClassCastException);(unsafe.javax.xml.bind.DatatypeConverter, fixed.javax.xml.bind.DatatypeConverter);
#functions
function: (unsafe.$arrayType, fixed.$arrayType) / (t, t);(out_ret, out_ret);
function: (unsafe.$intToReal, fixed.$intToReal) / (x, x);(out_ret, out_ret);
function: (unsafe.$intToBool, fixed.$intToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$refToBool, fixed.$refToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$boolToInt, fixed.$boolToInt) / (x, x);(out_ret, out_ret);
function: (unsafe.$cmpBool, fixed.$cmpBool) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpRef, fixed.$cmpRef) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpReal, fixed.$cmpReal) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpInt, fixed.$cmpInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitOr, fixed.$bitOr) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitAnd, fixed.$bitAnd) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$xorInt, fixed.$xorInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shlInt, fixed.$shlInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$ushrInt, fixed.$ushrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shrInt, fixed.$shrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$mulInt, fixed.$mulInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$divInt, fixed.$divInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$modInt, fixed.$modInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$intToRef, fixed.$intToRef) / (id, id);(out_ret, out_ret);

#procedures
procedure: (unsafe.$new, fixed.$new) / (obj_type, obj_type);($obj, $obj);
procedure: (unsafe.java.lang.Object$java.lang.Object$clone$43, fixed.java.lang.Object$java.lang.Object$clone$43) / ($this, $this);($other, $other);
procedure: (unsafe.int$java.lang.String$compareTo$87, fixed.int$java.lang.String$compareTo$87) / ($this, $this);($other, $other);($return, $return);
procedure: (unsafe.TokenHandler$$la$init$ra$$byte$lp$$rp$_boolean, fixed.TokenHandler$$la$init$ra$$byte$lp$$rp$_boolean) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.java.lang.Object$$la$init$ra$$, fixed.java.lang.Object$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.javax.crypto.Mac$getInstance$java.lang.String, fixed.javax.crypto.Mac$getInstance$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String, fixed.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.javax.crypto.Mac$init$java.security.Key, fixed.javax.crypto.Mac$init$java.security.Key) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$$la$init$ra$$, fixed.java.lang.StringBuilder$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$append$java.lang.String, fixed.java.lang.StringBuilder$append$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Throwable$getMessage$, fixed.java.lang.Throwable$getMessage$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$toString$, fixed.java.lang.StringBuilder$toString$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable, fixed.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.TokenHandler$parseUserFromToken$java.lang.String, fixed.TokenHandler$parseUserFromToken$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.TokenHandler$parseUserFromToken_unsafe$java.lang.String, fixed.TokenHandler$parseUserFromToken_unsafe$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$split$java.lang.String, fixed.java.lang.String$split$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.TokenHandler$fromBase64$java.lang.String, fixed.TokenHandler$fromBase64$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.TokenHandler$createHmac$byte$lp$$rp$, fixed.TokenHandler$createHmac$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.TokenHandler$unsafe_isEqual$byte$lp$$rp$_byte$lp$$rp$, fixed.TokenHandler$unsafe_isEqual$byte$lp$$rp$_byte$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.TokenHandler$fromJSON$byte$lp$$rp$, fixed.TokenHandler$fromJSON$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.util.Date$$la$init$ra$$, fixed.java.util.Date$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.util.Date$getTime$, fixed.java.util.Date$getTime$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.com.jdriven.stateless.security.User$getExpires$, fixed.com.jdriven.stateless.security.User$getExpires$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.TokenHandler$createTokenForUser$com.jdriven.stateless.security.User, fixed.TokenHandler$createTokenForUser$com.jdriven.stateless.security.User) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.TokenHandler$toJSON$com.jdriven.stateless.security.User, fixed.TokenHandler$toJSON$com.jdriven.stateless.security.User) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$$la$init$ra$$int, fixed.java.lang.StringBuilder$$la$init$ra$$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.TokenHandler$toBase64$byte$lp$$rp$, fixed.TokenHandler$toBase64$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.com.fasterxml.jackson.databind.ObjectMapper$$la$init$ra$$, fixed.com.fasterxml.jackson.databind.ObjectMapper$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValueAsBytes$java.lang.Object, fixed.com.fasterxml.jackson.databind.ObjectMapper$writeValueAsBytes$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.Throwable, fixed.java.lang.IllegalStateException$$la$init$ra$$java.lang.Throwable) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.javax.xml.bind.DatatypeConverter$printBase64Binary$byte$lp$$rp$, fixed.javax.xml.bind.DatatypeConverter$printBase64Binary$byte$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.javax.xml.bind.DatatypeConverter$parseBase64Binary$java.lang.String, fixed.javax.xml.bind.DatatypeConverter$parseBase64Binary$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Mac$doFinal$byte$lp$$rp$, fixed.javax.crypto.Mac$doFinal$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.TokenHandler$$la$clinit$ra$$, fixed.TokenHandler$$la$clinit$ra$$) / ($exception, $exception);
procedure: (unsafe.com.jdriven.stateless.security.User$$la$init$ra$$, fixed.com.jdriven.stateless.security.User$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.com.jdriven.stateless.security.User$setExpires$long, fixed.com.jdriven.stateless.security.User$setExpires$long) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.TokenHandler$unsafe_isEqual$byte$lp$$rp$_byte$lp$$rp$_loop_block18, fixed.TokenHandler$unsafe_isEqual$byte$lp$$rp$_byte$lp$$rp$_loop_block18) / (in_$return, in_$return);(in_$exception, in_$exception);(in_$b2, in_$b2);(in_r0, in_r0);(in_$b3, in_$b3);(in_$fakelocal_3, in_$fakelocal_3);(in_i4, in_i4);(in_r1, in_r1);(in_$fakelocal_2, in_$fakelocal_2);(in_i0, in_i0);(out_$return, out_$return);(out_$exception, out_$exception);(out_$b2, out_$b2);(out_$b3, out_$b3);(out_$fakelocal_3, out_$fakelocal_3);(out_i4, out_i4);(out_$fakelocal_2, out_$fakelocal_2);


