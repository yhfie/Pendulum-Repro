#globals
globals: (unsafe.$heap, fixed.$heap);(unsafe.$intArrayType, fixed.$intArrayType);(unsafe.$charArrayType, fixed.$charArrayType);(unsafe.$boolArrayType, fixed.$boolArrayType);(unsafe.$byteArrayType, fixed.$byteArrayType);(unsafe.$longArrayType, fixed.$longArrayType);(unsafe.$arrSizeHeap, fixed.$arrSizeHeap);(unsafe.$stringSizeHeap, fixed.$stringSizeHeap);(unsafe.$boolArrHeap, fixed.$boolArrHeap);(unsafe.$refArrHeap, fixed.$refArrHeap);(unsafe.$realArrHeap, fixed.$realArrHeap);(unsafe.$intArrHeap, fixed.$intArrHeap);(unsafe.$objIndex, fixed.$objIndex);(unsafe.boolean$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatWarned0, fixed.boolean$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatWarned0);(unsafe.org.apache.shiro.crypto.hash.HashService$org.apache.shiro.authc.credential.DefaultPasswordService$hashService261, fixed.org.apache.shiro.crypto.hash.HashService$org.apache.shiro.authc.credential.DefaultPasswordService$hashService261);(unsafe.org.apache.shiro.crypto.hash.format.HashFormat$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormat262, fixed.org.apache.shiro.crypto.hash.format.HashFormat$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormat262);(unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatFactory263, fixed.org.apache.shiro.crypto.hash.format.HashFormatFactory$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatFactory263);(unsafe.org.slf4j.Logger$org.apache.shiro.authc.credential.DefaultPasswordService$log260, fixed.org.slf4j.Logger$org.apache.shiro.authc.credential.DefaultPasswordService$log260);(unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305, fixed.char$lp$$rp$$java.lang.StringBuilder$chars305);(unsafe.char$lp$$rp$$java.lang.String$chars306, fixed.char$lp$$rp$$java.lang.String$chars306);(unsafe.boolean$java.lang.Boolean$value0, fixed.boolean$java.lang.Boolean$value0);
#types
types: (unsafe.ref, fixed.ref);(unsafe.javaType, fixed.javaType);(unsafe.Field, fixed.Field);(unsafe.$heap_type, fixed.$heap_type);(unsafe.boolArrHeap_type, fixed.boolArrHeap_type);(unsafe.refArrHeap_type, fixed.refArrHeap_type);(unsafe.realArrHeap_type, fixed.realArrHeap_type);(unsafe.intArrHeap_type, fixed.intArrHeap_type);
#constants
constants: (unsafe.$type, fixed.$type);(unsafe.$alloc, fixed.$alloc);(unsafe.$null, fixed.$null);(unsafe.java.lang.Object, fixed.java.lang.Object);(unsafe.org.apache.shiro.authc.credential.HashingPasswordService, fixed.org.apache.shiro.authc.credential.HashingPasswordService);(unsafe.org.apache.shiro.authc.credential.DefaultPasswordService, fixed.org.apache.shiro.authc.credential.DefaultPasswordService);(unsafe.org.apache.shiro.crypto.hash.DefaultHashService, fixed.org.apache.shiro.crypto.hash.DefaultHashService);(unsafe.$StringConst0, fixed.$StringConst0);(unsafe.java.io.Serializable, fixed.java.io.Serializable);(unsafe.java.lang.Comparable, fixed.java.lang.Comparable);(unsafe.java.lang.CharSequence, fixed.java.lang.CharSequence);(unsafe.org.apache.shiro.crypto.hash.format.Shiro1CryptFormat, fixed.org.apache.shiro.crypto.hash.format.Shiro1CryptFormat);(unsafe.org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory, fixed.org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory);(unsafe.org.apache.shiro.crypto.hash.Hash, fixed.org.apache.shiro.crypto.hash.Hash);(unsafe.java.lang.Throwable, fixed.java.lang.Throwable);(unsafe.java.lang.Exception, fixed.java.lang.Exception);(unsafe.java.lang.RuntimeException, fixed.java.lang.RuntimeException);(unsafe.org.apache.shiro.crypto.hash.format.HashFormat, fixed.org.apache.shiro.crypto.hash.format.HashFormat);(unsafe.org.apache.shiro.util.ByteSource, fixed.org.apache.shiro.util.ByteSource);(unsafe.org.apache.shiro.crypto.hash.HashRequest, fixed.org.apache.shiro.crypto.hash.HashRequest);(unsafe.org.apache.shiro.crypto.hash.HashService, fixed.org.apache.shiro.crypto.hash.HashService);(unsafe.java.lang.ClassCastException, fixed.java.lang.ClassCastException);(unsafe.org.apache.shiro.crypto.hash.format.ParsableHashFormat, fixed.org.apache.shiro.crypto.hash.format.ParsableHashFormat);(unsafe.org.slf4j.Logger, fixed.org.slf4j.Logger);(unsafe.java.lang.Appendable, fixed.java.lang.Appendable);(unsafe.java.lang.AbstractStringBuilder, fixed.java.lang.AbstractStringBuilder);(unsafe.$StringConst1, fixed.$StringConst1);(unsafe.java.lang.reflect.AnnotatedElement, fixed.java.lang.reflect.AnnotatedElement);(unsafe.java.lang.reflect.GenericDeclaration, fixed.java.lang.reflect.GenericDeclaration);(unsafe.java.lang.reflect.Type, fixed.java.lang.reflect.Type);(unsafe.$StringConst2, fixed.$StringConst2);(unsafe.CC$org$_$apache$_$shiro$_$crypto$_$hash$_$format$_$ParsableHashFormat, fixed.CC$org$_$apache$_$shiro$_$crypto$_$hash$_$format$_$ParsableHashFormat);(unsafe.$StringConst3, fixed.$StringConst3);(unsafe.$StringConst4, fixed.$StringConst4);(unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder, fixed.org.apache.shiro.crypto.hash.HashRequest$Builder);(unsafe.org.apache.shiro.util.ByteSource$Util, fixed.org.apache.shiro.util.ByteSource$Util);(unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory, fixed.org.apache.shiro.crypto.hash.format.HashFormatFactory);(unsafe.CC$org$_$apache$_$shiro$_$authc$_$credential$_$DefaultPasswordService, fixed.CC$org$_$apache$_$shiro$_$authc$_$credential$_$DefaultPasswordService);(unsafe.org.slf4j.LoggerFactory, fixed.org.slf4j.LoggerFactory);(unsafe.java.lang.StringBuilder, fixed.java.lang.StringBuilder);(unsafe.java.lang.String, fixed.java.lang.String);(unsafe.java.lang.NullPointerException, fixed.java.lang.NullPointerException);(unsafe.java.lang.IndexOutOfBoundsException, fixed.java.lang.IndexOutOfBoundsException);(unsafe.java.lang.ArrayIndexOutOfBoundsException, fixed.java.lang.ArrayIndexOutOfBoundsException);(unsafe.java.lang.Boolean, fixed.java.lang.Boolean);
#functions
function: (unsafe.$arrayType, fixed.$arrayType) / (t, t);(out_ret, out_ret);
function: (unsafe.$intToReal, fixed.$intToReal) / (x, x);(out_ret, out_ret);
function: (unsafe.$intToBool, fixed.$intToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$refToBool, fixed.$refToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$boolToInt, fixed.$boolToInt) / (x, x);(out_ret, out_ret);
function: (unsafe.$cmpBool, fixed.$cmpBool) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpRef, fixed.$cmpRef) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpReal, fixed.$cmpReal) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpInt, fixed.$cmpInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitOr, fixed.$bitOr) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitAnd, fixed.$bitAnd) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$xorInt, fixed.$xorInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shlInt, fixed.$shlInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$ushrInt, fixed.$ushrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shrInt, fixed.$shrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$mulInt, fixed.$mulInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$divInt, fixed.$divInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$modInt, fixed.$modInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$intToRef, fixed.$intToRef) / (id, id);(out_ret, out_ret);

#procedures
procedure: (unsafe.$new, fixed.$new) / (obj_type, obj_type);($obj, $obj);
procedure: (unsafe.java.lang.Object$java.lang.Object$clone$43, fixed.java.lang.Object$java.lang.Object$clone$43) / ($this, $this);($other, $other);
procedure: (unsafe.int$java.lang.String$compareTo$87, fixed.int$java.lang.String$compareTo$87) / ($this, $this);($other, $other);($return, $return);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$$la$init$ra$$, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.Object$$la$init$ra$$, fixed.java.lang.Object$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.DefaultHashService$$la$init$ra$$, fixed.org.apache.shiro.crypto.hash.DefaultHashService$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.DefaultHashService$setHashAlgorithmName$java.lang.String, fixed.org.apache.shiro.crypto.hash.DefaultHashService$setHashAlgorithmName$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.DefaultHashService$setHashIterations$int, fixed.org.apache.shiro.crypto.hash.DefaultHashService$setHashIterations$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.DefaultHashService$setGeneratePublicSalt$boolean, fixed.org.apache.shiro.crypto.hash.DefaultHashService$setGeneratePublicSalt$boolean) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.format.Shiro1CryptFormat$$la$init$ra$$, fixed.org.apache.shiro.crypto.hash.format.Shiro1CryptFormat$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory$$la$init$ra$$, fixed.org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$encryptPassword$java.lang.Object, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$encryptPassword$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.format.HashFormat$format$org.apache.shiro.crypto.hash.Hash, fixed.org.apache.shiro.crypto.hash.format.HashFormat$format$org.apache.shiro.crypto.hash.Hash) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.util.ByteSource$isEmpty$, fixed.org.apache.shiro.util.ByteSource$isEmpty$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.HashService$computeHash$org.apache.shiro.crypto.hash.HashRequest, fixed.org.apache.shiro.crypto.hash.HashService$computeHash$org.apache.shiro.crypto.hash.HashRequest) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch_unsafe$java.lang.Object_org.apache.shiro.crypto.hash.Hash, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch_unsafe$java.lang.Object_org.apache.shiro.crypto.hash.Hash) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.Hash$isEmpty$, fixed.org.apache.shiro.crypto.hash.Hash$isEmpty$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Object$toString$, fixed.java.lang.Object$toString$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.org.slf4j.Logger$isWarnEnabled$, fixed.org.slf4j.Logger$isWarnEnabled$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Object$getClass$, fixed.java.lang.Object$getClass$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Class$getName$, fixed.java.lang.Class$getName$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Class$getSimpleName$, fixed.java.lang.Class$getSimpleName$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.slf4j.Logger$warn$java.lang.String, fixed.org.slf4j.Logger$warn$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$$la$init$ra$$, fixed.org.apache.shiro.crypto.hash.HashRequest$Builder$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSource$org.apache.shiro.util.ByteSource, fixed.org.apache.shiro.crypto.hash.HashRequest$Builder$setSource$org.apache.shiro.util.ByteSource) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$build$, fixed.org.apache.shiro.crypto.hash.HashRequest$Builder$build$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.util.ByteSource$Util$bytes$java.lang.Object, fixed.org.apache.shiro.util.ByteSource$Util$bytes$java.lang.Object) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_java.lang.String, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory$getInstance$java.lang.String, fixed.org.apache.shiro.crypto.hash.format.HashFormatFactory$getInstance$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.format.ParsableHashFormat$parse$java.lang.String, fixed.org.apache.shiro.crypto.hash.format.ParsableHashFormat$parse$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.Hash$getAlgorithmName$, fixed.org.apache.shiro.crypto.hash.Hash$getAlgorithmName$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setAlgorithmName$java.lang.String, fixed.org.apache.shiro.crypto.hash.HashRequest$Builder$setAlgorithmName$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.Hash$getSalt$, fixed.org.apache.shiro.crypto.hash.Hash$getSalt$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSalt$org.apache.shiro.util.ByteSource, fixed.org.apache.shiro.crypto.hash.HashRequest$Builder$setSalt$org.apache.shiro.util.ByteSource) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.Hash$getIterations$, fixed.org.apache.shiro.crypto.hash.Hash$getIterations$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setIterations$int, fixed.org.apache.shiro.crypto.hash.HashRequest$Builder$setIterations$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$getHashService$, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$getHashService$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$setHashService$org.apache.shiro.crypto.hash.HashService, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$setHashService$org.apache.shiro.crypto.hash.HashService) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$getHashFormat$, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$getHashFormat$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$setHashFormat$org.apache.shiro.crypto.hash.format.HashFormat, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$setHashFormat$org.apache.shiro.crypto.hash.format.HashFormat) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$getHashFormatFactory$, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$getHashFormatFactory$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$setHashFormatFactory$org.apache.shiro.crypto.hash.format.HashFormatFactory, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$setHashFormatFactory$org.apache.shiro.crypto.hash.format.HashFormatFactory) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$$la$clinit$ra$$, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$$la$clinit$ra$$) / ($exception, $exception);
procedure: (unsafe.org.slf4j.LoggerFactory$getLogger$java.lang.Class, fixed.org.slf4j.LoggerFactory$getLogger$java.lang.Class) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$$la$init$ra$$, fixed.java.lang.StringBuilder$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$append$java.lang.String, fixed.java.lang.StringBuilder$append$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$toString$, fixed.java.lang.StringBuilder$toString$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$, fixed.java.lang.String$$la$init$ra$$char$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.String$charAt$int, fixed.java.lang.String$charAt$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$equals$java.lang.Object, fixed.java.lang.String$equals$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$$la$init$ra$$boolean, fixed.java.lang.Boolean$$la$init$ra$$boolean) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$valueOf$boolean, fixed.java.lang.Boolean$valueOf$boolean) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$booleanValue$, fixed.java.lang.Boolean$booleanValue$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17, fixed.org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17) / (in_$exception, in_$exception);(in_$i1, in_$i1);(in_$c3, in_$c3);(in_i5, in_i5);(in_i4, in_i4);(in_$c2, in_$c2);(in_r2, in_r2);(in_r3, in_r3);(out_$exception, out_$exception);(out_$i1, out_$i1);(out_$c3, out_$c3);(out_i5, out_i5);(out_i4, out_i4);(out_$c2, out_$c2);
procedure: (unsafe.java.lang.String$equals$java.lang.Object_loop_block55, fixed.java.lang.String$equals$java.lang.Object_loop_block54) / (in_$return, in_$return);(in_$exception, in_$exception);(in_r2, in_r2);(in_r0, in_r0);(in_$fakelocal_3, in_$fakelocal_3);(in_$c4, in_$c4);(in_$c3, in_$c3);(in_$r9, in_$r9);(in_$fakelocal_4, in_$fakelocal_4);(in_i5, in_i5);(in_$i2, in_$i2);(in_$r8, in_$r8);(in_$fakelocal_5, in_$fakelocal_5);(in_$r7, in_$r7);(out_$return, out_$return);(out_$exception, out_$exception);(out_$fakelocal_3, out_$fakelocal_3);(out_$c4, out_$c4);(out_$c3, out_$c3);(out_$r9, out_$r9);(out_$fakelocal_4, out_$fakelocal_4);(out_i5, out_i5);(out_$i2, out_$i2);(out_$r8, out_$r8);(out_$fakelocal_5, out_$fakelocal_5);(out_$r7, out_$r7);


