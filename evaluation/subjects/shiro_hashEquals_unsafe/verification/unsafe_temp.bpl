var unsafe.$heap: $heap_type;

var unsafe.$intArrayType: javaType;

var unsafe.$charArrayType: javaType;

var unsafe.$boolArrayType: javaType;

var unsafe.$byteArrayType: javaType;

var unsafe.$longArrayType: javaType;

var unsafe.$arrSizeHeap: [ref]int;

var unsafe.$stringSizeHeap: [ref]int;

var unsafe.$boolArrHeap: boolArrHeap_type;

var unsafe.$refArrHeap: refArrHeap_type;

var unsafe.$realArrHeap: realArrHeap_type;

var unsafe.$intArrHeap: intArrHeap_type;

var unsafe.$objIndex: int;

var unsafe.boolean$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatWarned0: Field int;

var unsafe.org.apache.shiro.crypto.hash.HashService$org.apache.shiro.authc.credential.DefaultPasswordService$hashService261: Field ref;

var unsafe.org.apache.shiro.crypto.hash.format.HashFormat$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormat262: Field ref;

var unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatFactory263: Field ref;

var unsafe.org.slf4j.Logger$org.apache.shiro.authc.credential.DefaultPasswordService$log260: ref;

var unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305: Field ref;

var unsafe.char$lp$$rp$$java.lang.String$chars306: Field ref;

var unsafe.boolean$java.lang.Boolean$value0: Field int;

const unique unsafe.$type: Field javaType;

const unique unsafe.$alloc: Field bool;

const unique unsafe.$null: ref;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.Object: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.authc.credential.HashingPasswordService: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.authc.credential.DefaultPasswordService: javaType extends unique unsafe.java.lang.Object, unsafe.org.apache.shiro.authc.credential.HashingPasswordService complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.crypto.hash.DefaultHashService: javaType extends complete;

const unique unsafe.$StringConst0: ref extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.io.Serializable: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.Comparable: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.CharSequence: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.crypto.hash.format.Shiro1CryptFormat: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.crypto.hash.Hash: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.Throwable: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Serializable complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.Exception: javaType extends unique unsafe.java.lang.Throwable complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.RuntimeException: javaType extends unique unsafe.java.lang.Exception complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.crypto.hash.format.HashFormat: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.util.ByteSource: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.crypto.hash.HashRequest: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.crypto.hash.HashService: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.ClassCastException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.crypto.hash.format.ParsableHashFormat: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.slf4j.Logger: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.Appendable: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.AbstractStringBuilder: javaType extends unique unsafe.java.lang.Object, unsafe.java.lang.Appendable, unsafe.java.lang.CharSequence complete;

const unique unsafe.$StringConst1: ref extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.reflect.AnnotatedElement: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.reflect.GenericDeclaration: javaType extends unsafe.java.lang.reflect.AnnotatedElement complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.java.lang.reflect.Type: javaType extends complete;

const unique unsafe.$StringConst2: ref extends complete;

const unique unsafe.CC$org$_$apache$_$shiro$_$crypto$_$hash$_$format$_$ParsableHashFormat: ref extends complete;

const unique unsafe.$StringConst3: ref extends complete;

const unique unsafe.$StringConst4: ref extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.util.ByteSource$Util: javaType extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory: javaType extends complete;

const unique unsafe.CC$org$_$apache$_$shiro$_$authc$_$credential$_$DefaultPasswordService: ref extends complete;

const {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unique unsafe.org.slf4j.LoggerFactory: javaType extends complete;

const {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unique unsafe.java.lang.StringBuilder: javaType extends unique unsafe.java.lang.Object complete;

const {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unique unsafe.java.lang.String: javaType extends unique unsafe.java.lang.Object complete;

const {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unique unsafe.java.lang.NullPointerException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unique unsafe.java.lang.IndexOutOfBoundsException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unique unsafe.java.lang.ArrayIndexOutOfBoundsException: javaType extends unique unsafe.java.lang.IndexOutOfBoundsException complete;

const {:sourceloc "Boolean.java", -1, -1, -1, -1} unique unsafe.java.lang.Boolean: javaType extends unique unsafe.java.lang.Object complete;

function unsafe.$arrayType(t: javaType) : javaType;

function unsafe.$intToReal(x: int) : real;

function unsafe.$intToBool(x: int) : bool;

function unsafe.$refToBool(x: ref) : bool;

function unsafe.$boolToInt(x: bool) : int;

function unsafe.$cmpBool(x: bool, y: bool) : int;

function unsafe.$cmpRef(x: ref, y: ref) : int;

function unsafe.$cmpReal(x: real, y: real) : int;

function unsafe.$cmpInt(x: int, y: int) : int;

function unsafe.$bitOr(x: int, y: int) : int;

function unsafe.$bitAnd(x: int, y: int) : int;

function unsafe.$xorInt(x: int, y: int) : int;

function unsafe.$shlInt(x: int, y: int) : int;

function unsafe.$ushrInt(x: int, y: int) : int;

function unsafe.$shrInt(x: int, y: int) : int;

function unsafe.$mulInt(x: int, y: int) : int;

function unsafe.$divInt(x: int, y: int) : int;

function unsafe.$modInt(x: int, y: int) : int;

function unsafe.$intToRef(id: int) : ref;

axiom (forall x: int :: 
  { unsafe.$intToBool(x): bool } 
  unsafe.$intToBool(x): bool <==> (if x == 0 then false else true));

axiom (forall x: ref :: 
  { unsafe.$refToBool(x): bool } 
  unsafe.$refToBool(x): bool <==> (if x == unsafe.$null then false else true));

axiom (forall x: bool :: 
  { unsafe.$boolToInt(x): int } 
  unsafe.$boolToInt(x): int == (if x <==> true then 1 else 0));

axiom (forall x: real, y: real :: 
  { unsafe.$cmpReal(x, y): int } 
  unsafe.$cmpReal(x, y): int == (if x > y then 1 else (if x < y then -1 else 0)));

axiom (forall x: int, y: int :: 
  { unsafe.$cmpInt(x, y): int } 
  unsafe.$cmpInt(x, y): int == (if x > y then 1 else (if x < y then -1 else 0)));

axiom (forall index: int :: unsafe.$intToRef(index) != unsafe.$null);

axiom (forall i1: int, i2: int :: 
  i1 == i2 <==> unsafe.$intToRef(i1) == unsafe.$intToRef(i2));

procedure {:prefix "unsafe"} unsafe.$new(obj_type: javaType) returns ($obj: ref);
  modifies unsafe.$objIndex, unsafe.$heap;
  free ensures unsafe.$objIndex == old(unsafe.$objIndex) + 1;
  free ensures $obj == unsafe.$intToRef(old(unsafe.$objIndex));
  free ensures unsafe.$heap
   == old(unsafe.$heap)[$obj, unsafe.$alloc := true][$obj, unsafe.$type := obj_type];
  free ensures !old(unsafe.$heap[$obj, unsafe.$alloc]);
  free ensures $obj != unsafe.$null;



procedure {:prefix "unsafe"} unsafe.java.lang.Object$java.lang.Object$clone$43($this: ref) returns ($other: ref);
  free ensures unsafe.$heap[$other, unsafe.$alloc] <==> true;
  free ensures unsafe.$heap[$other, unsafe.$type] == unsafe.$heap[$this, unsafe.$type];
  free ensures $other != unsafe.$null;



procedure {:prefix "unsafe"} unsafe.int$java.lang.String$compareTo$87($this: ref, $other: ref) returns ($return: int);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$$la$init$ra$$($this: ref) returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Object$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.DefaultHashService$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.DefaultHashService$setHashAlgorithmName$java.lang.String($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.DefaultHashService$setHashIterations$int($this: ref, $in_parameter__0: int) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.DefaultHashService$setGeneratePublicSalt$boolean($this: ref, $in_parameter__0: int) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.format.Shiro1CryptFormat$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$encryptPassword$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap, unsafe.$arrSizeHeap, unsafe.$intArrHeap;



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$($this: ref) returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap, unsafe.$arrSizeHeap, unsafe.$intArrHeap;



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.format.HashFormat$format$org.apache.shiro.crypto.hash.Hash($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.util.ByteSource$isEmpty$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.HashService$computeHash$org.apache.shiro.crypto.hash.HashRequest($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch_unsafe$java.lang.Object_org.apache.shiro.crypto.hash.Hash($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.Hash$isEmpty$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Object$toString$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.slf4j.Logger$isWarnEnabled$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.Object$getClass$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.Class$getName$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.Class$getSimpleName$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.slf4j.Logger$warn$java.lang.String($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSource$org.apache.shiro.util.ByteSource($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$build$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.util.ByteSource$Util$bytes$java.lang.Object($in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory$getInstance$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.format.ParsableHashFormat$parse$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.Hash$getAlgorithmName$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setAlgorithmName$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.Hash$getSalt$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSalt$org.apache.shiro.util.ByteSource($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.Hash$getIterations$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setIterations$int($this: ref, $in_parameter__0: int) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$getHashService$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$setHashService$org.apache.shiro.crypto.hash.HashService($this: ref, $in_parameter__0: ref) returns ($exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$getHashFormat$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$setHashFormat$org.apache.shiro.crypto.hash.format.HashFormat($this: ref, $in_parameter__0: ref) returns ($exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$getHashFormatFactory$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$setHashFormatFactory$org.apache.shiro.crypto.hash.format.HashFormatFactory($this: ref, $in_parameter__0: ref) returns ($exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$$la$clinit$ra$$() returns ($exception: ref);
  modifies unsafe.org.slf4j.Logger$org.apache.shiro.authc.credential.DefaultPasswordService$log260;



procedure {:prefix "unsafe"} unsafe.org.slf4j.LoggerFactory$getLogger$java.lang.Class($in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$$la$init$ra$$($this: ref) returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$append$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$intArrHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$toString$($this: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.String$charAt$int($this: ref, $in_parameter__0: int) returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.String$equals$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Boolean$$la$init$ra$$boolean($this: ref, $in_parameter__0: int) returns ($exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Boolean$valueOf$boolean($in_parameter__0: int) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Boolean$booleanValue$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17(in_$exception: ref, 
    in_$i1: int, 
    in_$c3: int, 
    in_i5: int, 
    in_i4: int, 
    in_$c2: int, 
    in_r2: ref, 
    in_r3: ref)
   returns (out_$exception: ref, 
    out_$i1: int, 
    out_$c3: int, 
    out_i5: int, 
    out_i4: int, 
    out_$c2: int);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$append$java.lang.String_loop_block45(in_$return: ref, 
    in_$exception: ref, 
    in_r2: ref, 
    in_$fakelocal_8: ref, 
    in_$r7: ref, 
    in_$i4: int, 
    in_$c5: int, 
    in_r1: ref, 
    in_$r8: ref, 
    in_$fakelocal_10: ref, 
    in_i8: int, 
    in_$fakelocal_9: ref)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_$fakelocal_8: ref, 
    out_$r7: ref, 
    out_$i4: int, 
    out_$c5: int, 
    out_$r8: ref, 
    out_$fakelocal_10: ref, 
    out_i8: int, 
    out_$fakelocal_9: ref);
  modifies unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$append$java.lang.String_loop_block43(in_$return: ref, 
    in_$exception: ref, 
    in_r2: ref, 
    in_$c6: int, 
    in_$r5: ref, 
    in_$i3: int, 
    in_$fakelocal_5: ref, 
    in_$fakelocal_4: ref, 
    in_i7: int, 
    in_$fakelocal_6: ref, 
    in_r0: ref, 
    in_$r9: ref)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_$c6: int, 
    out_$r5: ref, 
    out_$i3: int, 
    out_$fakelocal_5: ref, 
    out_$fakelocal_4: ref, 
    out_i7: int, 
    out_$fakelocal_6: ref, 
    out_$r9: ref);
  modifies unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.String$equals$java.lang.Object_loop_block55(in_$return: int, 
    in_$exception: ref, 
    in_r2: ref, 
    in_r0: ref, 
    in_$fakelocal_3: ref, 
    in_$c4: int, 
    in_$c3: int, 
    in_$r9: ref, 
    in_$fakelocal_4: ref, 
    in_i5: int, 
    in_$i2: int, 
    in_$r8: ref, 
    in_$fakelocal_5: ref, 
    in_$r7: ref)
   returns (out_$return: int, 
    out_$exception: ref, 
    out_$fakelocal_3: ref, 
    out_$c4: int, 
    out_$c3: int, 
    out_$r9: ref, 
    out_$fakelocal_4: ref, 
    out_i5: int, 
    out_$i2: int, 
    out_$r8: ref, 
    out_$fakelocal_5: ref, 
    out_$r7: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$$la$init$ra$$($this: ref) returns ($exception: ref)
{
  var $r3: ref;
  var r0: ref;
  var $fakelocal_1: ref;
  var r1: ref;
  var $fakelocal_0: ref;
  var $r4: ref;
  var $r2: ref;
  var $fakelocal_2: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", 55, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    $exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "DefaultPasswordService.java", 56, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.boolean$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatWarned0 := 0];
    assert {:sourceloc "DefaultPasswordService.java", 58, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.org.apache.shiro.crypto.hash.DefaultHashService);
    $r2 := $fakelocal_0;
    assert {:sourceloc "DefaultPasswordService.java", 58, -1, -1, -1} true;
    call $exception := unsafe.org.apache.shiro.crypto.hash.DefaultHashService$$la$init$ra$$($r2);
    assert {:sourceloc "DefaultPasswordService.java", 58, -1, -1, -1} true;
    r1 := $r2;
    assert {:sourceloc "DefaultPasswordService.java", 59, -1, -1, -1} true;
    call $exception := unsafe.org.apache.shiro.crypto.hash.DefaultHashService$setHashAlgorithmName$java.lang.String(r1, unsafe.$StringConst0);
    assert {:sourceloc "DefaultPasswordService.java", 60, -1, -1, -1} true;
    call $exception := unsafe.org.apache.shiro.crypto.hash.DefaultHashService$setHashIterations$int(r1, 500);
    assert {:sourceloc "DefaultPasswordService.java", 61, -1, -1, -1} true;
    call $exception := unsafe.org.apache.shiro.crypto.hash.DefaultHashService$setGeneratePublicSalt$boolean(r1, 1);
    assert {:sourceloc "DefaultPasswordService.java", 62, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.HashService$org.apache.shiro.authc.credential.DefaultPasswordService$hashService261 := r1];
    assert {:sourceloc "DefaultPasswordService.java", 64, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.org.apache.shiro.crypto.hash.format.Shiro1CryptFormat);
    $r3 := $fakelocal_1;
    assert {:sourceloc "DefaultPasswordService.java", 64, -1, -1, -1} true;
    call $exception := unsafe.org.apache.shiro.crypto.hash.format.Shiro1CryptFormat$$la$init$ra$$($r3);
    assert {:sourceloc "DefaultPasswordService.java", 64, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.format.HashFormat$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormat262 := $r3];
    assert {:sourceloc "DefaultPasswordService.java", 65, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory);
    $r4 := $fakelocal_2;
    assert {:sourceloc "DefaultPasswordService.java", 65, -1, -1, -1} true;
    call $exception := unsafe.org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory$$la$init$ra$$($r4);
    assert {:sourceloc "DefaultPasswordService.java", 65, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatFactory263 := $r4];
    assert {:sourceloc "DefaultPasswordService.java", 66, -1, -1, -1} true;
    goto block1;

  block1:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$encryptPassword$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var $fakelocal_0: ref;
  var r2: ref;
  var r0: ref;
  var r1: ref;
  var $r4: ref;
  var $r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$r5: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$fakelocal_0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$z0: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$r4: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$this: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$in_parameter__0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$return: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$objIndex: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$heap: $heap_type;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$objIndex: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$heap: $heap_type;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r13: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z1: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r12: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r16: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r6: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_11: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r11: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r4: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r9: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z0: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r18: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r15: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r8: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r7: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_4: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_5: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r10: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_6: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r5: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_10: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r17: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z2: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_7: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_8: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r14: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_9: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$this: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$objIndex: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$heap: $heap_type;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$r0: ref;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$r1: ref;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$exception: ref;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$objIndex: int;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$heap: $heap_type;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap: $heap_type;
  var inline$java.lang.StringBuilder$toString$$0$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$toString$$0$$r1: ref;
  var inline$java.lang.StringBuilder$toString$$0$r0: ref;
  var inline$java.lang.StringBuilder$toString$$0$$r2: ref;
  var inline$java.lang.StringBuilder$toString$$0$$this: ref;
  var inline$java.lang.StringBuilder$toString$$0$$return: ref;
  var inline$java.lang.StringBuilder$toString$$0$$exception: ref;
  var inline$java.lang.StringBuilder$toString$$0$$objIndex: int;
  var inline$java.lang.StringBuilder$toString$$0$$heap: $heap_type;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$in_parameter__0: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$heap: $heap_type;
  var inline$java.lang.Object$$la$init$ra$$$1$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$1$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.Object;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 69, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$this := r0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$in_parameter__0 := r1;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$r5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$fakelocal_0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$z0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$return, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$exception;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$objIndex := unsafe.$objIndex;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$heap := unsafe.$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$return, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.Hash;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.Object;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 75, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r1;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return, unsafe.$type]
   <: unsafe.org.apache.shiro.util.ByteSource;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.Object;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 183, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception := unsafe.org.apache.shiro.util.ByteSource$Util$bytes$java.lang.Object(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1);
    assert {:sourceloc "DefaultPasswordService.java", 183, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$block24;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$block24:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon0$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon0$1:
    assert {:sourceloc "DefaultPasswordService.java", 76, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon9_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon9_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon9_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r2
   != unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 76, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon3;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon3:
    assert {:sourceloc "DefaultPasswordService.java", 77, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$z0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$exception := unsafe.org.apache.shiro.util.ByteSource$isEmpty$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r2);
    assert {:sourceloc "DefaultPasswordService.java", 77, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon10_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon10_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon10_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$z0
   != 0;
    assert {:sourceloc "DefaultPasswordService.java", 77, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$block3;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$block3:
    assert {:sourceloc "DefaultPasswordService.java", 77, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$return := unsafe.$null;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$block5;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$block5:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon10_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$z0
   == 0;
    assert {:sourceloc "DefaultPasswordService.java", 77, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$block4;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$block4:
    assert {:sourceloc "DefaultPasswordService.java", 79, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r2;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$objIndex := unsafe.$objIndex;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$heap := unsafe.$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.HashRequest;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.apache.shiro.util.ByteSource;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0 := unsafe.$new(unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0;
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$$la$init$ra$$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSource$org.apache.shiro.util.ByteSource(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return := unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon3;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon3:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$build$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$block23;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$block23:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$block4$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$block4$1:
    assert {:sourceloc "DefaultPasswordService.java", 80, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$r4 := unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r0, unsafe.org.apache.shiro.crypto.hash.HashService$org.apache.shiro.authc.credential.DefaultPasswordService$hashService261];
    assert {:sourceloc "DefaultPasswordService.java", 80, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon11_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon11_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon11_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$r4
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$return := unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$fakelocal_0;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon11_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$r4
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon8;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon8:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$r5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashService$computeHash$org.apache.shiro.crypto.hash.HashRequest(inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r3);
    assert {:sourceloc "DefaultPasswordService.java", 80, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$return := inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$r5;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$block5;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$anon9_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$r2
   == unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 76, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$block3;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$Return:
    r2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$return;
    $exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "DefaultPasswordService.java", 70, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$this := r0;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r13, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r12, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r16, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r6, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_11, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r11, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r9, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r18, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r15, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r8, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r7, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r10, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_6, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_10, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r17, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_7, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_8, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r14, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_9, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$objIndex := unsafe.$objIndex;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$heap := unsafe.$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$this
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$this;
    assert {:sourceloc "DefaultPasswordService.java", 162, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z0 := unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r0, unsafe.boolean$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatWarned0];
    assert {:sourceloc "DefaultPasswordService.java", 162, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon43_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon43_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon43_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z0
   == 0;
    assert {:sourceloc "DefaultPasswordService.java", 162, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon3;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon3:
    assert {:sourceloc "DefaultPasswordService.java", 164, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r1 := unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r0, unsafe.org.apache.shiro.crypto.hash.format.HashFormat$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormat262];
    assert {:sourceloc "DefaultPasswordService.java", 166, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z1 := unsafe.$boolToInt(inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r1
       != unsafe.$null
     && unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r1, unsafe.$type]
       <: unsafe.org.apache.shiro.crypto.hash.format.ParsableHashFormat);
    assert {:sourceloc "DefaultPasswordService.java", 166, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon44_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon44_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon44_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z1
   == 0;
    assert {:sourceloc "DefaultPasswordService.java", 166, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon6;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon6:
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r3 := unsafe.org.slf4j.Logger$org.apache.shiro.authc.credential.DefaultPasswordService$log260;
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon45_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon45_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon45_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r3
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_0;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon45_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r3
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon9;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon9:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := unsafe.org.slf4j.Logger$isWarnEnabled$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r3);
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon46_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon46_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon46_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z2
   != 0;
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon12;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon12:
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r4 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_1;
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$$la$init$ra$$$0$Entry;

  inline$java.lang.StringBuilder$$la$init$ra$$$0$Entry:
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r4;
    havoc inline$java.lang.StringBuilder$$la$init$ra$$$0$$fakelocal_0, inline$java.lang.StringBuilder$$la$init$ra$$$0$r0, inline$java.lang.StringBuilder$$la$init$ra$$$0$$r1, inline$java.lang.StringBuilder$$la$init$ra$$$0$$exception;
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$$la$init$ra$$$0$anon0;

  inline$java.lang.StringBuilder$$la$init$ra$$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$$la$init$ra$$$0$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$$la$init$ra$$$0$$this != unsafe.$null;
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$$la$init$ra$$$0$r0 := inline$java.lang.StringBuilder$$la$init$ra$$$0$$this;
    assert {:sourceloc "StringBuilder.java", 3, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := inline$java.lang.StringBuilder$$la$init$ra$$$0$r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.StringBuilder$$la$init$ra$$$0$anon0$1;

  inline$java.lang.StringBuilder$$la$init$ra$$$0$anon0$1:
    assert {:sourceloc "StringBuilder.java", 4, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$$la$init$ra$$$0$$fakelocal_0 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$$la$init$ra$$$0$$fakelocal_0 := 0];
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$r1 := inline$java.lang.StringBuilder$$la$init$ra$$$0$$fakelocal_0;
    assert {:sourceloc "StringBuilder.java", 4, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$$la$init$ra$$$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$$la$init$ra$$$0$$r1];
    assert {:sourceloc "StringBuilder.java", 4, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$$la$init$ra$$$0$block42;

  inline$java.lang.StringBuilder$$la$init$ra$$$0$block42:
    goto inline$java.lang.StringBuilder$$la$init$ra$$$0$Return;

  inline$java.lang.StringBuilder$$la$init$ra$$$0$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$java.lang.StringBuilder$$la$init$ra$$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon12$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon12$1:
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$0$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r4;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$in_parameter__0 := unsafe.$StringConst1;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$0$r2, inline$java.lang.StringBuilder$append$java.lang.String$0$$c6, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$0$$r4, inline$java.lang.StringBuilder$append$java.lang.String$0$$r5, inline$java.lang.StringBuilder$append$java.lang.String$0$$i3, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$0$i7, inline$java.lang.StringBuilder$append$java.lang.String$0$$r7, inline$java.lang.StringBuilder$append$java.lang.String$0$$i1, inline$java.lang.StringBuilder$append$java.lang.String$0$$i0, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$0$$i4, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$0$r0, inline$java.lang.StringBuilder$append$java.lang.String$0$$c5, inline$java.lang.StringBuilder$append$java.lang.String$0$r1, inline$java.lang.StringBuilder$append$java.lang.String$0$$r8, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$0$i8, inline$java.lang.StringBuilder$append$java.lang.String$0$$r6, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$0$$r3, inline$java.lang.StringBuilder$append$java.lang.String$0$$i2, inline$java.lang.StringBuilder$append$java.lang.String$0$$r9, inline$java.lang.StringBuilder$append$java.lang.String$0$$return, inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$r0 := inline$java.lang.StringBuilder$append$java.lang.String$0$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$r1 := inline$java.lang.StringBuilder$append$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$0$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$0$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$0$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$0$r2 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$0$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$0$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$0$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$0$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$0$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$0$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$0$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$0$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$0$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$0$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$0$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r9][inline$java.lang.StringBuilder$append$java.lang.String$0$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$0$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2][inline$java.lang.StringBuilder$append$java.lang.String$0$i7 := inline$java.lang.StringBuilder$append$java.lang.String$0$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$i7 := inline$java.lang.StringBuilder$append$java.lang.String$0$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$0$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$0$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$0$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$0$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$0$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$0$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$0$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$0$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$0$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$0$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$0$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$0$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r8][inline$java.lang.StringBuilder$append$java.lang.String$0$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2][inline$java.lang.StringBuilder$append$java.lang.String$0$i8 := inline$java.lang.StringBuilder$append$java.lang.String$0$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$i8 := inline$java.lang.StringBuilder$append$java.lang.String$0$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$0$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$0$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := inline$java.lang.StringBuilder$append$java.lang.String$0$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r5 := inline$java.lang.StringBuilder$append$java.lang.String$0$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon12$2;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon12$2:
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon47_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon47_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon47_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r1
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_2;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon47_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r1
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon15;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon15:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r6, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := unsafe.java.lang.Object$getClass$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r1);
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon48_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon48_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon48_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r6
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_3;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon48_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r6
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon18;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon18:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r7, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := unsafe.java.lang.Class$getName$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r6);
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon49_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon49_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon49_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r5
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_4;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon49_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r5
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon21;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon21:
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$1$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r7;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$1$r2, inline$java.lang.StringBuilder$append$java.lang.String$1$$c6, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$1$$r4, inline$java.lang.StringBuilder$append$java.lang.String$1$$r5, inline$java.lang.StringBuilder$append$java.lang.String$1$$i3, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$1$i7, inline$java.lang.StringBuilder$append$java.lang.String$1$$r7, inline$java.lang.StringBuilder$append$java.lang.String$1$$i1, inline$java.lang.StringBuilder$append$java.lang.String$1$$i0, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$1$$i4, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$1$r0, inline$java.lang.StringBuilder$append$java.lang.String$1$$c5, inline$java.lang.StringBuilder$append$java.lang.String$1$r1, inline$java.lang.StringBuilder$append$java.lang.String$1$$r8, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$1$i8, inline$java.lang.StringBuilder$append$java.lang.String$1$$r6, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$1$$r3, inline$java.lang.StringBuilder$append$java.lang.String$1$$i2, inline$java.lang.StringBuilder$append$java.lang.String$1$$r9, inline$java.lang.StringBuilder$append$java.lang.String$1$$return, inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$1$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$r0 := inline$java.lang.StringBuilder$append$java.lang.String$1$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$r1 := inline$java.lang.StringBuilder$append$java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$1$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$1$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$1$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$1$r2 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$1$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$1$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$1$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$1$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$1$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$1$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$1$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$1$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$1$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$1$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$1$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r9][inline$java.lang.StringBuilder$append$java.lang.String$1$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$1$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2][inline$java.lang.StringBuilder$append$java.lang.String$1$i7 := inline$java.lang.StringBuilder$append$java.lang.String$1$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$i7 := inline$java.lang.StringBuilder$append$java.lang.String$1$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$1$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$1$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$1$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$1$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$1$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$1$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$1$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$1$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$1$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$1$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$1$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$1$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r8][inline$java.lang.StringBuilder$append$java.lang.String$1$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2][inline$java.lang.StringBuilder$append$java.lang.String$1$i8 := inline$java.lang.StringBuilder$append$java.lang.String$1$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$i8 := inline$java.lang.StringBuilder$append$java.lang.String$1$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$1$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$1$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := inline$java.lang.StringBuilder$append$java.lang.String$1$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r8 := inline$java.lang.StringBuilder$append$java.lang.String$1$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon21$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon21$1:
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon50_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon50_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon50_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r8
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_5;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon50_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r8
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon24;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon24:
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$2$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$in_parameter__0 := unsafe.$StringConst2;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$2$r2, inline$java.lang.StringBuilder$append$java.lang.String$2$$c6, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$2$$r4, inline$java.lang.StringBuilder$append$java.lang.String$2$$r5, inline$java.lang.StringBuilder$append$java.lang.String$2$$i3, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$2$i7, inline$java.lang.StringBuilder$append$java.lang.String$2$$r7, inline$java.lang.StringBuilder$append$java.lang.String$2$$i1, inline$java.lang.StringBuilder$append$java.lang.String$2$$i0, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$2$$i4, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$2$r0, inline$java.lang.StringBuilder$append$java.lang.String$2$$c5, inline$java.lang.StringBuilder$append$java.lang.String$2$r1, inline$java.lang.StringBuilder$append$java.lang.String$2$$r8, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$2$i8, inline$java.lang.StringBuilder$append$java.lang.String$2$$r6, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$2$$r3, inline$java.lang.StringBuilder$append$java.lang.String$2$$i2, inline$java.lang.StringBuilder$append$java.lang.String$2$$r9, inline$java.lang.StringBuilder$append$java.lang.String$2$$return, inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$2$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$r0 := inline$java.lang.StringBuilder$append$java.lang.String$2$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$r1 := inline$java.lang.StringBuilder$append$java.lang.String$2$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$2$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$2$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$2$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$2$r2 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$2$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$2$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$2$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$2$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$2$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$2$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$2$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$2$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$2$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$2$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$2$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r9][inline$java.lang.StringBuilder$append$java.lang.String$2$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$2$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2][inline$java.lang.StringBuilder$append$java.lang.String$2$i7 := inline$java.lang.StringBuilder$append$java.lang.String$2$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$i7 := inline$java.lang.StringBuilder$append$java.lang.String$2$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$2$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$2$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$2$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$2$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$2$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$2$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$2$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$2$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$2$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$2$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$2$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$2$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$2$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r8][inline$java.lang.StringBuilder$append$java.lang.String$2$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$2$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2][inline$java.lang.StringBuilder$append$java.lang.String$2$i8 := inline$java.lang.StringBuilder$append$java.lang.String$2$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$i8 := inline$java.lang.StringBuilder$append$java.lang.String$2$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$2$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$2$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := inline$java.lang.StringBuilder$append$java.lang.String$2$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r9 := inline$java.lang.StringBuilder$append$java.lang.String$2$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon24$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon24$1:
    assert {:sourceloc "DefaultPasswordService.java", 168, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r10 := unsafe.CC$org$_$apache$_$shiro$_$crypto$_$hash$_$format$_$ParsableHashFormat;
    assert {:sourceloc "DefaultPasswordService.java", 168, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r11, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := unsafe.java.lang.Class$getName$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r10);
    assert {:sourceloc "DefaultPasswordService.java", 168, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon51_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon51_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon51_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r9
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_6;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon51_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r9
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon27;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon27:
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$3$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r9;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r11;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$3$r2, inline$java.lang.StringBuilder$append$java.lang.String$3$$c6, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$3$$r4, inline$java.lang.StringBuilder$append$java.lang.String$3$$r5, inline$java.lang.StringBuilder$append$java.lang.String$3$$i3, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$3$i7, inline$java.lang.StringBuilder$append$java.lang.String$3$$r7, inline$java.lang.StringBuilder$append$java.lang.String$3$$i1, inline$java.lang.StringBuilder$append$java.lang.String$3$$i0, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$3$$i4, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$3$r0, inline$java.lang.StringBuilder$append$java.lang.String$3$$c5, inline$java.lang.StringBuilder$append$java.lang.String$3$r1, inline$java.lang.StringBuilder$append$java.lang.String$3$$r8, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$3$i8, inline$java.lang.StringBuilder$append$java.lang.String$3$$r6, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$3$$r3, inline$java.lang.StringBuilder$append$java.lang.String$3$$i2, inline$java.lang.StringBuilder$append$java.lang.String$3$$r9, inline$java.lang.StringBuilder$append$java.lang.String$3$$return, inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$3$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$r0 := inline$java.lang.StringBuilder$append$java.lang.String$3$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$r1 := inline$java.lang.StringBuilder$append$java.lang.String$3$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$3$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$3$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$3$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$3$r2 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$3$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$3$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$3$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$3$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$3$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$3$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$3$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$3$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$3$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$3$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$3$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r9][inline$java.lang.StringBuilder$append$java.lang.String$3$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$3$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2][inline$java.lang.StringBuilder$append$java.lang.String$3$i7 := inline$java.lang.StringBuilder$append$java.lang.String$3$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$i7 := inline$java.lang.StringBuilder$append$java.lang.String$3$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$3$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$3$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$3$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$3$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$3$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$3$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$3$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$3$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$3$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$3$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$3$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$3$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$3$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r8][inline$java.lang.StringBuilder$append$java.lang.String$3$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$3$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2][inline$java.lang.StringBuilder$append$java.lang.String$3$i8 := inline$java.lang.StringBuilder$append$java.lang.String$3$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$i8 := inline$java.lang.StringBuilder$append$java.lang.String$3$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$3$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$3$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := inline$java.lang.StringBuilder$append$java.lang.String$3$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r12 := inline$java.lang.StringBuilder$append$java.lang.String$3$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon27$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon27$1:
    assert {:sourceloc "DefaultPasswordService.java", 168, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon52_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon52_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon52_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r12
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_7;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon52_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r12
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon30;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon30:
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$4$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r12;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$in_parameter__0 := unsafe.$StringConst3;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$4$r2, inline$java.lang.StringBuilder$append$java.lang.String$4$$c6, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$4$$r4, inline$java.lang.StringBuilder$append$java.lang.String$4$$r5, inline$java.lang.StringBuilder$append$java.lang.String$4$$i3, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$4$i7, inline$java.lang.StringBuilder$append$java.lang.String$4$$r7, inline$java.lang.StringBuilder$append$java.lang.String$4$$i1, inline$java.lang.StringBuilder$append$java.lang.String$4$$i0, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$4$$i4, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$4$r0, inline$java.lang.StringBuilder$append$java.lang.String$4$$c5, inline$java.lang.StringBuilder$append$java.lang.String$4$r1, inline$java.lang.StringBuilder$append$java.lang.String$4$$r8, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$4$i8, inline$java.lang.StringBuilder$append$java.lang.String$4$$r6, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$4$$r3, inline$java.lang.StringBuilder$append$java.lang.String$4$$i2, inline$java.lang.StringBuilder$append$java.lang.String$4$$r9, inline$java.lang.StringBuilder$append$java.lang.String$4$$return, inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$4$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$r0 := inline$java.lang.StringBuilder$append$java.lang.String$4$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$r1 := inline$java.lang.StringBuilder$append$java.lang.String$4$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$4$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$4$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$4$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$4$r2 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$4$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$4$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$4$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$4$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$4$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$4$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$4$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$4$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$4$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$4$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$4$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r9][inline$java.lang.StringBuilder$append$java.lang.String$4$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$4$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2][inline$java.lang.StringBuilder$append$java.lang.String$4$i7 := inline$java.lang.StringBuilder$append$java.lang.String$4$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$i7 := inline$java.lang.StringBuilder$append$java.lang.String$4$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$4$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$4$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$4$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$4$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$4$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$4$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$4$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$4$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$4$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$4$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$4$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$4$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$4$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r8][inline$java.lang.StringBuilder$append$java.lang.String$4$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$4$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2][inline$java.lang.StringBuilder$append$java.lang.String$4$i8 := inline$java.lang.StringBuilder$append$java.lang.String$4$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$i8 := inline$java.lang.StringBuilder$append$java.lang.String$4$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$4$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$4$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := inline$java.lang.StringBuilder$append$java.lang.String$4$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r13 := inline$java.lang.StringBuilder$append$java.lang.String$4$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon30$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon30$1:
    assert {:sourceloc "DefaultPasswordService.java", 170, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r14 := unsafe.CC$org$_$apache$_$shiro$_$crypto$_$hash$_$format$_$ParsableHashFormat;
    assert {:sourceloc "DefaultPasswordService.java", 170, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r15, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := unsafe.java.lang.Class$getSimpleName$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r14);
    assert {:sourceloc "DefaultPasswordService.java", 170, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon53_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon53_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon53_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r13
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_8;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon53_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r13
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon33;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon33:
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$5$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r13;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r15;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$5$r2, inline$java.lang.StringBuilder$append$java.lang.String$5$$c6, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$5$$r4, inline$java.lang.StringBuilder$append$java.lang.String$5$$r5, inline$java.lang.StringBuilder$append$java.lang.String$5$$i3, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$5$i7, inline$java.lang.StringBuilder$append$java.lang.String$5$$r7, inline$java.lang.StringBuilder$append$java.lang.String$5$$i1, inline$java.lang.StringBuilder$append$java.lang.String$5$$i0, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$5$$i4, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$5$r0, inline$java.lang.StringBuilder$append$java.lang.String$5$$c5, inline$java.lang.StringBuilder$append$java.lang.String$5$r1, inline$java.lang.StringBuilder$append$java.lang.String$5$$r8, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$5$i8, inline$java.lang.StringBuilder$append$java.lang.String$5$$r6, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$5$$r3, inline$java.lang.StringBuilder$append$java.lang.String$5$$i2, inline$java.lang.StringBuilder$append$java.lang.String$5$$r9, inline$java.lang.StringBuilder$append$java.lang.String$5$$return, inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$5$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$r0 := inline$java.lang.StringBuilder$append$java.lang.String$5$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$r1 := inline$java.lang.StringBuilder$append$java.lang.String$5$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$5$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$5$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$5$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$5$r2 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$5$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$5$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$5$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$5$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$5$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$5$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$5$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$5$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$5$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$5$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$5$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r9][inline$java.lang.StringBuilder$append$java.lang.String$5$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$5$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2][inline$java.lang.StringBuilder$append$java.lang.String$5$i7 := inline$java.lang.StringBuilder$append$java.lang.String$5$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$i7 := inline$java.lang.StringBuilder$append$java.lang.String$5$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$5$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$5$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$5$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$5$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$5$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$5$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$5$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$5$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$5$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$5$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$5$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$5$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$5$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r8][inline$java.lang.StringBuilder$append$java.lang.String$5$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$5$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2][inline$java.lang.StringBuilder$append$java.lang.String$5$i8 := inline$java.lang.StringBuilder$append$java.lang.String$5$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$i8 := inline$java.lang.StringBuilder$append$java.lang.String$5$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$5$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$5$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := inline$java.lang.StringBuilder$append$java.lang.String$5$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r16 := inline$java.lang.StringBuilder$append$java.lang.String$5$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon33$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon33$1:
    assert {:sourceloc "DefaultPasswordService.java", 170, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon54_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon54_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon54_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r16
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_9;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon54_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r16
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon36;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon36:
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$6$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r16;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$in_parameter__0 := unsafe.$StringConst4;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$6$r2, inline$java.lang.StringBuilder$append$java.lang.String$6$$c6, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$6$$r4, inline$java.lang.StringBuilder$append$java.lang.String$6$$r5, inline$java.lang.StringBuilder$append$java.lang.String$6$$i3, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$6$i7, inline$java.lang.StringBuilder$append$java.lang.String$6$$r7, inline$java.lang.StringBuilder$append$java.lang.String$6$$i1, inline$java.lang.StringBuilder$append$java.lang.String$6$$i0, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$6$$i4, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$6$r0, inline$java.lang.StringBuilder$append$java.lang.String$6$$c5, inline$java.lang.StringBuilder$append$java.lang.String$6$r1, inline$java.lang.StringBuilder$append$java.lang.String$6$$r8, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$6$i8, inline$java.lang.StringBuilder$append$java.lang.String$6$$r6, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$6$$r3, inline$java.lang.StringBuilder$append$java.lang.String$6$$i2, inline$java.lang.StringBuilder$append$java.lang.String$6$$r9, inline$java.lang.StringBuilder$append$java.lang.String$6$$return, inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$6$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$r0 := inline$java.lang.StringBuilder$append$java.lang.String$6$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$r1 := inline$java.lang.StringBuilder$append$java.lang.String$6$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$6$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$6$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$6$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$6$r2 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$6$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$6$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$6$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$6$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$6$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$6$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$6$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$6$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$6$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$6$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$6$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r9][inline$java.lang.StringBuilder$append$java.lang.String$6$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$6$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2][inline$java.lang.StringBuilder$append$java.lang.String$6$i7 := inline$java.lang.StringBuilder$append$java.lang.String$6$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$i7 := inline$java.lang.StringBuilder$append$java.lang.String$6$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$6$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$6$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$6$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$6$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$6$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$6$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$6$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$6$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$6$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$6$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$6$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$6$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$6$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r8][inline$java.lang.StringBuilder$append$java.lang.String$6$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$6$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2][inline$java.lang.StringBuilder$append$java.lang.String$6$i8 := inline$java.lang.StringBuilder$append$java.lang.String$6$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$i8 := inline$java.lang.StringBuilder$append$java.lang.String$6$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$6$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$6$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := inline$java.lang.StringBuilder$append$java.lang.String$6$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r17 := inline$java.lang.StringBuilder$append$java.lang.String$6$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon36$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon36$1:
    assert {:sourceloc "DefaultPasswordService.java", 170, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon55_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon55_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon55_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r17
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_10;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon55_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r17
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon39;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon39:
    goto inline$java.lang.StringBuilder$toString$$0$Entry;

  inline$java.lang.StringBuilder$toString$$0$Entry:
    inline$java.lang.StringBuilder$toString$$0$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r17;
    havoc inline$java.lang.StringBuilder$toString$$0$$fakelocal_0, inline$java.lang.StringBuilder$toString$$0$$r1, inline$java.lang.StringBuilder$toString$$0$r0, inline$java.lang.StringBuilder$toString$$0$$r2, inline$java.lang.StringBuilder$toString$$0$$return, inline$java.lang.StringBuilder$toString$$0$$exception;
    inline$java.lang.StringBuilder$toString$$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$toString$$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$toString$$0$anon0;

  inline$java.lang.StringBuilder$toString$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$toString$$0$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$toString$$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$toString$$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$java.lang.StringBuilder$toString$$0$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$toString$$0$r0 := inline$java.lang.StringBuilder$toString$$0$$this;
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$toString$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.String);
    inline$java.lang.StringBuilder$toString$$0$$r1 := inline$java.lang.StringBuilder$toString$$0$$fakelocal_0;
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    inline$java.lang.StringBuilder$toString$$0$$r2 := unsafe.$heap[inline$java.lang.StringBuilder$toString$$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Entry;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Entry:
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this := inline$java.lang.StringBuilder$toString$$0$$r1;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$in_parameter__0 := inline$java.lang.StringBuilder$toString$$0$$r2;
    havoc inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0, inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1, inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this != unsafe.$null;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0 := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1 := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "String.java", 6, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$1$Entry;

  inline$java.lang.Object$$la$init$ra$$$1$Entry:
    inline$java.lang.Object$$la$init$ra$$$1$$this := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0;
    havoc inline$java.lang.Object$$la$init$ra$$$1$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$1$anon0;

  inline$java.lang.Object$$la$init$ra$$$1$anon0:
    inline$java.lang.Object$$la$init$ra$$$1$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$1$Return;

  inline$java.lang.Object$$la$init$ra$$$1$Return:
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception := inline$java.lang.Object$$la$init$ra$$$1$$exception;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0$1;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0$1:
    assert {:sourceloc "String.java", 7, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0, unsafe.char$lp$$rp$$java.lang.String$chars306 := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1];
    assert {:sourceloc "String.java", 8, -1, -1, -1} true;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block49;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block49:
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return:
    inline$java.lang.StringBuilder$toString$$0$$exception := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception;
    goto inline$java.lang.StringBuilder$toString$$0$anon0$1;

  inline$java.lang.StringBuilder$toString$$0$anon0$1:
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    inline$java.lang.StringBuilder$toString$$0$$return := inline$java.lang.StringBuilder$toString$$0$$r1;
    goto inline$java.lang.StringBuilder$toString$$0$block48;

  inline$java.lang.StringBuilder$toString$$0$block48:
    goto inline$java.lang.StringBuilder$toString$$0$Return;

  inline$java.lang.StringBuilder$toString$$0$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r2 := inline$java.lang.StringBuilder$toString$$0$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$java.lang.StringBuilder$toString$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon39$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon39$1:
    assert {:sourceloc "DefaultPasswordService.java", 172, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r18 := unsafe.org.slf4j.Logger$org.apache.shiro.authc.credential.DefaultPasswordService$log260;
    assert {:sourceloc "DefaultPasswordService.java", 172, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon56_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon56_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon56_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r18
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_11 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$fakelocal_11;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon56_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r18
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon42;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon42:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception := unsafe.org.slf4j.Logger$warn$java.lang.String(inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$r18, inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r2);
    assert {:sourceloc "DefaultPasswordService.java", 173, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$r0, unsafe.boolean$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatWarned0 := 1];
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$block21;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$block21:
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$block22;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$block22:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon46_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z2
   == 0;
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$block21;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon44_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z1
   != 0;
    assert {:sourceloc "DefaultPasswordService.java", 166, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$block21;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$anon43_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$z0
   != 0;
    assert {:sourceloc "DefaultPasswordService.java", 162, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$block21;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$Return:
    $exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$$0$$exception;
    goto anon0$2;

  anon0$2:
    assert {:sourceloc "DefaultPasswordService.java", 71, -1, -1, -1} true;
    $r3 := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.format.HashFormat$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormat262];
    assert {:sourceloc "DefaultPasswordService.java", 71, -1, -1, -1} true;
    goto anon4_Then, anon4_Else;

  anon4_Else:
    assume {:partition} $r3 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon4_Then:
    assume {:partition} $r3 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $r4, $exception := unsafe.org.apache.shiro.crypto.hash.format.HashFormat$format$org.apache.shiro.crypto.hash.Hash($r3, r2);
    assert {:sourceloc "DefaultPasswordService.java", 71, -1, -1, -1} true;
    $return := $r4;
    goto block2;

  block2:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$hashPassword$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var $r5: ref;
  var r3: ref;
  var $fakelocal_0: ref;
  var r1: ref;
  var r0: ref;
  var $z0: int;
  var r2: ref;
  var $r4: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$objIndex: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.org.apache.shiro.crypto.hash.Hash;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.Object;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 75, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this := r0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0 := r1;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return, unsafe.$type]
   <: unsafe.org.apache.shiro.util.ByteSource;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.Object;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 183, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception := unsafe.org.apache.shiro.util.ByteSource$Util$bytes$java.lang.Object(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1);
    assert {:sourceloc "DefaultPasswordService.java", 183, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$block24;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$block24:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Return:
    r2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return;
    $exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "DefaultPasswordService.java", 76, -1, -1, -1} true;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} r2 != unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 76, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "DefaultPasswordService.java", 77, -1, -1, -1} true;
    call $z0, $exception := unsafe.org.apache.shiro.util.ByteSource$isEmpty$(r2);
    assert {:sourceloc "DefaultPasswordService.java", 77, -1, -1, -1} true;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} $z0 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 77, -1, -1, -1} {:comment "elseblock"} true;
    goto block3;

  block3:
    assert {:sourceloc "DefaultPasswordService.java", 77, -1, -1, -1} true;
    $return := unsafe.$null;
    goto block5;

  block5:
    return;

  anon10_Then:
    assume {:partition} $z0 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 77, -1, -1, -1} {:comment "thenblock"} true;
    goto block4;

  block4:
    assert {:sourceloc "DefaultPasswordService.java", 79, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this := r0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0 := r2;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$objIndex := unsafe.$objIndex;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$heap := unsafe.$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.HashRequest;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.apache.shiro.util.ByteSource;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0 := unsafe.$new(unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0;
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$$la$init$ra$$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSource$org.apache.shiro.util.ByteSource(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return := unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon3;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon3:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$build$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$block23;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$block23:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Return:
    r3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return;
    $exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception;
    goto block4$1;

  block4$1:
    assert {:sourceloc "DefaultPasswordService.java", 80, -1, -1, -1} true;
    $r4 := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.HashService$org.apache.shiro.authc.credential.DefaultPasswordService$hashService261];
    assert {:sourceloc "DefaultPasswordService.java", 80, -1, -1, -1} true;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} $r4 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon11_Then:
    assume {:partition} $r4 != unsafe.$null;
    $exception := $exception;
    goto anon8;

  anon8:
    call $r5, $exception := unsafe.org.apache.shiro.crypto.hash.HashService$computeHash$org.apache.shiro.crypto.hash.HashRequest($r4, r3);
    assert {:sourceloc "DefaultPasswordService.java", 80, -1, -1, -1} true;
    $return := $r5;
    goto block5;

  anon9_Then:
    assume {:partition} r2 == unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 76, -1, -1, -1} {:comment "thenblock"} true;
    goto block3;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref)
{
  var r2: ref;
  var r1: ref;
  var r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.Hash;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.Object;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "DefaultPasswordService.java", 84, -1, -1, -1} true;
    $return := 0;
    goto block6;

  block6:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch_unsafe$java.lang.Object_org.apache.shiro.crypto.hash.Hash($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref)
{
  var $z4: int;
  var $z0: int;
  var $z2: int;
  var r2: ref;
  var $r8: ref;
  var r0: ref;
  var $z3: int;
  var $z1: int;
  var $fakelocal_0: ref;
  var r4: ref;
  var $r6: ref;
  var $fakelocal_1: ref;
  var r3: ref;
  var r5: ref;
  var $r7: ref;
  var r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r7: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r5: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r6: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_5: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_4: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r9: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r8: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$i0: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r4: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r10: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$this: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$return: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$objIndex: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$heap: $heap_type;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$z0: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i1: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$fakelocal_0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$fakelocal_1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c3: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i5: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i0: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i4: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c2: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$in_parameter__0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$in_parameter__1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$return: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$objIndex: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$heap: $heap_type;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap: $heap_type;
  var inline$java.lang.String$charAt$int$0$i0: int;
  var inline$java.lang.String$charAt$int$0$r0: ref;
  var inline$java.lang.String$charAt$int$0$$c1: int;
  var inline$java.lang.String$charAt$int$0$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$0$$r1: ref;
  var inline$java.lang.String$charAt$int$0$$this: ref;
  var inline$java.lang.String$charAt$int$0$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$0$$return: int;
  var inline$java.lang.String$charAt$int$0$$exception: ref;
  var inline$java.lang.String$charAt$int$0$$objIndex: int;
  var inline$java.lang.String$charAt$int$0$$heap: $heap_type;
  var inline$java.lang.String$charAt$int$1$i0: int;
  var inline$java.lang.String$charAt$int$1$r0: ref;
  var inline$java.lang.String$charAt$int$1$$c1: int;
  var inline$java.lang.String$charAt$int$1$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$1$$r1: ref;
  var inline$java.lang.String$charAt$int$1$$this: ref;
  var inline$java.lang.String$charAt$int$1$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$1$$return: int;
  var inline$java.lang.String$charAt$int$1$$exception: ref;
  var inline$java.lang.String$charAt$int$1$$objIndex: int;
  var inline$java.lang.String$charAt$int$1$$heap: $heap_type;
  var inline$java.lang.String$charAt$int$2$i0: int;
  var inline$java.lang.String$charAt$int$2$r0: ref;
  var inline$java.lang.String$charAt$int$2$$c1: int;
  var inline$java.lang.String$charAt$int$2$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$2$$r1: ref;
  var inline$java.lang.String$charAt$int$2$$this: ref;
  var inline$java.lang.String$charAt$int$2$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$2$$return: int;
  var inline$java.lang.String$charAt$int$2$$exception: ref;
  var inline$java.lang.String$charAt$int$2$$objIndex: int;
  var inline$java.lang.String$charAt$int$2$$heap: $heap_type;
  var inline$java.lang.String$charAt$int$3$i0: int;
  var inline$java.lang.String$charAt$int$3$r0: ref;
  var inline$java.lang.String$charAt$int$3$$c1: int;
  var inline$java.lang.String$charAt$int$3$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$3$$r1: ref;
  var inline$java.lang.String$charAt$int$3$$this: ref;
  var inline$java.lang.String$charAt$int$3$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$3$$return: int;
  var inline$java.lang.String$charAt$int$3$$exception: ref;
  var inline$java.lang.String$charAt$int$3$$objIndex: int;
  var inline$java.lang.String$charAt$int$3$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.Hash;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.Object;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "DefaultPasswordService.java", 103, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this := r0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0 := r1;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return, unsafe.$type]
   <: unsafe.org.apache.shiro.util.ByteSource;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.Object;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 183, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception := unsafe.org.apache.shiro.util.ByteSource$Util$bytes$java.lang.Object(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1);
    assert {:sourceloc "DefaultPasswordService.java", 183, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$block24;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$block24:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Return:
    r3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return;
    $exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "DefaultPasswordService.java", 105, -1, -1, -1} true;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} r2 != unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 105, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} true;
    call $z1, $exception := unsafe.org.apache.shiro.crypto.hash.Hash$isEmpty$(r2);
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} true;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} $z1 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} {:comment "elseblock"} true;
    goto block7;

  block7:
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} true;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} r3 != unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto anon8;

  anon8:
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} true;
    call $z0, $exception := unsafe.org.apache.shiro.util.ByteSource$isEmpty$(r3);
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} true;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} $z0 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} {:comment "elseblock"} true;
    goto block9;

  block9:
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} true;
    $z4 := 1;
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} true;
    goto block11;

  block11:
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} true;
    $return := $z4;
    goto block14;

  block14:
    return;

  anon25_Then:
    assume {:partition} $z0 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} {:comment "thenblock"} true;
    goto block10;

  block10:
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} true;
    $z4 := 0;
    goto block11;

  anon24_Then:
    assume {:partition} r3 == unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    goto block9;

  anon23_Then:
    assume {:partition} $z1 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 106, -1, -1, -1} {:comment "thenblock"} true;
    goto block8;

  block8:
    assert {:sourceloc "DefaultPasswordService.java", 108, -1, -1, -1} true;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} r3 != unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 108, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto anon13;

  anon13:
    assert {:sourceloc "DefaultPasswordService.java", 109, -1, -1, -1} true;
    call $z2, $exception := unsafe.org.apache.shiro.util.ByteSource$isEmpty$(r3);
    assert {:sourceloc "DefaultPasswordService.java", 109, -1, -1, -1} true;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} $z2 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 109, -1, -1, -1} {:comment "elseblock"} true;
    goto block12;

  block12:
    assert {:sourceloc "DefaultPasswordService.java", 109, -1, -1, -1} true;
    $return := 0;
    goto block14;

  anon27_Then:
    assume {:partition} $z2 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 109, -1, -1, -1} {:comment "thenblock"} true;
    goto block13;

  block13:
    assert {:sourceloc "DefaultPasswordService.java", 113, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$this := r0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__0 := r3;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__1 := r2;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r7, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r6, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r9, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r8, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$i0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r10, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$return, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$objIndex := unsafe.$objIndex;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$heap := unsafe.$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__1, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.Hash;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.apache.shiro.util.ByteSource;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$return, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.HashRequest;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__1;
    assert {:sourceloc "DefaultPasswordService.java", 229, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_0 := unsafe.$new(unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_0;
    assert {:sourceloc "DefaultPasswordService.java", 229, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$$la$init$ra$$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r3);
    assert {:sourceloc "DefaultPasswordService.java", 229, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSource$org.apache.shiro.util.ByteSource(inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r1);
    assert {:sourceloc "DefaultPasswordService.java", 231, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon16_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon16_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon16_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r2
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$return := unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_1;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon16_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r2
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon3;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon3:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := unsafe.org.apache.shiro.crypto.hash.Hash$getAlgorithmName$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r2);
    assert {:sourceloc "DefaultPasswordService.java", 231, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon17_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon17_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon17_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r4
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$return := unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_2;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon17_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r4
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon6;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon6:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r6, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setAlgorithmName$java.lang.String(inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r5);
    assert {:sourceloc "DefaultPasswordService.java", 232, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r7, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := unsafe.org.apache.shiro.crypto.hash.Hash$getSalt$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r2);
    assert {:sourceloc "DefaultPasswordService.java", 232, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon18_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon18_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon18_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r6
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$return := unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_3;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon18_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r6
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon9;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon9:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r8, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSalt$org.apache.shiro.util.ByteSource(inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r6, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r7);
    assert {:sourceloc "DefaultPasswordService.java", 233, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$i0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := unsafe.org.apache.shiro.crypto.hash.Hash$getIterations$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$r2);
    assert {:sourceloc "DefaultPasswordService.java", 233, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon19_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon19_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon19_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r8
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$return := unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_4;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon19_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r8
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon12;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon12:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r9, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setIterations$int(inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r8, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$i0);
    assert {:sourceloc "DefaultPasswordService.java", 234, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon20_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon20_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon20_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r9
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$return := unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$fakelocal_5;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon20_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r9
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon15;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$anon15:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r10, inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$build$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r9);
    assert {:sourceloc "DefaultPasswordService.java", 229, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$return := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$r10;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$block34;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$block34:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$Return:
    r4 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$return;
    $exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash$0$$exception;
    goto block13$1;

  block13$1:
    assert {:sourceloc "DefaultPasswordService.java", 115, -1, -1, -1} true;
    $r6 := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.HashService$org.apache.shiro.authc.credential.DefaultPasswordService$hashService261];
    assert {:sourceloc "DefaultPasswordService.java", 115, -1, -1, -1} true;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} $r6 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon28_Then:
    assume {:partition} $r6 != unsafe.$null;
    $exception := $exception;
    goto anon18;

  anon18:
    call r5, $exception := unsafe.org.apache.shiro.crypto.hash.HashService$computeHash$org.apache.shiro.crypto.hash.HashRequest($r6, r4);
    assert {:sourceloc "DefaultPasswordService.java", 117, -1, -1, -1} true;
    call $r7, $exception := unsafe.java.lang.Object$toString$(r2);
    assert {:sourceloc "DefaultPasswordService.java", 117, -1, -1, -1} true;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} r5 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_1;
    return;

  anon29_Then:
    assume {:partition} r5 != unsafe.$null;
    $exception := $exception;
    goto anon21;

  anon21:
    call $r8, $exception := unsafe.java.lang.Object$toString$(r5);
    assert {:sourceloc "DefaultPasswordService.java", 117, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$in_parameter__0 := $r7;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$in_parameter__1 := $r8;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$z0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$fakelocal_0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$fakelocal_1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$return, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$objIndex := unsafe.$objIndex;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$heap := unsafe.$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.Object;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.Object;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$in_parameter__1;
    assert {:sourceloc "DefaultPasswordService.java", 140, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon22_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon22_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon22_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r0
   == inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r1;
    assert {:sourceloc "DefaultPasswordService.java", 140, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon3;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon3:
    assert {:sourceloc "DefaultPasswordService.java", 141, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$return := 1;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block20;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block20:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon22_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r0
   != inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r1;
    assert {:sourceloc "DefaultPasswordService.java", 140, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block15;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block15:
    assert {:sourceloc "DefaultPasswordService.java", 143, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$z0 := unsafe.$boolToInt(inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r1
       != unsafe.$null
     && unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r1, unsafe.$type]
       <: unsafe.java.lang.String);
    assert {:sourceloc "DefaultPasswordService.java", 143, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon23_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon23_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon23_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$z0
   != 0;
    assert {:sourceloc "DefaultPasswordService.java", 143, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon6;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon6:
    assert {:sourceloc "DefaultPasswordService.java", 144, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon24_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon24_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon24_Else:
    assume {:partition} !(unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r0, unsafe.$type]
   <: unsafe.java.lang.String);
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$return := 0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$fakelocal_0;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon24_Then:
    assume {:partition} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon9;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon9:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r0;
    assert {:sourceloc "DefaultPasswordService.java", 145, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon25_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon25_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r1, unsafe.$type]
   <: unsafe.java.lang.String);
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$return := 0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$fakelocal_1;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon25_Then:
    assume {:partition} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r1, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon12;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon12:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r1;
    assert {:sourceloc "DefaultPasswordService.java", 146, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i4 := unsafe.$stringSizeHeap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r2];
    assert {:sourceloc "DefaultPasswordService.java", 147, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i0 := unsafe.$stringSizeHeap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r3];
    assert {:sourceloc "DefaultPasswordService.java", 147, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon26_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon26_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon26_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i4
   == inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i0;
    assert {:sourceloc "DefaultPasswordService.java", 147, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon15;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon15:
    assert {:sourceloc "DefaultPasswordService.java", 148, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i5 := 0;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block17;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block17:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i1;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c3;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i5;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i4;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c2;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r2;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r3;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex := unsafe.$objIndex;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap := unsafe.$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block17;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block17:
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4
   + -1;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1
   == 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2;
    unsafe.$objIndex, unsafe.$heap := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19:
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5
   + 1;
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19_dummy;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2
   == inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$0$Entry;

  inline$java.lang.String$charAt$int$0$Entry:
    inline$java.lang.String$charAt$int$0$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r2;
    inline$java.lang.String$charAt$int$0$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5;
    havoc inline$java.lang.String$charAt$int$0$i0, inline$java.lang.String$charAt$int$0$r0, inline$java.lang.String$charAt$int$0$$c1, inline$java.lang.String$charAt$int$0$$fakelocal_0, inline$java.lang.String$charAt$int$0$$r1, inline$java.lang.String$charAt$int$0$$return, inline$java.lang.String$charAt$int$0$$exception;
    inline$java.lang.String$charAt$int$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$0$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$0$anon0;

  inline$java.lang.String$charAt$int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$0$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$0$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$0$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$r0 := inline$java.lang.String$charAt$int$0$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$i0 := inline$java.lang.String$charAt$int$0$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$0$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$0$anon4_Then, inline$java.lang.String$charAt$int$0$anon4_Else;

  inline$java.lang.String$charAt$int$0$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$0$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$0$$r1]
   && inline$java.lang.String$charAt$int$0$i0 >= 0);
    call inline$java.lang.String$charAt$int$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$0$$return := 0;
    inline$java.lang.String$charAt$int$0$$exception := inline$java.lang.String$charAt$int$0$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$0$Return;

  inline$java.lang.String$charAt$int$0$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$0$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$0$$r1]
   && inline$java.lang.String$charAt$int$0$i0 >= 0;
    inline$java.lang.String$charAt$int$0$$exception := inline$java.lang.String$charAt$int$0$$exception;
    goto inline$java.lang.String$charAt$int$0$anon3;

  inline$java.lang.String$charAt$int$0$anon3:
    inline$java.lang.String$charAt$int$0$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$0$$r1][inline$java.lang.String$charAt$int$0$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$$return := inline$java.lang.String$charAt$int$0$$c1;
    goto inline$java.lang.String$charAt$int$0$block50;

  inline$java.lang.String$charAt$int$0$block50:
    goto inline$java.lang.String$charAt$int$0$Return;

  inline$java.lang.String$charAt$int$0$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$java.lang.String$charAt$int$0$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception := inline$java.lang.String$charAt$int$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$1:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$1$Entry;

  inline$java.lang.String$charAt$int$1$Entry:
    inline$java.lang.String$charAt$int$1$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r3;
    inline$java.lang.String$charAt$int$1$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5;
    havoc inline$java.lang.String$charAt$int$1$i0, inline$java.lang.String$charAt$int$1$r0, inline$java.lang.String$charAt$int$1$$c1, inline$java.lang.String$charAt$int$1$$fakelocal_0, inline$java.lang.String$charAt$int$1$$r1, inline$java.lang.String$charAt$int$1$$return, inline$java.lang.String$charAt$int$1$$exception;
    inline$java.lang.String$charAt$int$1$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$1$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$1$anon0;

  inline$java.lang.String$charAt$int$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$1$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$1$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$1$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$r0 := inline$java.lang.String$charAt$int$1$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$i0 := inline$java.lang.String$charAt$int$1$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$1$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$1$anon4_Then, inline$java.lang.String$charAt$int$1$anon4_Else;

  inline$java.lang.String$charAt$int$1$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$1$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$1$$r1]
   && inline$java.lang.String$charAt$int$1$i0 >= 0);
    call inline$java.lang.String$charAt$int$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$1$$return := 0;
    inline$java.lang.String$charAt$int$1$$exception := inline$java.lang.String$charAt$int$1$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$1$Return;

  inline$java.lang.String$charAt$int$1$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$1$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$1$$r1]
   && inline$java.lang.String$charAt$int$1$i0 >= 0;
    inline$java.lang.String$charAt$int$1$$exception := inline$java.lang.String$charAt$int$1$$exception;
    goto inline$java.lang.String$charAt$int$1$anon3;

  inline$java.lang.String$charAt$int$1$anon3:
    inline$java.lang.String$charAt$int$1$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$1$$r1][inline$java.lang.String$charAt$int$1$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$$return := inline$java.lang.String$charAt$int$1$$c1;
    goto inline$java.lang.String$charAt$int$1$block50;

  inline$java.lang.String$charAt$int$1$block50:
    goto inline$java.lang.String$charAt$int$1$Return;

  inline$java.lang.String$charAt$int$1$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3 := inline$java.lang.String$charAt$int$1$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception := inline$java.lang.String$charAt$int$1$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$2;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$2:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2
   != inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "elseblock"} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2;
    unsafe.$objIndex, unsafe.$heap := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1
   != 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19_dummy:
    assume false;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$exit:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i5 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i4 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block17$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block17$1:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block17_last;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon27_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i1
   != 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon18;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon18:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$2$Entry;

  inline$java.lang.String$charAt$int$2$Entry:
    inline$java.lang.String$charAt$int$2$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r2;
    inline$java.lang.String$charAt$int$2$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i5;
    havoc inline$java.lang.String$charAt$int$2$i0, inline$java.lang.String$charAt$int$2$r0, inline$java.lang.String$charAt$int$2$$c1, inline$java.lang.String$charAt$int$2$$fakelocal_0, inline$java.lang.String$charAt$int$2$$r1, inline$java.lang.String$charAt$int$2$$return, inline$java.lang.String$charAt$int$2$$exception;
    inline$java.lang.String$charAt$int$2$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$2$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$2$anon0;

  inline$java.lang.String$charAt$int$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$2$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$2$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$2$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$r0 := inline$java.lang.String$charAt$int$2$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$i0 := inline$java.lang.String$charAt$int$2$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$2$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$2$anon4_Then, inline$java.lang.String$charAt$int$2$anon4_Else;

  inline$java.lang.String$charAt$int$2$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$2$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$2$$r1]
   && inline$java.lang.String$charAt$int$2$i0 >= 0);
    call inline$java.lang.String$charAt$int$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$2$$return := 0;
    inline$java.lang.String$charAt$int$2$$exception := inline$java.lang.String$charAt$int$2$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$2$Return;

  inline$java.lang.String$charAt$int$2$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$2$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$2$$r1]
   && inline$java.lang.String$charAt$int$2$i0 >= 0;
    inline$java.lang.String$charAt$int$2$$exception := inline$java.lang.String$charAt$int$2$$exception;
    goto inline$java.lang.String$charAt$int$2$anon3;

  inline$java.lang.String$charAt$int$2$anon3:
    inline$java.lang.String$charAt$int$2$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$2$$r1][inline$java.lang.String$charAt$int$2$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$$return := inline$java.lang.String$charAt$int$2$$c1;
    goto inline$java.lang.String$charAt$int$2$block50;

  inline$java.lang.String$charAt$int$2$block50:
    goto inline$java.lang.String$charAt$int$2$Return;

  inline$java.lang.String$charAt$int$2$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c2 := inline$java.lang.String$charAt$int$2$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception := inline$java.lang.String$charAt$int$2$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon18$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon18$1:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$3$Entry;

  inline$java.lang.String$charAt$int$3$Entry:
    inline$java.lang.String$charAt$int$3$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$r3;
    inline$java.lang.String$charAt$int$3$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i5;
    havoc inline$java.lang.String$charAt$int$3$i0, inline$java.lang.String$charAt$int$3$r0, inline$java.lang.String$charAt$int$3$$c1, inline$java.lang.String$charAt$int$3$$fakelocal_0, inline$java.lang.String$charAt$int$3$$r1, inline$java.lang.String$charAt$int$3$$return, inline$java.lang.String$charAt$int$3$$exception;
    inline$java.lang.String$charAt$int$3$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$3$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$3$anon0;

  inline$java.lang.String$charAt$int$3$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$3$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$3$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$3$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$r0 := inline$java.lang.String$charAt$int$3$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$i0 := inline$java.lang.String$charAt$int$3$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$3$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$3$anon4_Then, inline$java.lang.String$charAt$int$3$anon4_Else;

  inline$java.lang.String$charAt$int$3$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$3$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$3$$r1]
   && inline$java.lang.String$charAt$int$3$i0 >= 0);
    call inline$java.lang.String$charAt$int$3$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$3$$return := 0;
    inline$java.lang.String$charAt$int$3$$exception := inline$java.lang.String$charAt$int$3$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$3$Return;

  inline$java.lang.String$charAt$int$3$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$3$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$3$$r1]
   && inline$java.lang.String$charAt$int$3$i0 >= 0;
    inline$java.lang.String$charAt$int$3$$exception := inline$java.lang.String$charAt$int$3$$exception;
    goto inline$java.lang.String$charAt$int$3$anon3;

  inline$java.lang.String$charAt$int$3$anon3:
    inline$java.lang.String$charAt$int$3$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$3$$r1][inline$java.lang.String$charAt$int$3$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$$return := inline$java.lang.String$charAt$int$3$$c1;
    goto inline$java.lang.String$charAt$int$3$block50;

  inline$java.lang.String$charAt$int$3$block50:
    goto inline$java.lang.String$charAt$int$3$Return;

  inline$java.lang.String$charAt$int$3$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c3 := inline$java.lang.String$charAt$int$3$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception := inline$java.lang.String$charAt$int$3$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon18$2;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon18$2:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon28_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon28_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon28_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c2
   != inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon21;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon21:
    assert {:sourceloc "DefaultPasswordService.java", 151, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$return := 0;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block20;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon28_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c2
   == inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block19;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block19:
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i5 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i5
   + 1;
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block19_dummy;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon27_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i1
   == 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block18;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block18:
    assert {:sourceloc "DefaultPasswordService.java", 154, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$return := 1;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block20;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon26_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i4
   != inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i0;
    assert {:sourceloc "DefaultPasswordService.java", 147, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block16;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block16:
    assert {:sourceloc "DefaultPasswordService.java", 157, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$return := 0;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block20;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon23_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$z0
   == 0;
    assert {:sourceloc "DefaultPasswordService.java", 143, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block16;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block19_dummy:
    assume false;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$block17_last:
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$i1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i4;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i4 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$i4
   + -1;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon27_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$anon27_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$Return:
    $z3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$return;
    $exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object$0$$exception;
    goto anon21$1;

  anon21$1:
    assert {:sourceloc "DefaultPasswordService.java", 117, -1, -1, -1} true;
    $return := $z3;
    goto block14;

  anon26_Then:
    assume {:partition} r3 == unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 108, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    goto block12;

  anon22_Then:
    assume {:partition} r2 == unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 105, -1, -1, -1} {:comment "thenblock"} true;
    goto block7;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref)
{
  var r0: ref;
  var $z0: int;
  var $i1: int;
  var $fakelocal_0: ref;
  var $fakelocal_1: ref;
  var $c3: int;
  var i5: int;
  var r1: ref;
  var $i0: int;
  var i4: int;
  var $c2: int;
  var r2: ref;
  var r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap: $heap_type;
  var inline$java.lang.String$charAt$int$0$i0: int;
  var inline$java.lang.String$charAt$int$0$r0: ref;
  var inline$java.lang.String$charAt$int$0$$c1: int;
  var inline$java.lang.String$charAt$int$0$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$0$$r1: ref;
  var inline$java.lang.String$charAt$int$0$$this: ref;
  var inline$java.lang.String$charAt$int$0$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$0$$return: int;
  var inline$java.lang.String$charAt$int$0$$exception: ref;
  var inline$java.lang.String$charAt$int$0$$objIndex: int;
  var inline$java.lang.String$charAt$int$0$$heap: $heap_type;
  var inline$java.lang.String$charAt$int$1$i0: int;
  var inline$java.lang.String$charAt$int$1$r0: ref;
  var inline$java.lang.String$charAt$int$1$$c1: int;
  var inline$java.lang.String$charAt$int$1$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$1$$r1: ref;
  var inline$java.lang.String$charAt$int$1$$this: ref;
  var inline$java.lang.String$charAt$int$1$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$1$$return: int;
  var inline$java.lang.String$charAt$int$1$$exception: ref;
  var inline$java.lang.String$charAt$int$1$$objIndex: int;
  var inline$java.lang.String$charAt$int$1$$heap: $heap_type;
  var inline$java.lang.String$charAt$int$2$i0: int;
  var inline$java.lang.String$charAt$int$2$r0: ref;
  var inline$java.lang.String$charAt$int$2$$c1: int;
  var inline$java.lang.String$charAt$int$2$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$2$$r1: ref;
  var inline$java.lang.String$charAt$int$2$$this: ref;
  var inline$java.lang.String$charAt$int$2$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$2$$return: int;
  var inline$java.lang.String$charAt$int$2$$exception: ref;
  var inline$java.lang.String$charAt$int$2$$objIndex: int;
  var inline$java.lang.String$charAt$int$2$$heap: $heap_type;
  var inline$java.lang.String$charAt$int$3$i0: int;
  var inline$java.lang.String$charAt$int$3$r0: ref;
  var inline$java.lang.String$charAt$int$3$$c1: int;
  var inline$java.lang.String$charAt$int$3$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$3$$r1: ref;
  var inline$java.lang.String$charAt$int$3$$this: ref;
  var inline$java.lang.String$charAt$int$3$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$3$$return: int;
  var inline$java.lang.String$charAt$int$3$$exception: ref;
  var inline$java.lang.String$charAt$int$3$$objIndex: int;
  var inline$java.lang.String$charAt$int$3$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.Object;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.Object;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__1;
    assert {:sourceloc "DefaultPasswordService.java", 140, -1, -1, -1} true;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} r0 == r1;
    assert {:sourceloc "DefaultPasswordService.java", 140, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "DefaultPasswordService.java", 141, -1, -1, -1} true;
    $return := 1;
    goto block20;

  block20:
    return;

  anon22_Then:
    assume {:partition} r0 != r1;
    assert {:sourceloc "DefaultPasswordService.java", 140, -1, -1, -1} {:comment "thenblock"} true;
    goto block15;

  block15:
    assert {:sourceloc "DefaultPasswordService.java", 143, -1, -1, -1} true;
    $z0 := unsafe.$boolToInt(r1 != unsafe.$null && unsafe.$heap[r1, unsafe.$type] <: unsafe.java.lang.String);
    assert {:sourceloc "DefaultPasswordService.java", 143, -1, -1, -1} true;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} $z0 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 143, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  anon6:
    assert {:sourceloc "DefaultPasswordService.java", 144, -1, -1, -1} true;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} !(unsafe.$heap[r0, unsafe.$type] <: unsafe.java.lang.String);
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon24_Then:
    assume {:partition} unsafe.$heap[r0, unsafe.$type] <: unsafe.java.lang.String;
    $exception := $exception;
    goto anon9;

  anon9:
    r2 := r0;
    assert {:sourceloc "DefaultPasswordService.java", 145, -1, -1, -1} true;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} !(unsafe.$heap[r1, unsafe.$type] <: unsafe.java.lang.String);
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := 0;
    $exception := $fakelocal_1;
    return;

  anon25_Then:
    assume {:partition} unsafe.$heap[r1, unsafe.$type] <: unsafe.java.lang.String;
    $exception := $exception;
    goto anon12;

  anon12:
    r3 := r1;
    assert {:sourceloc "DefaultPasswordService.java", 146, -1, -1, -1} true;
    i4 := unsafe.$stringSizeHeap[r2];
    assert {:sourceloc "DefaultPasswordService.java", 147, -1, -1, -1} true;
    $i0 := unsafe.$stringSizeHeap[r3];
    assert {:sourceloc "DefaultPasswordService.java", 147, -1, -1, -1} true;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} i4 == $i0;
    assert {:sourceloc "DefaultPasswordService.java", 147, -1, -1, -1} {:comment "elseblock"} true;
    goto anon15;

  anon15:
    assert {:sourceloc "DefaultPasswordService.java", 148, -1, -1, -1} true;
    i5 := 0;
    goto block17;

  block17:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception := $exception;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1 := $i1;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3 := $c3;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5 := i5;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4 := i4;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2 := $c2;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r2 := r2;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r3 := r3;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex := unsafe.$objIndex;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap := unsafe.$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block17;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block17:
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4
   + -1;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1
   == 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2;
    unsafe.$objIndex, unsafe.$heap := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19:
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5
   + 1;
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19_dummy;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2
   == inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$0$Entry;

  inline$java.lang.String$charAt$int$0$Entry:
    inline$java.lang.String$charAt$int$0$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r2;
    inline$java.lang.String$charAt$int$0$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5;
    havoc inline$java.lang.String$charAt$int$0$i0, inline$java.lang.String$charAt$int$0$r0, inline$java.lang.String$charAt$int$0$$c1, inline$java.lang.String$charAt$int$0$$fakelocal_0, inline$java.lang.String$charAt$int$0$$r1, inline$java.lang.String$charAt$int$0$$return, inline$java.lang.String$charAt$int$0$$exception;
    inline$java.lang.String$charAt$int$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$0$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$0$anon0;

  inline$java.lang.String$charAt$int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$0$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$0$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$0$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$r0 := inline$java.lang.String$charAt$int$0$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$i0 := inline$java.lang.String$charAt$int$0$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$0$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$0$anon4_Then, inline$java.lang.String$charAt$int$0$anon4_Else;

  inline$java.lang.String$charAt$int$0$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$0$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$0$$r1]
   && inline$java.lang.String$charAt$int$0$i0 >= 0);
    call inline$java.lang.String$charAt$int$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$0$$return := 0;
    inline$java.lang.String$charAt$int$0$$exception := inline$java.lang.String$charAt$int$0$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$0$Return;

  inline$java.lang.String$charAt$int$0$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$0$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$0$$r1]
   && inline$java.lang.String$charAt$int$0$i0 >= 0;
    inline$java.lang.String$charAt$int$0$$exception := inline$java.lang.String$charAt$int$0$$exception;
    goto inline$java.lang.String$charAt$int$0$anon3;

  inline$java.lang.String$charAt$int$0$anon3:
    inline$java.lang.String$charAt$int$0$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$0$$r1][inline$java.lang.String$charAt$int$0$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$$return := inline$java.lang.String$charAt$int$0$$c1;
    goto inline$java.lang.String$charAt$int$0$block50;

  inline$java.lang.String$charAt$int$0$block50:
    goto inline$java.lang.String$charAt$int$0$Return;

  inline$java.lang.String$charAt$int$0$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$java.lang.String$charAt$int$0$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception := inline$java.lang.String$charAt$int$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$1:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$1$Entry;

  inline$java.lang.String$charAt$int$1$Entry:
    inline$java.lang.String$charAt$int$1$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r3;
    inline$java.lang.String$charAt$int$1$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5;
    havoc inline$java.lang.String$charAt$int$1$i0, inline$java.lang.String$charAt$int$1$r0, inline$java.lang.String$charAt$int$1$$c1, inline$java.lang.String$charAt$int$1$$fakelocal_0, inline$java.lang.String$charAt$int$1$$r1, inline$java.lang.String$charAt$int$1$$return, inline$java.lang.String$charAt$int$1$$exception;
    inline$java.lang.String$charAt$int$1$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$1$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$1$anon0;

  inline$java.lang.String$charAt$int$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$1$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$1$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$1$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$r0 := inline$java.lang.String$charAt$int$1$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$i0 := inline$java.lang.String$charAt$int$1$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$1$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$1$anon4_Then, inline$java.lang.String$charAt$int$1$anon4_Else;

  inline$java.lang.String$charAt$int$1$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$1$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$1$$r1]
   && inline$java.lang.String$charAt$int$1$i0 >= 0);
    call inline$java.lang.String$charAt$int$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$1$$return := 0;
    inline$java.lang.String$charAt$int$1$$exception := inline$java.lang.String$charAt$int$1$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$1$Return;

  inline$java.lang.String$charAt$int$1$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$1$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$1$$r1]
   && inline$java.lang.String$charAt$int$1$i0 >= 0;
    inline$java.lang.String$charAt$int$1$$exception := inline$java.lang.String$charAt$int$1$$exception;
    goto inline$java.lang.String$charAt$int$1$anon3;

  inline$java.lang.String$charAt$int$1$anon3:
    inline$java.lang.String$charAt$int$1$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$1$$r1][inline$java.lang.String$charAt$int$1$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$$return := inline$java.lang.String$charAt$int$1$$c1;
    goto inline$java.lang.String$charAt$int$1$block50;

  inline$java.lang.String$charAt$int$1$block50:
    goto inline$java.lang.String$charAt$int$1$Return;

  inline$java.lang.String$charAt$int$1$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3 := inline$java.lang.String$charAt$int$1$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception := inline$java.lang.String$charAt$int$1$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$2;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$2:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2
   != inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "elseblock"} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2;
    unsafe.$objIndex, unsafe.$heap := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1
   != 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19_dummy:
    assume false;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$exit:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return:
    $exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception;
    $i1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1;
    $c3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3;
    i5 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5;
    i4 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4;
    $c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2;
    goto block17$1;

  block17$1:
    goto block17_last;

  anon27_Else:
    assume {:partition} $i1 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "elseblock"} true;
    goto anon18;

  anon18:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$2$Entry;

  inline$java.lang.String$charAt$int$2$Entry:
    inline$java.lang.String$charAt$int$2$$this := r2;
    inline$java.lang.String$charAt$int$2$$in_parameter__0 := i5;
    havoc inline$java.lang.String$charAt$int$2$i0, inline$java.lang.String$charAt$int$2$r0, inline$java.lang.String$charAt$int$2$$c1, inline$java.lang.String$charAt$int$2$$fakelocal_0, inline$java.lang.String$charAt$int$2$$r1, inline$java.lang.String$charAt$int$2$$return, inline$java.lang.String$charAt$int$2$$exception;
    inline$java.lang.String$charAt$int$2$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$2$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$2$anon0;

  inline$java.lang.String$charAt$int$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$2$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$2$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$2$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$r0 := inline$java.lang.String$charAt$int$2$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$i0 := inline$java.lang.String$charAt$int$2$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$2$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$2$anon4_Then, inline$java.lang.String$charAt$int$2$anon4_Else;

  inline$java.lang.String$charAt$int$2$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$2$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$2$$r1]
   && inline$java.lang.String$charAt$int$2$i0 >= 0);
    call inline$java.lang.String$charAt$int$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$2$$return := 0;
    inline$java.lang.String$charAt$int$2$$exception := inline$java.lang.String$charAt$int$2$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$2$Return;

  inline$java.lang.String$charAt$int$2$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$2$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$2$$r1]
   && inline$java.lang.String$charAt$int$2$i0 >= 0;
    inline$java.lang.String$charAt$int$2$$exception := inline$java.lang.String$charAt$int$2$$exception;
    goto inline$java.lang.String$charAt$int$2$anon3;

  inline$java.lang.String$charAt$int$2$anon3:
    inline$java.lang.String$charAt$int$2$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$2$$r1][inline$java.lang.String$charAt$int$2$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$$return := inline$java.lang.String$charAt$int$2$$c1;
    goto inline$java.lang.String$charAt$int$2$block50;

  inline$java.lang.String$charAt$int$2$block50:
    goto inline$java.lang.String$charAt$int$2$Return;

  inline$java.lang.String$charAt$int$2$Return:
    $c2 := inline$java.lang.String$charAt$int$2$$return;
    $exception := inline$java.lang.String$charAt$int$2$$exception;
    goto anon18$1;

  anon18$1:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$3$Entry;

  inline$java.lang.String$charAt$int$3$Entry:
    inline$java.lang.String$charAt$int$3$$this := r3;
    inline$java.lang.String$charAt$int$3$$in_parameter__0 := i5;
    havoc inline$java.lang.String$charAt$int$3$i0, inline$java.lang.String$charAt$int$3$r0, inline$java.lang.String$charAt$int$3$$c1, inline$java.lang.String$charAt$int$3$$fakelocal_0, inline$java.lang.String$charAt$int$3$$r1, inline$java.lang.String$charAt$int$3$$return, inline$java.lang.String$charAt$int$3$$exception;
    inline$java.lang.String$charAt$int$3$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$3$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$3$anon0;

  inline$java.lang.String$charAt$int$3$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$3$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$3$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$3$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$r0 := inline$java.lang.String$charAt$int$3$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$i0 := inline$java.lang.String$charAt$int$3$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$3$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$3$anon4_Then, inline$java.lang.String$charAt$int$3$anon4_Else;

  inline$java.lang.String$charAt$int$3$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$3$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$3$$r1]
   && inline$java.lang.String$charAt$int$3$i0 >= 0);
    call inline$java.lang.String$charAt$int$3$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$3$$return := 0;
    inline$java.lang.String$charAt$int$3$$exception := inline$java.lang.String$charAt$int$3$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$3$Return;

  inline$java.lang.String$charAt$int$3$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$3$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$3$$r1]
   && inline$java.lang.String$charAt$int$3$i0 >= 0;
    inline$java.lang.String$charAt$int$3$$exception := inline$java.lang.String$charAt$int$3$$exception;
    goto inline$java.lang.String$charAt$int$3$anon3;

  inline$java.lang.String$charAt$int$3$anon3:
    inline$java.lang.String$charAt$int$3$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$3$$r1][inline$java.lang.String$charAt$int$3$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$$return := inline$java.lang.String$charAt$int$3$$c1;
    goto inline$java.lang.String$charAt$int$3$block50;

  inline$java.lang.String$charAt$int$3$block50:
    goto inline$java.lang.String$charAt$int$3$Return;

  inline$java.lang.String$charAt$int$3$Return:
    $c3 := inline$java.lang.String$charAt$int$3$$return;
    $exception := inline$java.lang.String$charAt$int$3$$exception;
    goto anon18$2;

  anon18$2:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} $c2 != $c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "elseblock"} true;
    goto anon21;

  anon21:
    assert {:sourceloc "DefaultPasswordService.java", 151, -1, -1, -1} true;
    $return := 0;
    goto block20;

  anon28_Then:
    assume {:partition} $c2 == $c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "thenblock"} true;
    goto block19;

  block19:
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    i5 := i5 + 1;
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    goto block19_dummy;

  anon27_Then:
    assume {:partition} $i1 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "thenblock"} true;
    goto block18;

  block18:
    assert {:sourceloc "DefaultPasswordService.java", 154, -1, -1, -1} true;
    $return := 1;
    goto block20;

  anon26_Then:
    assume {:partition} i4 != $i0;
    assert {:sourceloc "DefaultPasswordService.java", 147, -1, -1, -1} {:comment "thenblock"} true;
    goto block16;

  block16:
    assert {:sourceloc "DefaultPasswordService.java", 157, -1, -1, -1} true;
    $return := 0;
    goto block20;

  anon23_Then:
    assume {:partition} $z0 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 143, -1, -1, -1} {:comment "thenblock"} true;
    goto block16;

  block19_dummy:
    assume false;
    return;

  block17_last:
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    $i1 := i4;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    i4 := i4 + -1;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    goto anon27_Then, anon27_Else;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$checkHashFormatDurability$($this: ref) returns ($exception: ref)
{
  var $r13: ref;
  var $r3: ref;
  var $z1: int;
  var $r12: ref;
  var $r16: ref;
  var $r6: ref;
  var $fakelocal_11: ref;
  var $r11: ref;
  var $r4: ref;
  var $fakelocal_0: ref;
  var $r9: ref;
  var $z0: int;
  var $fakelocal_1: ref;
  var $r18: ref;
  var $r15: ref;
  var $r8: ref;
  var $r7: ref;
  var $fakelocal_4: ref;
  var $fakelocal_3: ref;
  var r2: ref;
  var $fakelocal_5: ref;
  var $r10: ref;
  var $fakelocal_6: ref;
  var r1: ref;
  var $r5: ref;
  var $fakelocal_10: ref;
  var $r17: ref;
  var $z2: int;
  var r0: ref;
  var $fakelocal_2: ref;
  var $fakelocal_7: ref;
  var $fakelocal_8: ref;
  var $r14: ref;
  var $fakelocal_9: ref;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$r0: ref;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$r1: ref;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$exception: ref;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$objIndex: int;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$$la$init$ra$$$0$$heap: $heap_type;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$0$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$1$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$2$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$3$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$4$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$5$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$i1: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$i0: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r3: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$i2: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$this: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$in_parameter__0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$arrSizeHeap: [ref]int;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String$6$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap: $heap_type;
  var inline$java.lang.StringBuilder$toString$$0$$fakelocal_0: ref;
  var inline$java.lang.StringBuilder$toString$$0$$r1: ref;
  var inline$java.lang.StringBuilder$toString$$0$r0: ref;
  var inline$java.lang.StringBuilder$toString$$0$$r2: ref;
  var inline$java.lang.StringBuilder$toString$$0$$this: ref;
  var inline$java.lang.StringBuilder$toString$$0$$return: ref;
  var inline$java.lang.StringBuilder$toString$$0$$exception: ref;
  var inline$java.lang.StringBuilder$toString$$0$$objIndex: int;
  var inline$java.lang.StringBuilder$toString$$0$$heap: $heap_type;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$in_parameter__0: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$heap: $heap_type;
  var inline$java.lang.Object$$la$init$ra$$$1$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$1$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", 162, -1, -1, -1} true;
    $z0 := unsafe.$heap[r0, unsafe.boolean$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatWarned0];
    assert {:sourceloc "DefaultPasswordService.java", 162, -1, -1, -1} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} $z0 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 162, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "DefaultPasswordService.java", 164, -1, -1, -1} true;
    r1 := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.format.HashFormat$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormat262];
    assert {:sourceloc "DefaultPasswordService.java", 166, -1, -1, -1} true;
    $z1 := unsafe.$boolToInt(r1 != unsafe.$null
     && unsafe.$heap[r1, unsafe.$type]
       <: unsafe.org.apache.shiro.crypto.hash.format.ParsableHashFormat);
    assert {:sourceloc "DefaultPasswordService.java", 166, -1, -1, -1} true;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} $z1 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 166, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  anon6:
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} true;
    $r3 := unsafe.org.slf4j.Logger$org.apache.shiro.authc.credential.DefaultPasswordService$log260;
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} true;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} $r3 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_0;
    return;

  anon45_Then:
    assume {:partition} $r3 != unsafe.$null;
    $exception := $exception;
    goto anon9;

  anon9:
    call $z2, $exception := unsafe.org.slf4j.Logger$isWarnEnabled$($r3);
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} true;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} $z2 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} {:comment "elseblock"} true;
    goto anon12;

  anon12:
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r4 := $fakelocal_1;
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$$la$init$ra$$$0$Entry;

  inline$java.lang.StringBuilder$$la$init$ra$$$0$Entry:
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$this := $r4;
    havoc inline$java.lang.StringBuilder$$la$init$ra$$$0$$fakelocal_0, inline$java.lang.StringBuilder$$la$init$ra$$$0$r0, inline$java.lang.StringBuilder$$la$init$ra$$$0$$r1, inline$java.lang.StringBuilder$$la$init$ra$$$0$$exception;
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$$la$init$ra$$$0$anon0;

  inline$java.lang.StringBuilder$$la$init$ra$$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$$la$init$ra$$$0$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$$la$init$ra$$$0$$this != unsafe.$null;
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$$la$init$ra$$$0$r0 := inline$java.lang.StringBuilder$$la$init$ra$$$0$$this;
    assert {:sourceloc "StringBuilder.java", 3, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := inline$java.lang.StringBuilder$$la$init$ra$$$0$r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.StringBuilder$$la$init$ra$$$0$anon0$1;

  inline$java.lang.StringBuilder$$la$init$ra$$$0$anon0$1:
    assert {:sourceloc "StringBuilder.java", 4, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$$la$init$ra$$$0$$fakelocal_0 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$$la$init$ra$$$0$$fakelocal_0 := 0];
    inline$java.lang.StringBuilder$$la$init$ra$$$0$$r1 := inline$java.lang.StringBuilder$$la$init$ra$$$0$$fakelocal_0;
    assert {:sourceloc "StringBuilder.java", 4, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$$la$init$ra$$$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$$la$init$ra$$$0$$r1];
    assert {:sourceloc "StringBuilder.java", 4, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$$la$init$ra$$$0$block42;

  inline$java.lang.StringBuilder$$la$init$ra$$$0$block42:
    goto inline$java.lang.StringBuilder$$la$init$ra$$$0$Return;

  inline$java.lang.StringBuilder$$la$init$ra$$$0$Return:
    $exception := inline$java.lang.StringBuilder$$la$init$ra$$$0$$exception;
    goto anon12$1;

  anon12$1:
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$0$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$this := $r4;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$in_parameter__0 := unsafe.$StringConst1;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$0$r2, inline$java.lang.StringBuilder$append$java.lang.String$0$$c6, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$0$$r4, inline$java.lang.StringBuilder$append$java.lang.String$0$$r5, inline$java.lang.StringBuilder$append$java.lang.String$0$$i3, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$0$i7, inline$java.lang.StringBuilder$append$java.lang.String$0$$r7, inline$java.lang.StringBuilder$append$java.lang.String$0$$i1, inline$java.lang.StringBuilder$append$java.lang.String$0$$i0, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$0$$i4, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$0$r0, inline$java.lang.StringBuilder$append$java.lang.String$0$$c5, inline$java.lang.StringBuilder$append$java.lang.String$0$r1, inline$java.lang.StringBuilder$append$java.lang.String$0$$r8, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$0$i8, inline$java.lang.StringBuilder$append$java.lang.String$0$$r6, inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$0$$r3, inline$java.lang.StringBuilder$append$java.lang.String$0$$i2, inline$java.lang.StringBuilder$append$java.lang.String$0$$r9, inline$java.lang.StringBuilder$append$java.lang.String$0$$return, inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$r0 := inline$java.lang.StringBuilder$append$java.lang.String$0$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$r1 := inline$java.lang.StringBuilder$append$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$0$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$0$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$0$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$0$r2 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$0$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$0$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$0$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$0$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$0$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$0$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$0$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$0$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$0$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$0$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$0$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r9][inline$java.lang.StringBuilder$append$java.lang.String$0$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$0$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2][inline$java.lang.StringBuilder$append$java.lang.String$0$i7 := inline$java.lang.StringBuilder$append$java.lang.String$0$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$i7 := inline$java.lang.StringBuilder$append$java.lang.String$0$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$0$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$0$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$0$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$0$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$0$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$0$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$0$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$0$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$0$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$0$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$0$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$0$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$0$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$$r8][inline$java.lang.StringBuilder$append$java.lang.String$0$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$0$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$0$r2][inline$java.lang.StringBuilder$append$java.lang.String$0$i8 := inline$java.lang.StringBuilder$append$java.lang.String$0$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$i8 := inline$java.lang.StringBuilder$append$java.lang.String$0$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$0$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$0$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$0$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$return := inline$java.lang.StringBuilder$append$java.lang.String$0$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$0$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$0$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$0$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$0$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$0$Return:
    $r5 := inline$java.lang.StringBuilder$append$java.lang.String$0$$return;
    $exception := inline$java.lang.StringBuilder$append$java.lang.String$0$$exception;
    goto anon12$2;

  anon12$2:
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_2;
    return;

  anon47_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon15;

  anon15:
    call $r6, $exception := unsafe.java.lang.Object$getClass$(r1);
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} $r6 == unsafe.$null;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_3;
    return;

  anon48_Then:
    assume {:partition} $r6 != unsafe.$null;
    $exception := $exception;
    goto anon18;

  anon18:
    call $r7, $exception := unsafe.java.lang.Class$getName$($r6);
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} $r5 == unsafe.$null;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_4;
    return;

  anon49_Then:
    assume {:partition} $r5 != unsafe.$null;
    $exception := $exception;
    goto anon21;

  anon21:
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$1$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$this := $r5;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$in_parameter__0 := $r7;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$1$r2, inline$java.lang.StringBuilder$append$java.lang.String$1$$c6, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$1$$r4, inline$java.lang.StringBuilder$append$java.lang.String$1$$r5, inline$java.lang.StringBuilder$append$java.lang.String$1$$i3, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$1$i7, inline$java.lang.StringBuilder$append$java.lang.String$1$$r7, inline$java.lang.StringBuilder$append$java.lang.String$1$$i1, inline$java.lang.StringBuilder$append$java.lang.String$1$$i0, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$1$$i4, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$1$r0, inline$java.lang.StringBuilder$append$java.lang.String$1$$c5, inline$java.lang.StringBuilder$append$java.lang.String$1$r1, inline$java.lang.StringBuilder$append$java.lang.String$1$$r8, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$1$i8, inline$java.lang.StringBuilder$append$java.lang.String$1$$r6, inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$1$$r3, inline$java.lang.StringBuilder$append$java.lang.String$1$$i2, inline$java.lang.StringBuilder$append$java.lang.String$1$$r9, inline$java.lang.StringBuilder$append$java.lang.String$1$$return, inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$1$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$r0 := inline$java.lang.StringBuilder$append$java.lang.String$1$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$r1 := inline$java.lang.StringBuilder$append$java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$1$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$1$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$1$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$1$r2 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$1$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$1$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$1$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$1$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$1$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$1$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$1$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$1$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$1$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$1$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$1$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$1$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r9][inline$java.lang.StringBuilder$append$java.lang.String$1$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$1$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2][inline$java.lang.StringBuilder$append$java.lang.String$1$i7 := inline$java.lang.StringBuilder$append$java.lang.String$1$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$i7 := inline$java.lang.StringBuilder$append$java.lang.String$1$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$1$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$1$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$1$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$1$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$1$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$1$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$1$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$1$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$1$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$1$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$1$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$1$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$1$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$1$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$$r8][inline$java.lang.StringBuilder$append$java.lang.String$1$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$1$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$1$r2][inline$java.lang.StringBuilder$append$java.lang.String$1$i8 := inline$java.lang.StringBuilder$append$java.lang.String$1$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$i8 := inline$java.lang.StringBuilder$append$java.lang.String$1$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$1$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$1$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$1$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$return := inline$java.lang.StringBuilder$append$java.lang.String$1$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$1$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$1$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$1$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$1$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$1$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$1$Return:
    $r8 := inline$java.lang.StringBuilder$append$java.lang.String$1$$return;
    $exception := inline$java.lang.StringBuilder$append$java.lang.String$1$$exception;
    goto anon21$1;

  anon21$1:
    assert {:sourceloc "DefaultPasswordService.java", 167, -1, -1, -1} true;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} $r8 == unsafe.$null;
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_5;
    return;

  anon50_Then:
    assume {:partition} $r8 != unsafe.$null;
    $exception := $exception;
    goto anon24;

  anon24:
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$2$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$this := $r8;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$in_parameter__0 := unsafe.$StringConst2;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$2$r2, inline$java.lang.StringBuilder$append$java.lang.String$2$$c6, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$2$$r4, inline$java.lang.StringBuilder$append$java.lang.String$2$$r5, inline$java.lang.StringBuilder$append$java.lang.String$2$$i3, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$2$i7, inline$java.lang.StringBuilder$append$java.lang.String$2$$r7, inline$java.lang.StringBuilder$append$java.lang.String$2$$i1, inline$java.lang.StringBuilder$append$java.lang.String$2$$i0, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$2$$i4, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$2$r0, inline$java.lang.StringBuilder$append$java.lang.String$2$$c5, inline$java.lang.StringBuilder$append$java.lang.String$2$r1, inline$java.lang.StringBuilder$append$java.lang.String$2$$r8, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$2$i8, inline$java.lang.StringBuilder$append$java.lang.String$2$$r6, inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$2$$r3, inline$java.lang.StringBuilder$append$java.lang.String$2$$i2, inline$java.lang.StringBuilder$append$java.lang.String$2$$r9, inline$java.lang.StringBuilder$append$java.lang.String$2$$return, inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$2$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$r0 := inline$java.lang.StringBuilder$append$java.lang.String$2$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$r1 := inline$java.lang.StringBuilder$append$java.lang.String$2$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$2$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$2$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$2$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$2$r2 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$2$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$2$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$2$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$2$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$2$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$2$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$2$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$2$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$2$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$2$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$2$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$2$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r9][inline$java.lang.StringBuilder$append$java.lang.String$2$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$2$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2][inline$java.lang.StringBuilder$append$java.lang.String$2$i7 := inline$java.lang.StringBuilder$append$java.lang.String$2$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$i7 := inline$java.lang.StringBuilder$append$java.lang.String$2$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$2$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$2$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$2$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$2$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$2$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$2$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$2$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$2$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$2$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$2$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$2$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$2$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$2$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$2$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$2$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$$r8][inline$java.lang.StringBuilder$append$java.lang.String$2$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$2$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$2$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$2$r2][inline$java.lang.StringBuilder$append$java.lang.String$2$i8 := inline$java.lang.StringBuilder$append$java.lang.String$2$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$i8 := inline$java.lang.StringBuilder$append$java.lang.String$2$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$2$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$2$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$2$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$return := inline$java.lang.StringBuilder$append$java.lang.String$2$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$2$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$2$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$2$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$2$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$2$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$2$Return:
    $r9 := inline$java.lang.StringBuilder$append$java.lang.String$2$$return;
    $exception := inline$java.lang.StringBuilder$append$java.lang.String$2$$exception;
    goto anon24$1;

  anon24$1:
    assert {:sourceloc "DefaultPasswordService.java", 168, -1, -1, -1} true;
    $r10 := unsafe.CC$org$_$apache$_$shiro$_$crypto$_$hash$_$format$_$ParsableHashFormat;
    assert {:sourceloc "DefaultPasswordService.java", 168, -1, -1, -1} true;
    call $r11, $exception := unsafe.java.lang.Class$getName$($r10);
    assert {:sourceloc "DefaultPasswordService.java", 168, -1, -1, -1} true;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} $r9 == unsafe.$null;
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_6;
    return;

  anon51_Then:
    assume {:partition} $r9 != unsafe.$null;
    $exception := $exception;
    goto anon27;

  anon27:
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$3$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$this := $r9;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$in_parameter__0 := $r11;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$3$r2, inline$java.lang.StringBuilder$append$java.lang.String$3$$c6, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$3$$r4, inline$java.lang.StringBuilder$append$java.lang.String$3$$r5, inline$java.lang.StringBuilder$append$java.lang.String$3$$i3, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$3$i7, inline$java.lang.StringBuilder$append$java.lang.String$3$$r7, inline$java.lang.StringBuilder$append$java.lang.String$3$$i1, inline$java.lang.StringBuilder$append$java.lang.String$3$$i0, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$3$$i4, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$3$r0, inline$java.lang.StringBuilder$append$java.lang.String$3$$c5, inline$java.lang.StringBuilder$append$java.lang.String$3$r1, inline$java.lang.StringBuilder$append$java.lang.String$3$$r8, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$3$i8, inline$java.lang.StringBuilder$append$java.lang.String$3$$r6, inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$3$$r3, inline$java.lang.StringBuilder$append$java.lang.String$3$$i2, inline$java.lang.StringBuilder$append$java.lang.String$3$$r9, inline$java.lang.StringBuilder$append$java.lang.String$3$$return, inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$3$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$r0 := inline$java.lang.StringBuilder$append$java.lang.String$3$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$r1 := inline$java.lang.StringBuilder$append$java.lang.String$3$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$3$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$3$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$3$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$3$r2 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$3$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$3$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$3$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$3$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$3$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$3$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$3$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$3$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$3$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$3$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$3$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$3$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r9][inline$java.lang.StringBuilder$append$java.lang.String$3$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$3$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2][inline$java.lang.StringBuilder$append$java.lang.String$3$i7 := inline$java.lang.StringBuilder$append$java.lang.String$3$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$i7 := inline$java.lang.StringBuilder$append$java.lang.String$3$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$3$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$3$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$3$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$3$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$3$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$3$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$3$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$3$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$3$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$3$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$3$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$3$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$3$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$3$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$3$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$$r8][inline$java.lang.StringBuilder$append$java.lang.String$3$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$3$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$3$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$3$r2][inline$java.lang.StringBuilder$append$java.lang.String$3$i8 := inline$java.lang.StringBuilder$append$java.lang.String$3$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$i8 := inline$java.lang.StringBuilder$append$java.lang.String$3$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$3$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$3$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$3$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$return := inline$java.lang.StringBuilder$append$java.lang.String$3$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$3$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$3$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$3$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$3$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$3$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$3$Return:
    $r12 := inline$java.lang.StringBuilder$append$java.lang.String$3$$return;
    $exception := inline$java.lang.StringBuilder$append$java.lang.String$3$$exception;
    goto anon27$1;

  anon27$1:
    assert {:sourceloc "DefaultPasswordService.java", 168, -1, -1, -1} true;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} $r12 == unsafe.$null;
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_7;
    return;

  anon52_Then:
    assume {:partition} $r12 != unsafe.$null;
    $exception := $exception;
    goto anon30;

  anon30:
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$4$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$this := $r12;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$in_parameter__0 := unsafe.$StringConst3;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$4$r2, inline$java.lang.StringBuilder$append$java.lang.String$4$$c6, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$4$$r4, inline$java.lang.StringBuilder$append$java.lang.String$4$$r5, inline$java.lang.StringBuilder$append$java.lang.String$4$$i3, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$4$i7, inline$java.lang.StringBuilder$append$java.lang.String$4$$r7, inline$java.lang.StringBuilder$append$java.lang.String$4$$i1, inline$java.lang.StringBuilder$append$java.lang.String$4$$i0, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$4$$i4, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$4$r0, inline$java.lang.StringBuilder$append$java.lang.String$4$$c5, inline$java.lang.StringBuilder$append$java.lang.String$4$r1, inline$java.lang.StringBuilder$append$java.lang.String$4$$r8, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$4$i8, inline$java.lang.StringBuilder$append$java.lang.String$4$$r6, inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$4$$r3, inline$java.lang.StringBuilder$append$java.lang.String$4$$i2, inline$java.lang.StringBuilder$append$java.lang.String$4$$r9, inline$java.lang.StringBuilder$append$java.lang.String$4$$return, inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$4$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$r0 := inline$java.lang.StringBuilder$append$java.lang.String$4$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$r1 := inline$java.lang.StringBuilder$append$java.lang.String$4$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$4$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$4$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$4$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$4$r2 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$4$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$4$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$4$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$4$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$4$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$4$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$4$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$4$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$4$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$4$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$4$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$4$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r9][inline$java.lang.StringBuilder$append$java.lang.String$4$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$4$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2][inline$java.lang.StringBuilder$append$java.lang.String$4$i7 := inline$java.lang.StringBuilder$append$java.lang.String$4$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$i7 := inline$java.lang.StringBuilder$append$java.lang.String$4$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$4$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$4$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$4$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$4$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$4$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$4$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$4$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$4$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$4$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$4$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$4$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$4$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$4$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$4$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$4$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$$r8][inline$java.lang.StringBuilder$append$java.lang.String$4$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$4$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$4$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$4$r2][inline$java.lang.StringBuilder$append$java.lang.String$4$i8 := inline$java.lang.StringBuilder$append$java.lang.String$4$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$i8 := inline$java.lang.StringBuilder$append$java.lang.String$4$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$4$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$4$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$4$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$return := inline$java.lang.StringBuilder$append$java.lang.String$4$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$4$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$4$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$4$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$4$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$4$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$4$Return:
    $r13 := inline$java.lang.StringBuilder$append$java.lang.String$4$$return;
    $exception := inline$java.lang.StringBuilder$append$java.lang.String$4$$exception;
    goto anon30$1;

  anon30$1:
    assert {:sourceloc "DefaultPasswordService.java", 170, -1, -1, -1} true;
    $r14 := unsafe.CC$org$_$apache$_$shiro$_$crypto$_$hash$_$format$_$ParsableHashFormat;
    assert {:sourceloc "DefaultPasswordService.java", 170, -1, -1, -1} true;
    call $r15, $exception := unsafe.java.lang.Class$getSimpleName$($r14);
    assert {:sourceloc "DefaultPasswordService.java", 170, -1, -1, -1} true;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} $r13 == unsafe.$null;
    call $fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_8;
    return;

  anon53_Then:
    assume {:partition} $r13 != unsafe.$null;
    $exception := $exception;
    goto anon33;

  anon33:
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$5$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$this := $r13;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$in_parameter__0 := $r15;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$5$r2, inline$java.lang.StringBuilder$append$java.lang.String$5$$c6, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$5$$r4, inline$java.lang.StringBuilder$append$java.lang.String$5$$r5, inline$java.lang.StringBuilder$append$java.lang.String$5$$i3, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$5$i7, inline$java.lang.StringBuilder$append$java.lang.String$5$$r7, inline$java.lang.StringBuilder$append$java.lang.String$5$$i1, inline$java.lang.StringBuilder$append$java.lang.String$5$$i0, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$5$$i4, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$5$r0, inline$java.lang.StringBuilder$append$java.lang.String$5$$c5, inline$java.lang.StringBuilder$append$java.lang.String$5$r1, inline$java.lang.StringBuilder$append$java.lang.String$5$$r8, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$5$i8, inline$java.lang.StringBuilder$append$java.lang.String$5$$r6, inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$5$$r3, inline$java.lang.StringBuilder$append$java.lang.String$5$$i2, inline$java.lang.StringBuilder$append$java.lang.String$5$$r9, inline$java.lang.StringBuilder$append$java.lang.String$5$$return, inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$5$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$r0 := inline$java.lang.StringBuilder$append$java.lang.String$5$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$r1 := inline$java.lang.StringBuilder$append$java.lang.String$5$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$5$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$5$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$5$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$5$r2 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$5$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$5$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$5$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$5$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$5$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$5$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$5$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$5$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$5$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$5$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$5$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$5$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r9][inline$java.lang.StringBuilder$append$java.lang.String$5$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$5$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2][inline$java.lang.StringBuilder$append$java.lang.String$5$i7 := inline$java.lang.StringBuilder$append$java.lang.String$5$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$i7 := inline$java.lang.StringBuilder$append$java.lang.String$5$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$5$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$5$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$5$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$5$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$5$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$5$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$5$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$5$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$5$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$5$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$5$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$5$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$5$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$5$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$5$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$$r8][inline$java.lang.StringBuilder$append$java.lang.String$5$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$5$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$5$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$5$r2][inline$java.lang.StringBuilder$append$java.lang.String$5$i8 := inline$java.lang.StringBuilder$append$java.lang.String$5$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$i8 := inline$java.lang.StringBuilder$append$java.lang.String$5$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$5$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$5$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$5$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$return := inline$java.lang.StringBuilder$append$java.lang.String$5$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$5$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$5$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$5$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$5$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$5$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$5$Return:
    $r16 := inline$java.lang.StringBuilder$append$java.lang.String$5$$return;
    $exception := inline$java.lang.StringBuilder$append$java.lang.String$5$$exception;
    goto anon33$1;

  anon33$1:
    assert {:sourceloc "DefaultPasswordService.java", 170, -1, -1, -1} true;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} $r16 == unsafe.$null;
    call $fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_9;
    return;

  anon54_Then:
    assume {:partition} $r16 != unsafe.$null;
    $exception := $exception;
    goto anon36;

  anon36:
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String$6$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$this := $r16;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$in_parameter__0 := unsafe.$StringConst4;
    havoc inline$java.lang.StringBuilder$append$java.lang.String$6$r2, inline$java.lang.StringBuilder$append$java.lang.String$6$$c6, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_1, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_0, inline$java.lang.StringBuilder$append$java.lang.String$6$$r4, inline$java.lang.StringBuilder$append$java.lang.String$6$$r5, inline$java.lang.StringBuilder$append$java.lang.String$6$$i3, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_3, inline$java.lang.StringBuilder$append$java.lang.String$6$i7, inline$java.lang.StringBuilder$append$java.lang.String$6$$r7, inline$java.lang.StringBuilder$append$java.lang.String$6$$i1, inline$java.lang.StringBuilder$append$java.lang.String$6$$i0, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_2, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String$6$$i4, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_7, inline$java.lang.StringBuilder$append$java.lang.String$6$r0, inline$java.lang.StringBuilder$append$java.lang.String$6$$c5, inline$java.lang.StringBuilder$append$java.lang.String$6$r1, inline$java.lang.StringBuilder$append$java.lang.String$6$$r8, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String$6$i8, inline$java.lang.StringBuilder$append$java.lang.String$6$$r6, inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9, inline$java.lang.StringBuilder$append$java.lang.String$6$$r3, inline$java.lang.StringBuilder$append$java.lang.String$6$$i2, inline$java.lang.StringBuilder$append$java.lang.String$6$$r9, inline$java.lang.StringBuilder$append$java.lang.String$6$$return, inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon0;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$append$java.lang.String$6$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$$return, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$r0 := inline$java.lang.StringBuilder$append$java.lang.String$6$$this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$r1 := inline$java.lang.StringBuilder$append$java.lang.String$6$$in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r3 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon37_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon37_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon37_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r3 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon37_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r3 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon3;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon3:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i1 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon38_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon38_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon38_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$r1 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_1;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon38_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$r1 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon6;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon6:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r4 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon39_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon39_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon39_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r4 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_2;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon39_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r4 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon9;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon9:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i0 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i2 := inline$java.lang.StringBuilder$append$java.lang.String$6$$i1
   + inline$java.lang.StringBuilder$append$java.lang.String$6$$i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_3 := inline$java.lang.StringBuilder$append$java.lang.String$6$$i2];
    inline$java.lang.StringBuilder$append$java.lang.String$6$r2 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$i7 := 0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block43;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$6$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$6$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6 := inline$java.lang.StringBuilder$append$java.lang.String$6$$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5 := inline$java.lang.StringBuilder$append$java.lang.String$6$$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3 := inline$java.lang.StringBuilder$append$java.lang.String$6$$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7 := inline$java.lang.StringBuilder$append$java.lang.String$6$i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r0 := inline$java.lang.StringBuilder$append$java.lang.String$6$r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9 := inline$java.lang.StringBuilder$append$java.lang.String$6$$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String$6$i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$6$out_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block43$1;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block43$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block43_last;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r5 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_4;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r5 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$i3
   > inline$java.lang.StringBuilder$append$java.lang.String$6$i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$6$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_5;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r9][inline$java.lang.StringBuilder$append$java.lang.String$6$i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$6$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i7 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_6;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i7 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2][inline$java.lang.StringBuilder$append$java.lang.String$6$i7 := inline$java.lang.StringBuilder$append$java.lang.String$6$$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$i7 := inline$java.lang.StringBuilder$append$java.lang.String$6$i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i7
   >= inline$java.lang.StringBuilder$append$java.lang.String$6$$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block44;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r6 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon44_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon44_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon44_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r6 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_7;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon44_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r6 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon24;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon24:
    inline$java.lang.StringBuilder$append$java.lang.String$6$i8 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r6];
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block45;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return := inline$java.lang.StringBuilder$append$java.lang.String$6$$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2 := inline$java.lang.StringBuilder$append$java.lang.String$6$r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7 := inline$java.lang.StringBuilder$append$java.lang.String$6$$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4 := inline$java.lang.StringBuilder$append$java.lang.String$6$$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5 := inline$java.lang.StringBuilder$append$java.lang.String$6$$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r1 := inline$java.lang.StringBuilder$append$java.lang.String$6$r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8 := inline$java.lang.StringBuilder$append$java.lang.String$6$$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8 := inline$java.lang.StringBuilder$append$java.lang.String$6$i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$Return:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String$6$i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$6$out_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block45$1;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block45$1:
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block45_last;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r7 == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_8;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$r7 != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$$i4
   > inline$java.lang.StringBuilder$append$java.lang.String$6$i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$6$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String$6$$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$$r8][inline$java.lang.StringBuilder$append$java.lang.String$6$i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String$6$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i8 >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$fakelocal_10;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2]
   && inline$java.lang.StringBuilder$append$java.lang.String$6$i8 >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String$6$r2][inline$java.lang.StringBuilder$append$java.lang.String$6$i8 := inline$java.lang.StringBuilder$append$java.lang.String$6$$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$i8 := inline$java.lang.StringBuilder$append$java.lang.String$6$i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String$6$i8
   >= inline$java.lang.StringBuilder$append$java.lang.String$6$$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block46;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := inline$java.lang.StringBuilder$append$java.lang.String$6$r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$return := inline$java.lang.StringBuilder$append$java.lang.String$6$r0;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$block47;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block47:
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$Return;

  inline$java.lang.StringBuilder$append$java.lang.String$6$block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String$6$$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String$6$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String$6$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String$6$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String$6$Return:
    $r17 := inline$java.lang.StringBuilder$append$java.lang.String$6$$return;
    $exception := inline$java.lang.StringBuilder$append$java.lang.String$6$$exception;
    goto anon36$1;

  anon36$1:
    assert {:sourceloc "DefaultPasswordService.java", 170, -1, -1, -1} true;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} $r17 == unsafe.$null;
    call $fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_10;
    return;

  anon55_Then:
    assume {:partition} $r17 != unsafe.$null;
    $exception := $exception;
    goto anon39;

  anon39:
    goto inline$java.lang.StringBuilder$toString$$0$Entry;

  inline$java.lang.StringBuilder$toString$$0$Entry:
    inline$java.lang.StringBuilder$toString$$0$$this := $r17;
    havoc inline$java.lang.StringBuilder$toString$$0$$fakelocal_0, inline$java.lang.StringBuilder$toString$$0$$r1, inline$java.lang.StringBuilder$toString$$0$r0, inline$java.lang.StringBuilder$toString$$0$$r2, inline$java.lang.StringBuilder$toString$$0$$return, inline$java.lang.StringBuilder$toString$$0$$exception;
    inline$java.lang.StringBuilder$toString$$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$toString$$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$toString$$0$anon0;

  inline$java.lang.StringBuilder$toString$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.StringBuilder$toString$$0$$this, unsafe.$type]
   <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} inline$java.lang.StringBuilder$toString$$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.StringBuilder$toString$$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$java.lang.StringBuilder$toString$$0$$exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    inline$java.lang.StringBuilder$toString$$0$r0 := inline$java.lang.StringBuilder$toString$$0$$this;
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    call inline$java.lang.StringBuilder$toString$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.String);
    inline$java.lang.StringBuilder$toString$$0$$r1 := inline$java.lang.StringBuilder$toString$$0$$fakelocal_0;
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    inline$java.lang.StringBuilder$toString$$0$$r2 := unsafe.$heap[inline$java.lang.StringBuilder$toString$$0$r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Entry;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Entry:
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this := inline$java.lang.StringBuilder$toString$$0$$r1;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$in_parameter__0 := inline$java.lang.StringBuilder$toString$$0$$r2;
    havoc inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0, inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1, inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this != unsafe.$null;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0 := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1 := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "String.java", 6, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$1$Entry;

  inline$java.lang.Object$$la$init$ra$$$1$Entry:
    inline$java.lang.Object$$la$init$ra$$$1$$this := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0;
    havoc inline$java.lang.Object$$la$init$ra$$$1$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$1$anon0;

  inline$java.lang.Object$$la$init$ra$$$1$anon0:
    inline$java.lang.Object$$la$init$ra$$$1$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$1$Return;

  inline$java.lang.Object$$la$init$ra$$$1$Return:
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception := inline$java.lang.Object$$la$init$ra$$$1$$exception;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0$1;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0$1:
    assert {:sourceloc "String.java", 7, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0, unsafe.char$lp$$rp$$java.lang.String$chars306 := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1];
    assert {:sourceloc "String.java", 8, -1, -1, -1} true;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block49;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block49:
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return:
    inline$java.lang.StringBuilder$toString$$0$$exception := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception;
    goto inline$java.lang.StringBuilder$toString$$0$anon0$1;

  inline$java.lang.StringBuilder$toString$$0$anon0$1:
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    inline$java.lang.StringBuilder$toString$$0$$return := inline$java.lang.StringBuilder$toString$$0$$r1;
    goto inline$java.lang.StringBuilder$toString$$0$block48;

  inline$java.lang.StringBuilder$toString$$0$block48:
    goto inline$java.lang.StringBuilder$toString$$0$Return;

  inline$java.lang.StringBuilder$toString$$0$Return:
    r2 := inline$java.lang.StringBuilder$toString$$0$$return;
    $exception := inline$java.lang.StringBuilder$toString$$0$$exception;
    goto anon39$1;

  anon39$1:
    assert {:sourceloc "DefaultPasswordService.java", 172, -1, -1, -1} true;
    $r18 := unsafe.org.slf4j.Logger$org.apache.shiro.authc.credential.DefaultPasswordService$log260;
    assert {:sourceloc "DefaultPasswordService.java", 172, -1, -1, -1} true;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} $r18 == unsafe.$null;
    call $fakelocal_11 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_11;
    return;

  anon56_Then:
    assume {:partition} $r18 != unsafe.$null;
    $exception := $exception;
    goto anon42;

  anon42:
    call $exception := unsafe.org.slf4j.Logger$warn$java.lang.String($r18, r2);
    assert {:sourceloc "DefaultPasswordService.java", 173, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.boolean$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatWarned0 := 1];
    goto block21;

  block21:
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} true;
    goto block22;

  block22:
    return;

  anon46_Then:
    assume {:partition} $z2 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 176, -1, -1, -1} {:comment "thenblock"} true;
    goto block21;

  anon44_Then:
    assume {:partition} $z1 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 166, -1, -1, -1} {:comment "thenblock"} true;
    goto block21;

  anon43_Then:
    assume {:partition} $z0 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 162, -1, -1, -1} {:comment "thenblock"} true;
    goto block21;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var r0: ref;
  var $r3: ref;
  var $fakelocal_0: ref;
  var $r2: ref;
  var $r4: ref;
  var $fakelocal_1: ref;
  var r1: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.HashRequest;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.org.apache.shiro.util.ByteSource;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder);
    $r2 := $fakelocal_0;
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call $exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$$la$init$ra$$($r2);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call $r3, $exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSource$org.apache.shiro.util.ByteSource($r2, r1);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    goto anon4_Then, anon4_Else;

  anon4_Else:
    assume {:partition} $r3 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_1;
    return;

  anon4_Then:
    assume {:partition} $r3 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $r4, $exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$build$($r3);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    $return := $r4;
    goto block23;

  block23:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var r1: ref;
  var $r2: ref;
  var r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.org.apache.shiro.util.ByteSource;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.Object;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 183, -1, -1, -1} true;
    call $r2, $exception := unsafe.org.apache.shiro.util.ByteSource$Util$bytes$java.lang.Object(r1);
    assert {:sourceloc "DefaultPasswordService.java", 183, -1, -1, -1} true;
    $return := $r2;
    goto block24;

  block24:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref)
{
  var r3: ref;
  var r1: ref;
  var $z4: int;
  var $z2: int;
  var r10: ref;
  var $r8: ref;
  var r12: ref;
  var $r7: ref;
  var $fakelocal_0: ref;
  var $fakelocal_3: ref;
  var $z3: int;
  var r0: ref;
  var r4: ref;
  var r9: ref;
  var $z0: int;
  var $r6: ref;
  var $i0: int;
  var r2: ref;
  var $z5: int;
  var r11: ref;
  var r5: ref;
  var $fakelocal_1: ref;
  var $z1: int;
  var $fakelocal_2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$this: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$return: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$objIndex: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$heap: $heap_type;
  var inline$java.lang.String$equals$java.lang.Object$0$r2: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$r0: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_3: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$c4: int;
  var inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_1: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$c3: int;
  var inline$java.lang.String$equals$java.lang.Object$0$$r6: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$r9: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$r1: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_4: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$i1: int;
  var inline$java.lang.String$equals$java.lang.Object$0$$i0: int;
  var inline$java.lang.String$equals$java.lang.Object$0$i5: int;
  var inline$java.lang.String$equals$java.lang.Object$0$$i2: int;
  var inline$java.lang.String$equals$java.lang.Object$0$$r8: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_2: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$r4: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$r5: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$r3: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_5: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$r7: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_0: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$this: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$in_parameter__0: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$return: int;
  var inline$java.lang.String$equals$java.lang.Object$0$$exception: ref;
  var inline$java.lang.String$equals$java.lang.Object$0$$objIndex: int;
  var inline$java.lang.String$equals$java.lang.Object$0$$heap: $heap_type;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r2: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.Object;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "DefaultPasswordService.java", 187, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this := r0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0 := r1;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return, unsafe.$type]
   <: unsafe.org.apache.shiro.util.ByteSource;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.Object;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 183, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception := unsafe.org.apache.shiro.util.ByteSource$Util$bytes$java.lang.Object(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$r1);
    assert {:sourceloc "DefaultPasswordService.java", 183, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$r2;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$block24;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$block24:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$Return:
    r3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$return;
    $exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createByteSource$java.lang.Object$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "DefaultPasswordService.java", 189, -1, -1, -1} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} r2 != unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 189, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} true;
    $i0 := unsafe.$stringSizeHeap[r2];
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} true;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} $i0 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} {:comment "elseblock"} true;
    goto block25;

  block25:
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} true;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} r3 != unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto anon8;

  anon8:
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} true;
    call $z0, $exception := unsafe.org.apache.shiro.util.ByteSource$isEmpty$(r3);
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} true;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} $z0 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} {:comment "elseblock"} true;
    goto block27;

  block27:
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} true;
    $z5 := 1;
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} true;
    goto block29;

  block29:
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} true;
    $return := $z5;
    goto block33;

  block33:
    return;

  anon37_Then:
    assume {:partition} $z0 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} {:comment "thenblock"} true;
    goto block28;

  block28:
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} true;
    $z5 := 0;
    goto block29;

  anon36_Then:
    assume {:partition} r3 == unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    goto block27;

  anon35_Then:
    assume {:partition} $i0 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 190, -1, -1, -1} {:comment "thenblock"} true;
    goto block26;

  block26:
    assert {:sourceloc "DefaultPasswordService.java", 192, -1, -1, -1} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} r3 != unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 192, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto anon13;

  anon13:
    assert {:sourceloc "DefaultPasswordService.java", 193, -1, -1, -1} true;
    call $z1, $exception := unsafe.org.apache.shiro.util.ByteSource$isEmpty$(r3);
    assert {:sourceloc "DefaultPasswordService.java", 193, -1, -1, -1} true;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} $z1 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 193, -1, -1, -1} {:comment "elseblock"} true;
    goto block30;

  block30:
    assert {:sourceloc "DefaultPasswordService.java", 193, -1, -1, -1} true;
    $return := 0;
    goto block33;

  anon39_Then:
    assume {:partition} $z1 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 193, -1, -1, -1} {:comment "thenblock"} true;
    goto block31;

  block31:
    assert {:sourceloc "DefaultPasswordService.java", 202, -1, -1, -1} true;
    $r6 := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatFactory263];
    assert {:sourceloc "DefaultPasswordService.java", 202, -1, -1, -1} true;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} $r6 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon40_Then:
    assume {:partition} $r6 != unsafe.$null;
    $exception := $exception;
    goto anon18;

  anon18:
    call r4, $exception := unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory$getInstance$java.lang.String($r6, r2);
    assert {:sourceloc "DefaultPasswordService.java", 204, -1, -1, -1} true;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} r4 != unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 204, -1, -1, -1} {:comment "elseblock"} true;
    goto anon21;

  anon21:
    assert {:sourceloc "DefaultPasswordService.java", 224, -1, -1, -1} true;
    $z3 := unsafe.$boolToInt(r4 != unsafe.$null
     && unsafe.$heap[r4, unsafe.$type]
       <: unsafe.org.apache.shiro.crypto.hash.format.ParsableHashFormat);
    assert {:sourceloc "DefaultPasswordService.java", 224, -1, -1, -1} true;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} $z3 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 224, -1, -1, -1} {:comment "elseblock"} true;
    goto anon24;

  anon24:
    assert {:sourceloc "DefaultPasswordService.java", 206, -1, -1, -1} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} !(unsafe.$heap[r4, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.format.ParsableHashFormat);
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := 0;
    $exception := $fakelocal_1;
    return;

  anon43_Then:
    assume {:partition} unsafe.$heap[r4, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.format.ParsableHashFormat;
    $exception := $exception;
    goto anon27;

  anon27:
    r9 := r4;
    assert {:sourceloc "DefaultPasswordService.java", 207, -1, -1, -1} true;
    call r10, $exception := unsafe.org.apache.shiro.crypto.hash.format.ParsableHashFormat$parse$java.lang.String(r9, r2);
    assert {:sourceloc "DefaultPasswordService.java", 209, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$this := r0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__0 := r1;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__1 := r10;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$return, inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__1, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.Hash;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.Object;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$r1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$r2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$in_parameter__1;
    assert {:sourceloc "DefaultPasswordService.java", 84, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$return := 0;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$block6;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$block6:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$Return:
    $z4 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$return;
    $exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$passwordsMatch$java.lang.Object_org.apache.shiro.crypto.hash.Hash$0$$exception;
    goto anon27$1;

  anon27$1:
    assert {:sourceloc "DefaultPasswordService.java", 209, -1, -1, -1} true;
    $return := $z4;
    goto block33;

  anon42_Then:
    assume {:partition} $z3 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 224, -1, -1, -1} {:comment "thenblock"} true;
    goto block32;

  block32:
    assert {:sourceloc "DefaultPasswordService.java", 220, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this := r0;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0 := r3;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$objIndex := unsafe.$objIndex;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$heap := unsafe.$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon0;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.HashRequest;
    assume unsafe.$heap[inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.apache.shiro.util.ByteSource;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0 := unsafe.$new(unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_0;
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$$la$init$ra$$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSource$org.apache.shiro.util.ByteSource(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r2, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$r1);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3
   == unsafe.$null;
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return := unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$fakelocal_1;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon4_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3
   != unsafe.$null;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon3;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$anon3:
    call inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$build$(inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r3);
    assert {:sourceloc "DefaultPasswordService.java", 179, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$r4;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$block23;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$block23:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$Return:
    r11 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$return;
    $exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$createHashRequest$org.apache.shiro.util.ByteSource$0$$exception;
    goto block32$1;

  block32$1:
    assert {:sourceloc "DefaultPasswordService.java", 221, -1, -1, -1} true;
    $r7 := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.HashService$org.apache.shiro.authc.credential.DefaultPasswordService$hashService261];
    assert {:sourceloc "DefaultPasswordService.java", 221, -1, -1, -1} true;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} $r7 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_2;
    return;

  anon44_Then:
    assume {:partition} $r7 != unsafe.$null;
    $exception := $exception;
    goto anon30;

  anon30:
    call r12, $exception := unsafe.org.apache.shiro.crypto.hash.HashService$computeHash$org.apache.shiro.crypto.hash.HashRequest($r7, r11);
    assert {:sourceloc "DefaultPasswordService.java", 222, -1, -1, -1} true;
    $r8 := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.format.HashFormat$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormat262];
    assert {:sourceloc "DefaultPasswordService.java", 222, -1, -1, -1} true;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} $r8 == unsafe.$null;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_3;
    return;

  anon45_Then:
    assume {:partition} $r8 != unsafe.$null;
    $exception := $exception;
    goto anon33;

  anon33:
    call r5, $exception := unsafe.org.apache.shiro.crypto.hash.format.HashFormat$format$org.apache.shiro.crypto.hash.Hash($r8, r12);
    assert {:sourceloc "DefaultPasswordService.java", 224, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$Entry;

  inline$java.lang.String$equals$java.lang.Object$0$Entry:
    inline$java.lang.String$equals$java.lang.Object$0$$this := r2;
    inline$java.lang.String$equals$java.lang.Object$0$$in_parameter__0 := r5;
    havoc inline$java.lang.String$equals$java.lang.Object$0$r2, inline$java.lang.String$equals$java.lang.Object$0$r0, inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_3, inline$java.lang.String$equals$java.lang.Object$0$$c4, inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_1, inline$java.lang.String$equals$java.lang.Object$0$$c3, inline$java.lang.String$equals$java.lang.Object$0$$r6, inline$java.lang.String$equals$java.lang.Object$0$$r9, inline$java.lang.String$equals$java.lang.Object$0$r1, inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_4, inline$java.lang.String$equals$java.lang.Object$0$$i1, inline$java.lang.String$equals$java.lang.Object$0$$i0, inline$java.lang.String$equals$java.lang.Object$0$i5, inline$java.lang.String$equals$java.lang.Object$0$$i2, inline$java.lang.String$equals$java.lang.Object$0$$r8, inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_2, inline$java.lang.String$equals$java.lang.Object$0$$r4, inline$java.lang.String$equals$java.lang.Object$0$$r5, inline$java.lang.String$equals$java.lang.Object$0$$r3, inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_5, inline$java.lang.String$equals$java.lang.Object$0$$r7, inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_0, inline$java.lang.String$equals$java.lang.Object$0$$return, inline$java.lang.String$equals$java.lang.Object$0$$exception;
    inline$java.lang.String$equals$java.lang.Object$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$equals$java.lang.Object$0$$heap := unsafe.$heap;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon0;

  inline$java.lang.String$equals$java.lang.Object$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$equals$java.lang.Object$0$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$equals$java.lang.Object$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$java.lang.String$equals$java.lang.Object$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.Object;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$r0 := inline$java.lang.String$equals$java.lang.Object$0$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$r1 := inline$java.lang.String$equals$java.lang.Object$0$$in_parameter__0;
    assert {:sourceloc "String.java", 16, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon37_Then, inline$java.lang.String$equals$java.lang.Object$0$anon37_Else;

  inline$java.lang.String$equals$java.lang.Object$0$anon37_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$r0
   == inline$java.lang.String$equals$java.lang.Object$0$r1;
    assert {:sourceloc "String.java", 16, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon3;

  inline$java.lang.String$equals$java.lang.Object$0$anon3:
    assert {:sourceloc "String.java", 17, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$$return := 1;
    goto inline$java.lang.String$equals$java.lang.Object$0$block58;

  inline$java.lang.String$equals$java.lang.Object$0$block58:
    goto inline$java.lang.String$equals$java.lang.Object$0$Return;

  inline$java.lang.String$equals$java.lang.Object$0$anon37_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$r0
   != inline$java.lang.String$equals$java.lang.Object$0$r1;
    assert {:sourceloc "String.java", 16, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$block51;

  inline$java.lang.String$equals$java.lang.Object$0$block51:
    assert {:sourceloc "String.java", 18, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon38_Then, inline$java.lang.String$equals$java.lang.Object$0$anon38_Else;

  inline$java.lang.String$equals$java.lang.Object$0$anon38_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$r1 == unsafe.$null;
    assert {:sourceloc "String.java", 18, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon6;

  inline$java.lang.String$equals$java.lang.Object$0$anon6:
    assert {:sourceloc "String.java", 19, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$$return := 0;
    goto inline$java.lang.String$equals$java.lang.Object$0$block58;

  inline$java.lang.String$equals$java.lang.Object$0$anon38_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$r1 != unsafe.$null;
    assert {:sourceloc "String.java", 18, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$block52;

  inline$java.lang.String$equals$java.lang.Object$0$block52:
    assert {:sourceloc "String.java", 20, -1, -1, -1} true;
    call inline$java.lang.String$equals$java.lang.Object$0$$r3, inline$java.lang.String$equals$java.lang.Object$0$$exception := unsafe.java.lang.Object$getClass$(inline$java.lang.String$equals$java.lang.Object$0$r0);
    assert {:sourceloc "String.java", 20, -1, -1, -1} true;
    call inline$java.lang.String$equals$java.lang.Object$0$$r4, inline$java.lang.String$equals$java.lang.Object$0$$exception := unsafe.java.lang.Object$getClass$(inline$java.lang.String$equals$java.lang.Object$0$r1);
    assert {:sourceloc "String.java", 20, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon39_Then, inline$java.lang.String$equals$java.lang.Object$0$anon39_Else;

  inline$java.lang.String$equals$java.lang.Object$0$anon39_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$r3
   != inline$java.lang.String$equals$java.lang.Object$0$$r4;
    assert {:sourceloc "String.java", 20, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon9;

  inline$java.lang.String$equals$java.lang.Object$0$anon9:
    assert {:sourceloc "String.java", 21, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$$return := 0;
    goto inline$java.lang.String$equals$java.lang.Object$0$block58;

  inline$java.lang.String$equals$java.lang.Object$0$anon39_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$r3
   == inline$java.lang.String$equals$java.lang.Object$0$$r4;
    assert {:sourceloc "String.java", 20, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$block53;

  inline$java.lang.String$equals$java.lang.Object$0$block53:
    assert {:sourceloc "String.java", 22, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon40_Then, inline$java.lang.String$equals$java.lang.Object$0$anon40_Else;

  inline$java.lang.String$equals$java.lang.Object$0$anon40_Else:
    assume {:partition} !(unsafe.$heap[inline$java.lang.String$equals$java.lang.Object$0$r1, unsafe.$type]
   <: unsafe.java.lang.String);
    call inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$java.lang.String$equals$java.lang.Object$0$$return := 0;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_0;
    goto inline$java.lang.String$equals$java.lang.Object$0$Return;

  inline$java.lang.String$equals$java.lang.Object$0$anon40_Then:
    assume {:partition} unsafe.$heap[inline$java.lang.String$equals$java.lang.Object$0$r1, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$exception;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon12;

  inline$java.lang.String$equals$java.lang.Object$0$anon12:
    inline$java.lang.String$equals$java.lang.Object$0$r2 := inline$java.lang.String$equals$java.lang.Object$0$r1;
    assert {:sourceloc "String.java", 24, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$$r5 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object$0$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 24, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon41_Then, inline$java.lang.String$equals$java.lang.Object$0$anon41_Else;

  inline$java.lang.String$equals$java.lang.Object$0$anon41_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$r5 == unsafe.$null;
    call inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.String$equals$java.lang.Object$0$$return := 0;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_1;
    goto inline$java.lang.String$equals$java.lang.Object$0$Return;

  inline$java.lang.String$equals$java.lang.Object$0$anon41_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$r5 != unsafe.$null;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$exception;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon15;

  inline$java.lang.String$equals$java.lang.Object$0$anon15:
    inline$java.lang.String$equals$java.lang.Object$0$$i1 := unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object$0$$r5];
    assert {:sourceloc "String.java", 24, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$$r6 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object$0$r2, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 24, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon42_Then, inline$java.lang.String$equals$java.lang.Object$0$anon42_Else;

  inline$java.lang.String$equals$java.lang.Object$0$anon42_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$r6 == unsafe.$null;
    call inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.String$equals$java.lang.Object$0$$return := 0;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_2;
    goto inline$java.lang.String$equals$java.lang.Object$0$Return;

  inline$java.lang.String$equals$java.lang.Object$0$anon42_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$r6 != unsafe.$null;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$exception;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon18;

  inline$java.lang.String$equals$java.lang.Object$0$anon18:
    inline$java.lang.String$equals$java.lang.Object$0$$i0 := unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object$0$$r6];
    assert {:sourceloc "String.java", 24, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon43_Then, inline$java.lang.String$equals$java.lang.Object$0$anon43_Else;

  inline$java.lang.String$equals$java.lang.Object$0$anon43_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$i1
   != inline$java.lang.String$equals$java.lang.Object$0$$i0;
    assert {:sourceloc "String.java", 24, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon21;

  inline$java.lang.String$equals$java.lang.Object$0$anon21:
    assert {:sourceloc "String.java", 25, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$$return := 0;
    goto inline$java.lang.String$equals$java.lang.Object$0$block58;

  inline$java.lang.String$equals$java.lang.Object$0$anon43_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$i1
   == inline$java.lang.String$equals$java.lang.Object$0$$i0;
    assert {:sourceloc "String.java", 24, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$block54;

  inline$java.lang.String$equals$java.lang.Object$0$block54:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$i5 := 0;
    goto inline$java.lang.String$equals$java.lang.Object$0$block55;

  inline$java.lang.String$equals$java.lang.Object$0$block55:
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Entry;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Entry:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return := inline$java.lang.String$equals$java.lang.Object$0$$return;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception := inline$java.lang.String$equals$java.lang.Object$0$$exception;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r2 := inline$java.lang.String$equals$java.lang.Object$0$r2;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0 := inline$java.lang.String$equals$java.lang.Object$0$r0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3 := inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_3;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4 := inline$java.lang.String$equals$java.lang.Object$0$$c4;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3 := inline$java.lang.String$equals$java.lang.Object$0$$c3;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9 := inline$java.lang.String$equals$java.lang.Object$0$$r9;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4 := inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_4;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5 := inline$java.lang.String$equals$java.lang.Object$0$i5;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2 := inline$java.lang.String$equals$java.lang.Object$0$$i2;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8 := inline$java.lang.String$equals$java.lang.Object$0$$r8;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5 := inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_5;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7 := inline$java.lang.String$equals$java.lang.Object$0$$r7;
    havoc inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap := unsafe.$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$entry;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$entry:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block55;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block55:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7
   == unsafe.$null;
    call inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return := 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 + 1;
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57_dummy;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4
   == inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon33:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3 := unsafe.$intArrHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9][inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4
   != inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "elseblock"} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon33;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon30:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4 := unsafe.$intArrHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8][inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r2, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Else:
    assume {:partition} !(inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0);
    call inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return := 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon30;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon27:
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Else:
    assume {:partition} !(inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0);
    call inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return := 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2
   > inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon27;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon24:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2 := unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
   >= inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7
   != unsafe.$null;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon24;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57_dummy:
    assume false;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$exit:
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return:
    inline$java.lang.String$equals$java.lang.Object$0$$return := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_3 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3;
    inline$java.lang.String$equals$java.lang.Object$0$$c4 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4;
    inline$java.lang.String$equals$java.lang.Object$0$$c3 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3;
    inline$java.lang.String$equals$java.lang.Object$0$$r9 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9;
    inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_4 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4;
    inline$java.lang.String$equals$java.lang.Object$0$i5 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5;
    inline$java.lang.String$equals$java.lang.Object$0$$i2 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2;
    inline$java.lang.String$equals$java.lang.Object$0$$r8 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8;
    inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_5 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5;
    inline$java.lang.String$equals$java.lang.Object$0$$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7;
    goto inline$java.lang.String$equals$java.lang.Object$0$block55$1;

  inline$java.lang.String$equals$java.lang.Object$0$block55$1:
    goto inline$java.lang.String$equals$java.lang.Object$0$block55_last;

  inline$java.lang.String$equals$java.lang.Object$0$anon44_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$r7 == unsafe.$null;
    call inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.String$equals$java.lang.Object$0$$return := 0;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_3;
    goto inline$java.lang.String$equals$java.lang.Object$0$Return;

  inline$java.lang.String$equals$java.lang.Object$0$anon44_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$r7 != unsafe.$null;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$exception;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon24;

  inline$java.lang.String$equals$java.lang.Object$0$anon24:
    inline$java.lang.String$equals$java.lang.Object$0$$i2 := unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object$0$$r7];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon45_Then, inline$java.lang.String$equals$java.lang.Object$0$anon45_Else;

  inline$java.lang.String$equals$java.lang.Object$0$anon45_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$i2
   > inline$java.lang.String$equals$java.lang.Object$0$i5;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon27;

  inline$java.lang.String$equals$java.lang.Object$0$anon27:
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$$r8 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object$0$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon46_Then, inline$java.lang.String$equals$java.lang.Object$0$anon46_Else;

  inline$java.lang.String$equals$java.lang.Object$0$anon46_Else:
    assume {:partition} !(inline$java.lang.String$equals$java.lang.Object$0$i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object$0$$r8]
   && inline$java.lang.String$equals$java.lang.Object$0$i5 >= 0);
    call inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$equals$java.lang.Object$0$$return := 0;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_4;
    goto inline$java.lang.String$equals$java.lang.Object$0$Return;

  inline$java.lang.String$equals$java.lang.Object$0$anon46_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object$0$$r8]
   && inline$java.lang.String$equals$java.lang.Object$0$i5 >= 0;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$exception;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon30;

  inline$java.lang.String$equals$java.lang.Object$0$anon30:
    inline$java.lang.String$equals$java.lang.Object$0$$c4 := unsafe.$intArrHeap[inline$java.lang.String$equals$java.lang.Object$0$$r8][inline$java.lang.String$equals$java.lang.Object$0$i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$$r9 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object$0$r2, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon47_Then, inline$java.lang.String$equals$java.lang.Object$0$anon47_Else;

  inline$java.lang.String$equals$java.lang.Object$0$anon47_Else:
    assume {:partition} !(inline$java.lang.String$equals$java.lang.Object$0$i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object$0$$r9]
   && inline$java.lang.String$equals$java.lang.Object$0$i5 >= 0);
    call inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$equals$java.lang.Object$0$$return := 0;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$fakelocal_5;
    goto inline$java.lang.String$equals$java.lang.Object$0$Return;

  inline$java.lang.String$equals$java.lang.Object$0$anon47_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object$0$$r9]
   && inline$java.lang.String$equals$java.lang.Object$0$i5 >= 0;
    inline$java.lang.String$equals$java.lang.Object$0$$exception := inline$java.lang.String$equals$java.lang.Object$0$$exception;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon33;

  inline$java.lang.String$equals$java.lang.Object$0$anon33:
    inline$java.lang.String$equals$java.lang.Object$0$$c3 := unsafe.$intArrHeap[inline$java.lang.String$equals$java.lang.Object$0$$r9][inline$java.lang.String$equals$java.lang.Object$0$i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon48_Then, inline$java.lang.String$equals$java.lang.Object$0$anon48_Else;

  inline$java.lang.String$equals$java.lang.Object$0$anon48_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$c4
   != inline$java.lang.String$equals$java.lang.Object$0$$c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon36;

  inline$java.lang.String$equals$java.lang.Object$0$anon36:
    assert {:sourceloc "String.java", 29, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$$return := 0;
    goto inline$java.lang.String$equals$java.lang.Object$0$block58;

  inline$java.lang.String$equals$java.lang.Object$0$anon48_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$$c4
   == inline$java.lang.String$equals$java.lang.Object$0$$c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$block57;

  inline$java.lang.String$equals$java.lang.Object$0$block57:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$i5 := inline$java.lang.String$equals$java.lang.Object$0$i5 + 1;
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$block57_dummy;

  inline$java.lang.String$equals$java.lang.Object$0$anon45_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object$0$i5
   >= inline$java.lang.String$equals$java.lang.Object$0$$i2;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$block56;

  inline$java.lang.String$equals$java.lang.Object$0$block56:
    assert {:sourceloc "String.java", 32, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$$return := 1;
    goto inline$java.lang.String$equals$java.lang.Object$0$block58;

  inline$java.lang.String$equals$java.lang.Object$0$block57_dummy:
    assume false;
    goto inline$java.lang.String$equals$java.lang.Object$0$Return;

  inline$java.lang.String$equals$java.lang.Object$0$block55_last:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object$0$$r7 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object$0$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object$0$anon44_Then, inline$java.lang.String$equals$java.lang.Object$0$anon44_Else;

  inline$java.lang.String$equals$java.lang.Object$0$Return:
    $z2 := inline$java.lang.String$equals$java.lang.Object$0$$return;
    $exception := inline$java.lang.String$equals$java.lang.Object$0$$exception;
    goto anon33$1;

  anon33$1:
    assert {:sourceloc "DefaultPasswordService.java", 224, -1, -1, -1} true;
    $return := $z2;
    goto block33;

  anon41_Then:
    assume {:partition} r4 == unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 204, -1, -1, -1} {:comment "thenblock"} true;
    goto block32;

  anon38_Then:
    assume {:partition} r3 == unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 192, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    goto block30;

  anon34_Then:
    assume {:partition} r2 == unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 189, -1, -1, -1} {:comment "thenblock"} true;
    goto block25;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$buildHashRequest$org.apache.shiro.util.ByteSource_org.apache.shiro.crypto.hash.Hash($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref)
{
  var $r7: ref;
  var $r5: ref;
  var $r3: ref;
  var $fakelocal_1: ref;
  var $fakelocal_3: ref;
  var $fakelocal_0: ref;
  var r1: ref;
  var $r6: ref;
  var $fakelocal_5: ref;
  var $fakelocal_4: ref;
  var r2: ref;
  var $r9: ref;
  var $r8: ref;
  var $fakelocal_2: ref;
  var $i0: int;
  var $r4: ref;
  var r0: ref;
  var $r10: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.Hash;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.org.apache.shiro.util.ByteSource;
    assume unsafe.$heap[$return, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.HashRequest;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "DefaultPasswordService.java", 229, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder);
    $r3 := $fakelocal_0;
    assert {:sourceloc "DefaultPasswordService.java", 229, -1, -1, -1} true;
    call $exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$$la$init$ra$$($r3);
    assert {:sourceloc "DefaultPasswordService.java", 229, -1, -1, -1} true;
    call $r4, $exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSource$org.apache.shiro.util.ByteSource($r3, r1);
    assert {:sourceloc "DefaultPasswordService.java", 231, -1, -1, -1} true;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} r2 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_1;
    return;

  anon16_Then:
    assume {:partition} r2 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $r5, $exception := unsafe.org.apache.shiro.crypto.hash.Hash$getAlgorithmName$(r2);
    assert {:sourceloc "DefaultPasswordService.java", 231, -1, -1, -1} true;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} $r4 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon17_Then:
    assume {:partition} $r4 != unsafe.$null;
    $exception := $exception;
    goto anon6;

  anon6:
    call $r6, $exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setAlgorithmName$java.lang.String($r4, $r5);
    assert {:sourceloc "DefaultPasswordService.java", 232, -1, -1, -1} true;
    call $r7, $exception := unsafe.org.apache.shiro.crypto.hash.Hash$getSalt$(r2);
    assert {:sourceloc "DefaultPasswordService.java", 232, -1, -1, -1} true;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} $r6 == unsafe.$null;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon18_Then:
    assume {:partition} $r6 != unsafe.$null;
    $exception := $exception;
    goto anon9;

  anon9:
    call $r8, $exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setSalt$org.apache.shiro.util.ByteSource($r6, $r7);
    assert {:sourceloc "DefaultPasswordService.java", 233, -1, -1, -1} true;
    call $i0, $exception := unsafe.org.apache.shiro.crypto.hash.Hash$getIterations$(r2);
    assert {:sourceloc "DefaultPasswordService.java", 233, -1, -1, -1} true;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} $r8 == unsafe.$null;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_4;
    return;

  anon19_Then:
    assume {:partition} $r8 != unsafe.$null;
    $exception := $exception;
    goto anon12;

  anon12:
    call $r9, $exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$setIterations$int($r8, $i0);
    assert {:sourceloc "DefaultPasswordService.java", 234, -1, -1, -1} true;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} $r9 == unsafe.$null;
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_5;
    return;

  anon20_Then:
    assume {:partition} $r9 != unsafe.$null;
    $exception := $exception;
    goto anon15;

  anon15:
    call $r10, $exception := unsafe.org.apache.shiro.crypto.hash.HashRequest$Builder$build$($r9);
    assert {:sourceloc "DefaultPasswordService.java", 229, -1, -1, -1} true;
    $return := $r10;
    goto block34;

  block34:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$getHashService$($this: ref) returns ($return: ref, $exception: ref)
{
  var $r1: ref;
  var r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.HashService;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", 238, -1, -1, -1} true;
    $r1 := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.HashService$org.apache.shiro.authc.credential.DefaultPasswordService$hashService261];
    assert {:sourceloc "DefaultPasswordService.java", 238, -1, -1, -1} true;
    $return := $r1;
    goto block35;

  block35:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$setHashService$org.apache.shiro.crypto.hash.HashService($this: ref, $in_parameter__0: ref) returns ($exception: ref)
{
  var r0: ref;
  var r1: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.HashService;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 242, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.HashService$org.apache.shiro.authc.credential.DefaultPasswordService$hashService261 := r1];
    assert {:sourceloc "DefaultPasswordService.java", 243, -1, -1, -1} true;
    goto block36;

  block36:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$getHashFormat$($this: ref) returns ($return: ref, $exception: ref)
{
  var $r1: ref;
  var r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.format.HashFormat;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", 246, -1, -1, -1} true;
    $r1 := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.format.HashFormat$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormat262];
    assert {:sourceloc "DefaultPasswordService.java", 246, -1, -1, -1} true;
    $return := $r1;
    goto block37;

  block37:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$setHashFormat$org.apache.shiro.crypto.hash.format.HashFormat($this: ref, $in_parameter__0: ref) returns ($exception: ref)
{
  var r0: ref;
  var r1: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.format.HashFormat;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 250, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.format.HashFormat$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormat262 := r1];
    assert {:sourceloc "DefaultPasswordService.java", 251, -1, -1, -1} true;
    goto block38;

  block38:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$getHashFormatFactory$($this: ref) returns ($return: ref, $exception: ref)
{
  var $r1: ref;
  var r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", 254, -1, -1, -1} true;
    $r1 := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatFactory263];
    assert {:sourceloc "DefaultPasswordService.java", 254, -1, -1, -1} true;
    $return := $r1;
    goto block39;

  block39:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$setHashFormatFactory$org.apache.shiro.crypto.hash.format.HashFormatFactory($this: ref, $in_parameter__0: ref) returns ($exception: ref)
{
  var r1: ref;
  var r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.apache.shiro.authc.credential.DefaultPasswordService;
    assume {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory;
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "DefaultPasswordService.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "DefaultPasswordService.java", 258, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.org.apache.shiro.crypto.hash.format.HashFormatFactory$org.apache.shiro.authc.credential.DefaultPasswordService$hashFormatFactory263 := r1];
    assert {:sourceloc "DefaultPasswordService.java", 259, -1, -1, -1} true;
    goto block40;

  block40:
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$$la$clinit$ra$$() returns ($exception: ref)
{
  var $r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    $exception := unsafe.$null;
    assert {:sourceloc "DefaultPasswordService.java", 47, -1, -1, -1} true;
    call $r0, $exception := unsafe.org.slf4j.LoggerFactory$getLogger$java.lang.Class(unsafe.CC$org$_$apache$_$shiro$_$authc$_$credential$_$DefaultPasswordService);
    assert {:sourceloc "DefaultPasswordService.java", 47, -1, -1, -1} true;
    unsafe.org.slf4j.Logger$org.apache.shiro.authc.credential.DefaultPasswordService$log260 := $r0;
    assert {:sourceloc "DefaultPasswordService.java", 47, -1, -1, -1} true;
    goto block41;

  block41:
    return;
}



implementation unsafe.java.lang.StringBuilder$$la$init$ra$$($this: ref) returns ($exception: ref)
{
  var $fakelocal_0: ref;
  var r0: ref;
  var $r1: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "StringBuilder.java", 3, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    $exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "StringBuilder.java", 4, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[$fakelocal_0 := 0];
    $r1 := $fakelocal_0;
    assert {:sourceloc "StringBuilder.java", 4, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := $r1];
    assert {:sourceloc "StringBuilder.java", 4, -1, -1, -1} true;
    goto block42;

  block42:
    return;
}



implementation unsafe.java.lang.StringBuilder$append$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var r2: ref;
  var $c6: int;
  var $fakelocal_1: ref;
  var $fakelocal_8: ref;
  var $fakelocal_0: ref;
  var $r4: ref;
  var $r5: ref;
  var $i3: int;
  var $fakelocal_5: ref;
  var $fakelocal_4: ref;
  var $fakelocal_3: ref;
  var i7: int;
  var $r7: ref;
  var $i1: int;
  var $i0: int;
  var $fakelocal_2: ref;
  var $fakelocal_6: ref;
  var $i4: int;
  var $fakelocal_7: ref;
  var r0: ref;
  var $c5: int;
  var r1: ref;
  var $r8: ref;
  var $fakelocal_10: ref;
  var i8: int;
  var $r6: ref;
  var $fakelocal_9: ref;
  var $r3: ref;
  var $i2: int;
  var $r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap: $heap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.StringBuilder;
    $exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    $r3 := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} $r3 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon37_Then:
    assume {:partition} $r3 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    $i1 := unsafe.$arrSizeHeap[$r3];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_1;
    return;

  anon38_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon6;

  anon6:
    $r4 := unsafe.$heap[r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} $r4 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon39_Then:
    assume {:partition} $r4 != unsafe.$null;
    $exception := $exception;
    goto anon9;

  anon9:
    $i0 := unsafe.$arrSizeHeap[$r4];
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    $i2 := $i1 + $i0;
    assert {:sourceloc "StringBuilder.java", 7, -1, -1, -1} true;
    call $fakelocal_3 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[$fakelocal_3 := $i2];
    r2 := $fakelocal_3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    i7 := 0;
    goto block43;

  block43:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return := $return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception := $exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2 := r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6 := $c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5 := $r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3 := $i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5 := $fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4 := $fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7 := i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6 := $fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0 := r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9 := $r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return:
    $return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return;
    $exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    $c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6;
    $r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5;
    $i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3;
    $fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5;
    $fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4;
    i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7;
    $fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6;
    $r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9;
    goto block43$1;

  block43$1:
    goto block43_last;

  anon40_Else:
    assume {:partition} $r5 == unsafe.$null;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_4;
    return;

  anon40_Then:
    assume {:partition} $r5 != unsafe.$null;
    $exception := $exception;
    goto anon12;

  anon12:
    $i3 := unsafe.$arrSizeHeap[$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} $i3 > i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto anon15;

  anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    $r9 := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} !(i7 < unsafe.$arrSizeHeap[$r9] && i7 >= 0);
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := unsafe.$null;
    $exception := $fakelocal_5;
    return;

  anon42_Then:
    assume {:partition} i7 < unsafe.$arrSizeHeap[$r9] && i7 >= 0;
    $exception := $exception;
    goto anon18;

  anon18:
    $c6 := unsafe.$intArrHeap[$r9][i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} !(i7 < unsafe.$arrSizeHeap[r2] && i7 >= 0);
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := unsafe.$null;
    $exception := $fakelocal_6;
    return;

  anon43_Then:
    assume {:partition} i7 < unsafe.$arrSizeHeap[r2] && i7 >= 0;
    $exception := $exception;
    goto anon21;

  anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[r2 := unsafe.$intArrHeap[r2][i7 := $c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    i7 := i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto anon21_dummy;

  anon41_Then:
    assume {:partition} i7 >= $i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    goto block44;

  block44:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    $r6 := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} $r6 == unsafe.$null;
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_7;
    return;

  anon44_Then:
    assume {:partition} $r6 != unsafe.$null;
    $exception := $exception;
    goto anon24;

  anon24:
    i8 := unsafe.$arrSizeHeap[$r6];
    goto block45;

  block45:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return := $return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception := $exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2 := r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8 := $fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7 := $r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4 := $i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5 := $c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1 := r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8 := $r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10 := $fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8 := i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9 := $fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return:
    $return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return;
    $exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    $fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8;
    $r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7;
    $i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4;
    $c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5;
    $r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8;
    $fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10;
    i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8;
    $fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    goto block45$1;

  block45$1:
    goto block45_last;

  anon45_Else:
    assume {:partition} $r7 == unsafe.$null;
    call $fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_8;
    return;

  anon45_Then:
    assume {:partition} $r7 != unsafe.$null;
    $exception := $exception;
    goto anon27;

  anon27:
    $i4 := unsafe.$arrSizeHeap[$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} $i4 > i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto anon30;

  anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    $r8 := unsafe.$heap[r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} !(i8 < unsafe.$arrSizeHeap[$r8] && i8 >= 0);
    call $fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := unsafe.$null;
    $exception := $fakelocal_9;
    return;

  anon47_Then:
    assume {:partition} i8 < unsafe.$arrSizeHeap[$r8] && i8 >= 0;
    $exception := $exception;
    goto anon33;

  anon33:
    $c5 := unsafe.$intArrHeap[$r8][i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} !(i8 < unsafe.$arrSizeHeap[r2] && i8 >= 0);
    call $fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := unsafe.$null;
    $exception := $fakelocal_10;
    return;

  anon48_Then:
    assume {:partition} i8 < unsafe.$arrSizeHeap[r2] && i8 >= 0;
    $exception := $exception;
    goto anon36;

  anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[r2 := unsafe.$intArrHeap[r2][i8 := $c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    i8 := i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto anon36_dummy;

  anon46_Then:
    assume {:partition} i8 >= $i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    goto block46;

  block46:
    assert {:sourceloc "StringBuilder.java", 14, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305 := r2];
    assert {:sourceloc "StringBuilder.java", 15, -1, -1, -1} true;
    $return := r0;
    goto block47;

  block47:
    return;

  anon36_dummy:
    assume false;
    return;

  block45_last:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    $r7 := unsafe.$heap[r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto anon45_Then, anon45_Else;

  anon21_dummy:
    assume false;
    return;

  block43_last:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    $r5 := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto anon40_Then, anon40_Else;
}



implementation unsafe.java.lang.StringBuilder$toString$($this: ref) returns ($return: ref, $exception: ref)
{
  var $fakelocal_0: ref;
  var $r1: ref;
  var r0: ref;
  var $r2: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$in_parameter__0: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception: ref;
  var inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$heap: $heap_type;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.StringBuilder;
    assume {:sourceloc "StringBuilder.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "StringBuilder.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.String);
    $r1 := $fakelocal_0;
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    $r2 := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Entry;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Entry:
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this := $r1;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$in_parameter__0 := $r2;
    havoc inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0, inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1, inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this != unsafe.$null;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0 := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1 := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "String.java", 6, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0$1;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0$1:
    assert {:sourceloc "String.java", 7, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r0, unsafe.char$lp$$rp$$java.lang.String$chars306 := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$r1];
    assert {:sourceloc "String.java", 8, -1, -1, -1} true;
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block49;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block49:
    goto inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return;

  inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return:
    $exception := inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "StringBuilder.java", 19, -1, -1, -1} true;
    $return := $r1;
    goto block48;

  block48:
    return;
}



implementation unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref)
{
  var r0: ref;
  var r1: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "String.java", 6, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    $exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "String.java", 7, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.String$chars306 := r1];
    assert {:sourceloc "String.java", 8, -1, -1, -1} true;
    goto block49;

  block49:
    return;
}



implementation unsafe.java.lang.String$charAt$int($this: ref, $in_parameter__0: int) returns ($return: int, $exception: ref)
{
  var i0: int;
  var r0: ref;
  var $c1: int;
  var $fakelocal_0: ref;
  var $r1: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    i0 := $in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    $r1 := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto anon4_Then, anon4_Else;

  anon4_Else:
    assume {:partition} !(i0 < unsafe.$arrSizeHeap[$r1] && i0 >= 0);
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon4_Then:
    assume {:partition} i0 < unsafe.$arrSizeHeap[$r1] && i0 >= 0;
    $exception := $exception;
    goto anon3;

  anon3:
    $c1 := unsafe.$intArrHeap[$r1][i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    $return := $c1;
    goto block50;

  block50:
    return;
}



implementation unsafe.java.lang.String$equals$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref)
{
  var r2: ref;
  var r0: ref;
  var $fakelocal_3: ref;
  var $c4: int;
  var $fakelocal_1: ref;
  var $c3: int;
  var $r6: ref;
  var $r9: ref;
  var r1: ref;
  var $fakelocal_4: ref;
  var $i1: int;
  var $i0: int;
  var i5: int;
  var $i2: int;
  var $r8: ref;
  var $fakelocal_2: ref;
  var $r4: ref;
  var $r5: ref;
  var $r3: ref;
  var $fakelocal_5: ref;
  var $r7: ref;
  var $fakelocal_0: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r2: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.Object;
    $exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "String.java", 16, -1, -1, -1} true;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} r0 == r1;
    assert {:sourceloc "String.java", 16, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "String.java", 17, -1, -1, -1} true;
    $return := 1;
    goto block58;

  block58:
    return;

  anon37_Then:
    assume {:partition} r0 != r1;
    assert {:sourceloc "String.java", 16, -1, -1, -1} {:comment "thenblock"} true;
    goto block51;

  block51:
    assert {:sourceloc "String.java", 18, -1, -1, -1} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} r1 == unsafe.$null;
    assert {:sourceloc "String.java", 18, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  anon6:
    assert {:sourceloc "String.java", 19, -1, -1, -1} true;
    $return := 0;
    goto block58;

  anon38_Then:
    assume {:partition} r1 != unsafe.$null;
    assert {:sourceloc "String.java", 18, -1, -1, -1} {:comment "thenblock"} true;
    goto block52;

  block52:
    assert {:sourceloc "String.java", 20, -1, -1, -1} true;
    call $r3, $exception := unsafe.java.lang.Object$getClass$(r0);
    assert {:sourceloc "String.java", 20, -1, -1, -1} true;
    call $r4, $exception := unsafe.java.lang.Object$getClass$(r1);
    assert {:sourceloc "String.java", 20, -1, -1, -1} true;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} $r3 != $r4;
    assert {:sourceloc "String.java", 20, -1, -1, -1} {:comment "elseblock"} true;
    goto anon9;

  anon9:
    assert {:sourceloc "String.java", 21, -1, -1, -1} true;
    $return := 0;
    goto block58;

  anon39_Then:
    assume {:partition} $r3 == $r4;
    assert {:sourceloc "String.java", 20, -1, -1, -1} {:comment "thenblock"} true;
    goto block53;

  block53:
    assert {:sourceloc "String.java", 22, -1, -1, -1} true;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} !(unsafe.$heap[r1, unsafe.$type] <: unsafe.java.lang.String);
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon40_Then:
    assume {:partition} unsafe.$heap[r1, unsafe.$type] <: unsafe.java.lang.String;
    $exception := $exception;
    goto anon12;

  anon12:
    r2 := r1;
    assert {:sourceloc "String.java", 24, -1, -1, -1} true;
    $r5 := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 24, -1, -1, -1} true;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} $r5 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := 0;
    $exception := $fakelocal_1;
    return;

  anon41_Then:
    assume {:partition} $r5 != unsafe.$null;
    $exception := $exception;
    goto anon15;

  anon15:
    $i1 := unsafe.$arrSizeHeap[$r5];
    assert {:sourceloc "String.java", 24, -1, -1, -1} true;
    $r6 := unsafe.$heap[r2, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 24, -1, -1, -1} true;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} $r6 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := 0;
    $exception := $fakelocal_2;
    return;

  anon42_Then:
    assume {:partition} $r6 != unsafe.$null;
    $exception := $exception;
    goto anon18;

  anon18:
    $i0 := unsafe.$arrSizeHeap[$r6];
    assert {:sourceloc "String.java", 24, -1, -1, -1} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} $i1 != $i0;
    assert {:sourceloc "String.java", 24, -1, -1, -1} {:comment "elseblock"} true;
    goto anon21;

  anon21:
    assert {:sourceloc "String.java", 25, -1, -1, -1} true;
    $return := 0;
    goto block58;

  anon43_Then:
    assume {:partition} $i1 == $i0;
    assert {:sourceloc "String.java", 24, -1, -1, -1} {:comment "thenblock"} true;
    goto block54;

  block54:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    i5 := 0;
    goto block55;

  block55:
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Entry;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Entry:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return := $return;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception := $exception;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r2 := r2;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0 := r0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3 := $fakelocal_3;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4 := $c4;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3 := $c3;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9 := $r9;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4 := $fakelocal_4;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5 := i5;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2 := $i2;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8 := $r8;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5 := $fakelocal_5;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7 := $r7;
    havoc inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap := unsafe.$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$entry;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$entry:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block55;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block55:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7
   == unsafe.$null;
    call inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return := 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 + 1;
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57_dummy;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4
   == inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon33:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3 := unsafe.$intArrHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9][inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4
   != inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "elseblock"} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon33;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon30:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4 := unsafe.$intArrHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8][inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r2, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Else:
    assume {:partition} !(inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0);
    call inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return := 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon30;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon27:
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Else:
    assume {:partition} !(inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0);
    call inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return := 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2
   > inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon27;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon24:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2 := unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
   >= inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7
   != unsafe.$null;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon24;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57_dummy:
    assume false;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$exit:
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return:
    $return := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return;
    $exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    $fakelocal_3 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3;
    $c4 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4;
    $c3 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3;
    $r9 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9;
    $fakelocal_4 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4;
    i5 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5;
    $i2 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2;
    $r8 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8;
    $fakelocal_5 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5;
    $r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7;
    goto block55$1;

  block55$1:
    goto block55_last;

  anon44_Else:
    assume {:partition} $r7 == unsafe.$null;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := 0;
    $exception := $fakelocal_3;
    return;

  anon44_Then:
    assume {:partition} $r7 != unsafe.$null;
    $exception := $exception;
    goto anon24;

  anon24:
    $i2 := unsafe.$arrSizeHeap[$r7];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} $i2 > i5;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "elseblock"} true;
    goto anon27;

  anon27:
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    $r8 := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} !(i5 < unsafe.$arrSizeHeap[$r8] && i5 >= 0);
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_4;
    return;

  anon46_Then:
    assume {:partition} i5 < unsafe.$arrSizeHeap[$r8] && i5 >= 0;
    $exception := $exception;
    goto anon30;

  anon30:
    $c4 := unsafe.$intArrHeap[$r8][i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    $r9 := unsafe.$heap[r2, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} !(i5 < unsafe.$arrSizeHeap[$r9] && i5 >= 0);
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_5;
    return;

  anon47_Then:
    assume {:partition} i5 < unsafe.$arrSizeHeap[$r9] && i5 >= 0;
    $exception := $exception;
    goto anon33;

  anon33:
    $c3 := unsafe.$intArrHeap[$r9][i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} $c4 != $c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "elseblock"} true;
    goto anon36;

  anon36:
    assert {:sourceloc "String.java", 29, -1, -1, -1} true;
    $return := 0;
    goto block58;

  anon48_Then:
    assume {:partition} $c4 == $c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "thenblock"} true;
    goto block57;

  block57:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    i5 := i5 + 1;
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto block57_dummy;

  anon45_Then:
    assume {:partition} i5 >= $i2;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "thenblock"} true;
    goto block56;

  block56:
    assert {:sourceloc "String.java", 32, -1, -1, -1} true;
    $return := 1;
    goto block58;

  block57_dummy:
    assume false;
    return;

  block55_last:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    $r7 := unsafe.$heap[r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto anon44_Then, anon44_Else;
}



implementation unsafe.java.lang.Boolean$$la$init$ra$$boolean($this: ref, $in_parameter__0: int) returns ($exception: ref)
{
  var z0: int;
  var r0: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.Boolean;
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    z0 := $in_parameter__0;
    assert {:sourceloc "Boolean.java", 6, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    $exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "Boolean.java", 7, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.boolean$java.lang.Boolean$value0 := z0];
    assert {:sourceloc "Boolean.java", 8, -1, -1, -1} true;
    goto block59;

  block59:
    return;
}



implementation unsafe.java.lang.Boolean$valueOf$boolean($in_parameter__0: int) returns ($return: ref, $exception: ref)
{
  var z0: int;
  var $r0: ref;
  var $fakelocal_0: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0: int;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$in_parameter__0: int;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$heap: $heap_type;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.Boolean;
    $exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    z0 := $in_parameter__0;
    assert {:sourceloc "Boolean.java", 11, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.Boolean);
    $r0 := $fakelocal_0;
    assert {:sourceloc "Boolean.java", 11, -1, -1, -1} true;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$Entry;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$Entry:
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this := $r0;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$in_parameter__0 := z0;
    havoc inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0, inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0, inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$heap := unsafe.$heap;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this, unsafe.$type]
   <: unsafe.java.lang.Boolean;
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this != unsafe.$null;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0 := inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0 := inline$java.lang.Boolean$$la$init$ra$$boolean$0$$in_parameter__0;
    assert {:sourceloc "Boolean.java", 6, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0$1;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0$1:
    assert {:sourceloc "Boolean.java", 7, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0, unsafe.boolean$java.lang.Boolean$value0 := inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0];
    assert {:sourceloc "Boolean.java", 8, -1, -1, -1} true;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$block59;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$block59:
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$Return;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$Return:
    $exception := inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "Boolean.java", 11, -1, -1, -1} true;
    $return := $r0;
    goto block60;

  block60:
    return;
}



implementation unsafe.java.lang.Boolean$booleanValue$($this: ref) returns ($return: int, $exception: ref)
{
  var $z0: int;
  var r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.Boolean;
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Boolean.java", 15, -1, -1, -1} true;
    $z0 := unsafe.$heap[r0, unsafe.boolean$java.lang.Boolean$value0];
    assert {:sourceloc "Boolean.java", 15, -1, -1, -1} true;
    $return := $z0;
    goto block61;

  block61:
    return;
}



implementation unsafe.java.lang.Object$$la$init$ra$$($this: ref) returns ($exception: ref)
{

  anon0:
    $exception := unsafe.$null;
    return;
}



implementation unsafe.org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17(in_$exception: ref, 
    in_$i1: int, 
    in_$c3: int, 
    in_i5: int, 
    in_i4: int, 
    in_$c2: int, 
    in_r2: ref, 
    in_r3: ref)
   returns (out_$exception: ref, 
    out_$i1: int, 
    out_$c3: int, 
    out_i5: int, 
    out_i4: int, 
    out_$c2: int)
{
  var inline$java.lang.String$charAt$int$0$i0: int;
  var inline$java.lang.String$charAt$int$0$r0: ref;
  var inline$java.lang.String$charAt$int$0$$c1: int;
  var inline$java.lang.String$charAt$int$0$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$0$$r1: ref;
  var inline$java.lang.String$charAt$int$0$$this: ref;
  var inline$java.lang.String$charAt$int$0$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$0$$return: int;
  var inline$java.lang.String$charAt$int$0$$exception: ref;
  var inline$java.lang.String$charAt$int$0$$objIndex: int;
  var inline$java.lang.String$charAt$int$0$$heap: $heap_type;
  var inline$java.lang.String$charAt$int$1$i0: int;
  var inline$java.lang.String$charAt$int$1$r0: ref;
  var inline$java.lang.String$charAt$int$1$$c1: int;
  var inline$java.lang.String$charAt$int$1$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$1$$r1: ref;
  var inline$java.lang.String$charAt$int$1$$this: ref;
  var inline$java.lang.String$charAt$int$1$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$1$$return: int;
  var inline$java.lang.String$charAt$int$1$$exception: ref;
  var inline$java.lang.String$charAt$int$1$$objIndex: int;
  var inline$java.lang.String$charAt$int$1$$heap: $heap_type;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r2: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r3: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception: ref;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex: int;
  var inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap: $heap_type;
  var inline$java.lang.String$charAt$int$2$i0: int;
  var inline$java.lang.String$charAt$int$2$r0: ref;
  var inline$java.lang.String$charAt$int$2$$c1: int;
  var inline$java.lang.String$charAt$int$2$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$2$$r1: ref;
  var inline$java.lang.String$charAt$int$2$$this: ref;
  var inline$java.lang.String$charAt$int$2$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$2$$return: int;
  var inline$java.lang.String$charAt$int$2$$exception: ref;
  var inline$java.lang.String$charAt$int$2$$objIndex: int;
  var inline$java.lang.String$charAt$int$2$$heap: $heap_type;
  var inline$java.lang.String$charAt$int$3$i0: int;
  var inline$java.lang.String$charAt$int$3$r0: ref;
  var inline$java.lang.String$charAt$int$3$$c1: int;
  var inline$java.lang.String$charAt$int$3$$fakelocal_0: ref;
  var inline$java.lang.String$charAt$int$3$$r1: ref;
  var inline$java.lang.String$charAt$int$3$$this: ref;
  var inline$java.lang.String$charAt$int$3$$in_parameter__0: int;
  var inline$java.lang.String$charAt$int$3$$return: int;
  var inline$java.lang.String$charAt$int$3$$exception: ref;
  var inline$java.lang.String$charAt$int$3$$objIndex: int;
  var inline$java.lang.String$charAt$int$3$$heap: $heap_type;

  entry:
    out_$exception, out_$i1, out_$c3, out_i5, out_i4, out_$c2 := in_$exception, in_$i1, in_$c3, in_i5, in_i4, in_$c2;
    goto block17;

  block17:
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    out_$i1 := out_i4;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    out_i4 := out_i4 + -1;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    goto anon27_Then, anon27_Else;

  anon27_Then:
    assume {:partition} out_$i1 == 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "thenblock"} true;
    out_$exception, out_$i1, out_$c3, out_i5, out_i4, out_$c2 := in_$exception, in_$i1, in_$c3, in_i5, in_i4, in_$c2;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  block19:
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    out_i5 := out_i5 + 1;
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    goto block19_dummy;

  anon28_Then:
    assume {:partition} out_$c2 == out_$c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "thenblock"} true;
    goto block19;

  anon18:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$0$Entry;

  inline$java.lang.String$charAt$int$0$Entry:
    inline$java.lang.String$charAt$int$0$$this := in_r2;
    inline$java.lang.String$charAt$int$0$$in_parameter__0 := out_i5;
    havoc inline$java.lang.String$charAt$int$0$i0, inline$java.lang.String$charAt$int$0$r0, inline$java.lang.String$charAt$int$0$$c1, inline$java.lang.String$charAt$int$0$$fakelocal_0, inline$java.lang.String$charAt$int$0$$r1, inline$java.lang.String$charAt$int$0$$return, inline$java.lang.String$charAt$int$0$$exception;
    inline$java.lang.String$charAt$int$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$0$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$0$anon0;

  inline$java.lang.String$charAt$int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$0$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$0$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$0$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$r0 := inline$java.lang.String$charAt$int$0$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$i0 := inline$java.lang.String$charAt$int$0$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$0$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$0$anon4_Then, inline$java.lang.String$charAt$int$0$anon4_Else;

  inline$java.lang.String$charAt$int$0$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$0$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$0$$r1]
   && inline$java.lang.String$charAt$int$0$i0 >= 0);
    call inline$java.lang.String$charAt$int$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$0$$return := 0;
    inline$java.lang.String$charAt$int$0$$exception := inline$java.lang.String$charAt$int$0$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$0$Return;

  inline$java.lang.String$charAt$int$0$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$0$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$0$$r1]
   && inline$java.lang.String$charAt$int$0$i0 >= 0;
    inline$java.lang.String$charAt$int$0$$exception := inline$java.lang.String$charAt$int$0$$exception;
    goto inline$java.lang.String$charAt$int$0$anon3;

  inline$java.lang.String$charAt$int$0$anon3:
    inline$java.lang.String$charAt$int$0$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$0$$r1][inline$java.lang.String$charAt$int$0$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$0$$return := inline$java.lang.String$charAt$int$0$$c1;
    goto inline$java.lang.String$charAt$int$0$block50;

  inline$java.lang.String$charAt$int$0$block50:
    goto inline$java.lang.String$charAt$int$0$Return;

  inline$java.lang.String$charAt$int$0$Return:
    out_$c2 := inline$java.lang.String$charAt$int$0$$return;
    out_$exception := inline$java.lang.String$charAt$int$0$$exception;
    goto anon18$1;

  anon18$1:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$1$Entry;

  inline$java.lang.String$charAt$int$1$Entry:
    inline$java.lang.String$charAt$int$1$$this := in_r3;
    inline$java.lang.String$charAt$int$1$$in_parameter__0 := out_i5;
    havoc inline$java.lang.String$charAt$int$1$i0, inline$java.lang.String$charAt$int$1$r0, inline$java.lang.String$charAt$int$1$$c1, inline$java.lang.String$charAt$int$1$$fakelocal_0, inline$java.lang.String$charAt$int$1$$r1, inline$java.lang.String$charAt$int$1$$return, inline$java.lang.String$charAt$int$1$$exception;
    inline$java.lang.String$charAt$int$1$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$1$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$1$anon0;

  inline$java.lang.String$charAt$int$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$1$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$1$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$1$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$r0 := inline$java.lang.String$charAt$int$1$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$i0 := inline$java.lang.String$charAt$int$1$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$1$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$1$anon4_Then, inline$java.lang.String$charAt$int$1$anon4_Else;

  inline$java.lang.String$charAt$int$1$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$1$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$1$$r1]
   && inline$java.lang.String$charAt$int$1$i0 >= 0);
    call inline$java.lang.String$charAt$int$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$1$$return := 0;
    inline$java.lang.String$charAt$int$1$$exception := inline$java.lang.String$charAt$int$1$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$1$Return;

  inline$java.lang.String$charAt$int$1$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$1$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$1$$r1]
   && inline$java.lang.String$charAt$int$1$i0 >= 0;
    inline$java.lang.String$charAt$int$1$$exception := inline$java.lang.String$charAt$int$1$$exception;
    goto inline$java.lang.String$charAt$int$1$anon3;

  inline$java.lang.String$charAt$int$1$anon3:
    inline$java.lang.String$charAt$int$1$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$1$$r1][inline$java.lang.String$charAt$int$1$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$1$$return := inline$java.lang.String$charAt$int$1$$c1;
    goto inline$java.lang.String$charAt$int$1$block50;

  inline$java.lang.String$charAt$int$1$block50:
    goto inline$java.lang.String$charAt$int$1$Return;

  inline$java.lang.String$charAt$int$1$Return:
    out_$c3 := inline$java.lang.String$charAt$int$1$$return;
    out_$exception := inline$java.lang.String$charAt$int$1$$exception;
    goto anon18$2;

  anon18$2:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} out_$c2 != out_$c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "elseblock"} true;
    out_$exception, out_$i1, out_$c3, out_i5, out_i4, out_$c2 := in_$exception, in_$i1, in_$c3, in_i5, in_i4, in_$c2;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon27_Else:
    assume {:partition} out_$i1 != 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "elseblock"} true;
    goto anon18;

  block19_dummy:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception := out_$exception;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1 := out_$i1;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3 := out_$c3;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5 := out_i5;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4 := out_i4;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2 := out_$c2;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r2 := in_r2;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r3 := in_r3;
    havoc inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex := unsafe.$objIndex;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap := unsafe.$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$entry;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$entry:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block17;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block17:
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4
   + -1;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1
   == 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2;
    unsafe.$objIndex, unsafe.$heap := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19:
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5
   + 1;
    assert {:sourceloc "DefaultPasswordService.java", 152, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19_dummy;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Then:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2
   == inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$2$Entry;

  inline$java.lang.String$charAt$int$2$Entry:
    inline$java.lang.String$charAt$int$2$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r2;
    inline$java.lang.String$charAt$int$2$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5;
    havoc inline$java.lang.String$charAt$int$2$i0, inline$java.lang.String$charAt$int$2$r0, inline$java.lang.String$charAt$int$2$$c1, inline$java.lang.String$charAt$int$2$$fakelocal_0, inline$java.lang.String$charAt$int$2$$r1, inline$java.lang.String$charAt$int$2$$return, inline$java.lang.String$charAt$int$2$$exception;
    inline$java.lang.String$charAt$int$2$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$2$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$2$anon0;

  inline$java.lang.String$charAt$int$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$2$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$2$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$2$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$r0 := inline$java.lang.String$charAt$int$2$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$i0 := inline$java.lang.String$charAt$int$2$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$2$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$2$anon4_Then, inline$java.lang.String$charAt$int$2$anon4_Else;

  inline$java.lang.String$charAt$int$2$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$2$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$2$$r1]
   && inline$java.lang.String$charAt$int$2$i0 >= 0);
    call inline$java.lang.String$charAt$int$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$2$$return := 0;
    inline$java.lang.String$charAt$int$2$$exception := inline$java.lang.String$charAt$int$2$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$2$Return;

  inline$java.lang.String$charAt$int$2$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$2$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$2$$r1]
   && inline$java.lang.String$charAt$int$2$i0 >= 0;
    inline$java.lang.String$charAt$int$2$$exception := inline$java.lang.String$charAt$int$2$$exception;
    goto inline$java.lang.String$charAt$int$2$anon3;

  inline$java.lang.String$charAt$int$2$anon3:
    inline$java.lang.String$charAt$int$2$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$2$$r1][inline$java.lang.String$charAt$int$2$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$2$$return := inline$java.lang.String$charAt$int$2$$c1;
    goto inline$java.lang.String$charAt$int$2$block50;

  inline$java.lang.String$charAt$int$2$block50:
    goto inline$java.lang.String$charAt$int$2$Return;

  inline$java.lang.String$charAt$int$2$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$java.lang.String$charAt$int$2$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception := inline$java.lang.String$charAt$int$2$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$1;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$1:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$3$Entry;

  inline$java.lang.String$charAt$int$3$Entry:
    inline$java.lang.String$charAt$int$3$$this := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_r3;
    inline$java.lang.String$charAt$int$3$$in_parameter__0 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5;
    havoc inline$java.lang.String$charAt$int$3$i0, inline$java.lang.String$charAt$int$3$r0, inline$java.lang.String$charAt$int$3$$c1, inline$java.lang.String$charAt$int$3$$fakelocal_0, inline$java.lang.String$charAt$int$3$$r1, inline$java.lang.String$charAt$int$3$$return, inline$java.lang.String$charAt$int$3$$exception;
    inline$java.lang.String$charAt$int$3$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$charAt$int$3$$heap := unsafe.$heap;
    goto inline$java.lang.String$charAt$int$3$anon0;

  inline$java.lang.String$charAt$int$3$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "String.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.String$charAt$int$3$$this, unsafe.$type]
   <: unsafe.java.lang.String;
    assume {:sourceloc "String.java", -1, -1, -1, -1} inline$java.lang.String$charAt$int$3$$this != unsafe.$null;
    inline$java.lang.String$charAt$int$3$$exception := unsafe.$null;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$r0 := inline$java.lang.String$charAt$int$3$$this;
    assert {:sourceloc "String.java", -1, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$i0 := inline$java.lang.String$charAt$int$3$$in_parameter__0;
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$$r1 := unsafe.$heap[inline$java.lang.String$charAt$int$3$r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    goto inline$java.lang.String$charAt$int$3$anon4_Then, inline$java.lang.String$charAt$int$3$anon4_Else;

  inline$java.lang.String$charAt$int$3$anon4_Else:
    assume {:partition} !(inline$java.lang.String$charAt$int$3$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$3$$r1]
   && inline$java.lang.String$charAt$int$3$i0 >= 0);
    call inline$java.lang.String$charAt$int$3$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$charAt$int$3$$return := 0;
    inline$java.lang.String$charAt$int$3$$exception := inline$java.lang.String$charAt$int$3$$fakelocal_0;
    goto inline$java.lang.String$charAt$int$3$Return;

  inline$java.lang.String$charAt$int$3$anon4_Then:
    assume {:partition} inline$java.lang.String$charAt$int$3$i0
     < unsafe.$arrSizeHeap[inline$java.lang.String$charAt$int$3$$r1]
   && inline$java.lang.String$charAt$int$3$i0 >= 0;
    inline$java.lang.String$charAt$int$3$$exception := inline$java.lang.String$charAt$int$3$$exception;
    goto inline$java.lang.String$charAt$int$3$anon3;

  inline$java.lang.String$charAt$int$3$anon3:
    inline$java.lang.String$charAt$int$3$$c1 := unsafe.$intArrHeap[inline$java.lang.String$charAt$int$3$$r1][inline$java.lang.String$charAt$int$3$i0];
    assert {:sourceloc "String.java", 11, -1, -1, -1} true;
    inline$java.lang.String$charAt$int$3$$return := inline$java.lang.String$charAt$int$3$$c1;
    goto inline$java.lang.String$charAt$int$3$block50;

  inline$java.lang.String$charAt$int$3$block50:
    goto inline$java.lang.String$charAt$int$3$Return;

  inline$java.lang.String$charAt$int$3$Return:
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3 := inline$java.lang.String$charAt$int$3$$return;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception := inline$java.lang.String$charAt$int$3$$exception;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$2;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18$2:
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Then, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Else;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon28_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2
   != inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3;
    assert {:sourceloc "DefaultPasswordService.java", 150, -1, -1, -1} {:comment "elseblock"} true;
    inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$exception, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$i1, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c3, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i5, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_i4, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$in_$c2;
    unsafe.$objIndex, unsafe.$heap := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$objIndex, inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$$heap;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon27_Else:
    assume {:partition} inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1
   != 0;
    assert {:sourceloc "DefaultPasswordService.java", 149, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$anon18;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$block19_dummy:
    assume false;
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$exit:
    goto inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return;

  inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$Return:
    out_$exception := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$exception;
    out_$i1 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$i1;
    out_$c3 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c3;
    out_i5 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i5;
    out_i4 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_i4;
    out_$c2 := inline$org.apache.shiro.authc.credential.DefaultPasswordService$jdkStringEquals$java.lang.Object_java.lang.Object_loop_block17$0$out_$c2;
    goto block19_dummy$1;

  block19_dummy$1:
    return;

  exit:
    return;
}



implementation unsafe.java.lang.StringBuilder$append$java.lang.String_loop_block45(in_$return: ref, 
    in_$exception: ref, 
    in_r2: ref, 
    in_$fakelocal_8: ref, 
    in_$r7: ref, 
    in_$i4: int, 
    in_$c5: int, 
    in_r1: ref, 
    in_$r8: ref, 
    in_$fakelocal_10: ref, 
    in_i8: int, 
    in_$fakelocal_9: ref)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_$fakelocal_8: ref, 
    out_$r7: ref, 
    out_$i4: int, 
    out_$c5: int, 
    out_$r8: ref, 
    out_$fakelocal_10: ref, 
    out_i8: int, 
    out_$fakelocal_9: ref)
{
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap: $heap_type;

  entry:
    out_$return, out_$exception, out_$fakelocal_8, out_$r7, out_$i4, out_$c5, out_$r8, out_$fakelocal_10, out_i8, out_$fakelocal_9 := in_$return, in_$exception, in_$fakelocal_8, in_$r7, in_$i4, in_$c5, in_$r8, in_$fakelocal_10, in_i8, in_$fakelocal_9;
    goto block45;

  block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    out_$r7 := unsafe.$heap[in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} out_$r7 == unsafe.$null;
    call out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_8;
    out_$return, out_$exception, out_$fakelocal_8, out_$r7, out_$i4, out_$c5, out_$r8, out_$fakelocal_10, out_i8, out_$fakelocal_9 := in_$return, in_$exception, in_$fakelocal_8, in_$r7, in_$i4, in_$c5, in_$r8, in_$fakelocal_10, in_i8, in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[in_r2 := unsafe.$intArrHeap[in_r2][out_i8 := out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    out_i8 := out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto anon36_dummy;

  anon48_Then:
    assume {:partition} out_i8 < unsafe.$arrSizeHeap[in_r2] && out_i8 >= 0;
    out_$exception := out_$exception;
    goto anon36;

  anon33:
    out_$c5 := unsafe.$intArrHeap[out_$r8][out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} !(out_i8 < unsafe.$arrSizeHeap[in_r2] && out_i8 >= 0);
    call out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_10;
    out_$return, out_$exception, out_$fakelocal_8, out_$r7, out_$i4, out_$c5, out_$r8, out_$fakelocal_10, out_i8, out_$fakelocal_9 := in_$return, in_$exception, in_$fakelocal_8, in_$r7, in_$i4, in_$c5, in_$r8, in_$fakelocal_10, in_i8, in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon47_Then:
    assume {:partition} out_i8 < unsafe.$arrSizeHeap[out_$r8] && out_i8 >= 0;
    out_$exception := out_$exception;
    goto anon33;

  anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    out_$r8 := unsafe.$heap[in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} !(out_i8 < unsafe.$arrSizeHeap[out_$r8] && out_i8 >= 0);
    call out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_9;
    out_$return, out_$exception, out_$fakelocal_8, out_$r7, out_$i4, out_$c5, out_$r8, out_$fakelocal_10, out_i8, out_$fakelocal_9 := in_$return, in_$exception, in_$fakelocal_8, in_$r7, in_$i4, in_$c5, in_$r8, in_$fakelocal_10, in_i8, in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon46_Else:
    assume {:partition} out_$i4 > out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto anon30;

  anon27:
    out_$i4 := unsafe.$arrSizeHeap[out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto anon46_Then, anon46_Else;

  anon46_Then:
    assume {:partition} out_i8 >= out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    out_$return, out_$exception, out_$fakelocal_8, out_$r7, out_$i4, out_$c5, out_$r8, out_$fakelocal_10, out_i8, out_$fakelocal_9 := in_$return, in_$exception, in_$fakelocal_8, in_$r7, in_$i4, in_$c5, in_$r8, in_$fakelocal_10, in_i8, in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon45_Then:
    assume {:partition} out_$r7 != unsafe.$null;
    out_$exception := out_$exception;
    goto anon27;

  anon36_dummy:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return := out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception := out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2 := in_r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8 := out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7 := out_$r7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4 := out_$i4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5 := out_$c5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1 := in_r1;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8 := out_$r8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10 := out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8 := out_i8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9 := out_$fakelocal_9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$block45;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$block45:
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5]];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8 + 1;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon33:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8][inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon48_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon33;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon30:
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_r1, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "StringBuilder.java", 12, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon47_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon30;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon27:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7];
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon46_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4;
    assert {:sourceloc "StringBuilder.java", 11, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$i4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$c5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$r8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_10, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_i8, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$in_$fakelocal_9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon45_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon27;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$anon36_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$Return:
    out_$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$return;
    out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$exception;
    out_$fakelocal_8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_8;
    out_$r7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r7;
    out_$i4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$i4;
    out_$c5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$c5;
    out_$r8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$r8;
    out_$fakelocal_10 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_10;
    out_i8 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_i8;
    out_$fakelocal_9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block45$0$out_$fakelocal_9;
    goto anon36_dummy$1;

  anon36_dummy$1:
    return;

  exit:
    return;
}



implementation unsafe.java.lang.StringBuilder$append$java.lang.String_loop_block43(in_$return: ref, 
    in_$exception: ref, 
    in_r2: ref, 
    in_$c6: int, 
    in_$r5: ref, 
    in_$i3: int, 
    in_$fakelocal_5: ref, 
    in_$fakelocal_4: ref, 
    in_i7: int, 
    in_$fakelocal_6: ref, 
    in_r0: ref, 
    in_$r9: ref)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_$c6: int, 
    out_$r5: ref, 
    out_$i3: int, 
    out_$fakelocal_5: ref, 
    out_$fakelocal_4: ref, 
    out_i7: int, 
    out_$fakelocal_6: ref, 
    out_$r9: ref)
{
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9: ref;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap: intArrHeap_type;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex: int;
  var inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap: $heap_type;

  entry:
    out_$return, out_$exception, out_$c6, out_$r5, out_$i3, out_$fakelocal_5, out_$fakelocal_4, out_i7, out_$fakelocal_6, out_$r9 := in_$return, in_$exception, in_$c6, in_$r5, in_$i3, in_$fakelocal_5, in_$fakelocal_4, in_i7, in_$fakelocal_6, in_$r9;
    goto block43;

  block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    out_$r5 := unsafe.$heap[in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} out_$r5 == unsafe.$null;
    call out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_4;
    out_$return, out_$exception, out_$c6, out_$r5, out_$i3, out_$fakelocal_5, out_$fakelocal_4, out_i7, out_$fakelocal_6, out_$r9 := in_$return, in_$exception, in_$c6, in_$r5, in_$i3, in_$fakelocal_5, in_$fakelocal_4, in_i7, in_$fakelocal_6, in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[in_r2 := unsafe.$intArrHeap[in_r2][out_i7 := out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    out_i7 := out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto anon21_dummy;

  anon43_Then:
    assume {:partition} out_i7 < unsafe.$arrSizeHeap[in_r2] && out_i7 >= 0;
    out_$exception := out_$exception;
    goto anon21;

  anon18:
    out_$c6 := unsafe.$intArrHeap[out_$r9][out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} !(out_i7 < unsafe.$arrSizeHeap[in_r2] && out_i7 >= 0);
    call out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_6;
    out_$return, out_$exception, out_$c6, out_$r5, out_$i3, out_$fakelocal_5, out_$fakelocal_4, out_i7, out_$fakelocal_6, out_$r9 := in_$return, in_$exception, in_$c6, in_$r5, in_$i3, in_$fakelocal_5, in_$fakelocal_4, in_i7, in_$fakelocal_6, in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon42_Then:
    assume {:partition} out_i7 < unsafe.$arrSizeHeap[out_$r9] && out_i7 >= 0;
    out_$exception := out_$exception;
    goto anon18;

  anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    out_$r9 := unsafe.$heap[in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} !(out_i7 < unsafe.$arrSizeHeap[out_$r9] && out_i7 >= 0);
    call out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_5;
    out_$return, out_$exception, out_$c6, out_$r5, out_$i3, out_$fakelocal_5, out_$fakelocal_4, out_i7, out_$fakelocal_6, out_$r9 := in_$return, in_$exception, in_$c6, in_$r5, in_$i3, in_$fakelocal_5, in_$fakelocal_4, in_i7, in_$fakelocal_6, in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon41_Else:
    assume {:partition} out_$i3 > out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto anon15;

  anon12:
    out_$i3 := unsafe.$arrSizeHeap[out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto anon41_Then, anon41_Else;

  anon41_Then:
    assume {:partition} out_i7 >= out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    out_$return, out_$exception, out_$c6, out_$r5, out_$i3, out_$fakelocal_5, out_$fakelocal_4, out_i7, out_$fakelocal_6, out_$r9 := in_$return, in_$exception, in_$c6, in_$r5, in_$i3, in_$fakelocal_5, in_$fakelocal_4, in_i7, in_$fakelocal_6, in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon40_Then:
    assume {:partition} out_$r5 != unsafe.$null;
    out_$exception := out_$exception;
    goto anon12;

  anon21_dummy:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return := out_$return;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception := out_$exception;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2 := in_r2;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6 := out_$c6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5 := out_$r5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3 := out_$i3;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5 := out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4 := out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7 := out_i7;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6 := out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0 := in_r0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9 := out_$r9;
    havoc inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap := unsafe.$intArrHeap;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap := unsafe.$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$entry;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$entry:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$block43;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$block43:
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5
   == unsafe.$null;
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6]];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7 + 1;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21_dummy;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon18:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6 := unsafe.$intArrHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9][inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon43_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r2]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon18;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon15:
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := unsafe.$heap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_r0, unsafe.char$lp$$rp$$java.lang.StringBuilder$chars305];
    assert {:sourceloc "StringBuilder.java", 9, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon42_Else:
    assume {:partition} !(inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     < unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9]
   && inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
     >= 0);
    call inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return := unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Else:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3
   > inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon15;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon12:
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3 := unsafe.$arrSizeHeap[inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5];
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} true;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Then, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Else;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon41_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7
   >= inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3;
    assert {:sourceloc "StringBuilder.java", 8, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$return, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$exception, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$c6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$i3, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_5, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_4, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_i7, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$fakelocal_6, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$in_$r9;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$intArrHeap, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$objIndex, inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$$heap;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon40_Then:
    assume {:partition} inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5
   != unsafe.$null;
    inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon12;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$anon21_dummy:
    assume false;
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$exit:
    goto inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return;

  inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$Return:
    out_$return := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$return;
    out_$exception := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$exception;
    out_$c6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$c6;
    out_$r5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r5;
    out_$i3 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$i3;
    out_$fakelocal_5 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_5;
    out_$fakelocal_4 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_4;
    out_i7 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_i7;
    out_$fakelocal_6 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$fakelocal_6;
    out_$r9 := inline$java.lang.StringBuilder$append$java.lang.String_loop_block43$0$out_$r9;
    goto anon21_dummy$1;

  anon21_dummy$1:
    return;

  exit:
    return;
}



implementation unsafe.java.lang.String$equals$java.lang.Object_loop_block55(in_$return: int, 
    in_$exception: ref, 
    in_r2: ref, 
    in_r0: ref, 
    in_$fakelocal_3: ref, 
    in_$c4: int, 
    in_$c3: int, 
    in_$r9: ref, 
    in_$fakelocal_4: ref, 
    in_i5: int, 
    in_$i2: int, 
    in_$r8: ref, 
    in_$fakelocal_5: ref, 
    in_$r7: ref)
   returns (out_$return: int, 
    out_$exception: ref, 
    out_$fakelocal_3: ref, 
    out_$c4: int, 
    out_$c3: int, 
    out_$r9: ref, 
    out_$fakelocal_4: ref, 
    out_i5: int, 
    out_$i2: int, 
    out_$r8: ref, 
    out_$fakelocal_5: ref, 
    out_$r7: ref)
{
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r2: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7: ref;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex: int;
  var inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap: $heap_type;

  entry:
    out_$return, out_$exception, out_$fakelocal_3, out_$c4, out_$c3, out_$r9, out_$fakelocal_4, out_i5, out_$i2, out_$r8, out_$fakelocal_5, out_$r7 := in_$return, in_$exception, in_$fakelocal_3, in_$c4, in_$c3, in_$r9, in_$fakelocal_4, in_i5, in_$i2, in_$r8, in_$fakelocal_5, in_$r7;
    goto block55;

  block55:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    out_$r7 := unsafe.$heap[in_r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} out_$r7 == unsafe.$null;
    call out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.NullPointerException);
    out_$return := 0;
    out_$exception := out_$fakelocal_3;
    out_$return, out_$exception, out_$fakelocal_3, out_$c4, out_$c3, out_$r9, out_$fakelocal_4, out_i5, out_$i2, out_$r8, out_$fakelocal_5, out_$r7 := in_$return, in_$exception, in_$fakelocal_3, in_$c4, in_$c3, in_$r9, in_$fakelocal_4, in_i5, in_$i2, in_$r8, in_$fakelocal_5, in_$r7;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  block57:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    out_i5 := out_i5 + 1;
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto block57_dummy;

  anon48_Then:
    assume {:partition} out_$c4 == out_$c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "thenblock"} true;
    goto block57;

  anon33:
    out_$c3 := unsafe.$intArrHeap[out_$r9][out_i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} out_$c4 != out_$c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "elseblock"} true;
    out_$return, out_$exception, out_$fakelocal_3, out_$c4, out_$c3, out_$r9, out_$fakelocal_4, out_i5, out_$i2, out_$r8, out_$fakelocal_5, out_$r7 := in_$return, in_$exception, in_$fakelocal_3, in_$c4, in_$c3, in_$r9, in_$fakelocal_4, in_i5, in_$i2, in_$r8, in_$fakelocal_5, in_$r7;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon47_Then:
    assume {:partition} out_i5 < unsafe.$arrSizeHeap[out_$r9] && out_i5 >= 0;
    out_$exception := out_$exception;
    goto anon33;

  anon30:
    out_$c4 := unsafe.$intArrHeap[out_$r8][out_i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    out_$r9 := unsafe.$heap[in_r2, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} !(out_i5 < unsafe.$arrSizeHeap[out_$r9] && out_i5 >= 0);
    call out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := 0;
    out_$exception := out_$fakelocal_5;
    out_$return, out_$exception, out_$fakelocal_3, out_$c4, out_$c3, out_$r9, out_$fakelocal_4, out_i5, out_$i2, out_$r8, out_$fakelocal_5, out_$r7 := in_$return, in_$exception, in_$fakelocal_3, in_$c4, in_$c3, in_$r9, in_$fakelocal_4, in_i5, in_$i2, in_$r8, in_$fakelocal_5, in_$r7;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon46_Then:
    assume {:partition} out_i5 < unsafe.$arrSizeHeap[out_$r8] && out_i5 >= 0;
    out_$exception := out_$exception;
    goto anon30;

  anon27:
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    out_$r8 := unsafe.$heap[in_r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} !(out_i5 < unsafe.$arrSizeHeap[out_$r8] && out_i5 >= 0);
    call out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := 0;
    out_$exception := out_$fakelocal_4;
    out_$return, out_$exception, out_$fakelocal_3, out_$c4, out_$c3, out_$r9, out_$fakelocal_4, out_i5, out_$i2, out_$r8, out_$fakelocal_5, out_$r7 := in_$return, in_$exception, in_$fakelocal_3, in_$c4, in_$c3, in_$r9, in_$fakelocal_4, in_i5, in_$i2, in_$r8, in_$fakelocal_5, in_$r7;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon45_Else:
    assume {:partition} out_$i2 > out_i5;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "elseblock"} true;
    goto anon27;

  anon24:
    out_$i2 := unsafe.$arrSizeHeap[out_$r7];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto anon45_Then, anon45_Else;

  anon45_Then:
    assume {:partition} out_i5 >= out_$i2;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "thenblock"} true;
    out_$return, out_$exception, out_$fakelocal_3, out_$c4, out_$c3, out_$r9, out_$fakelocal_4, out_i5, out_$i2, out_$r8, out_$fakelocal_5, out_$r7 := in_$return, in_$exception, in_$fakelocal_3, in_$c4, in_$c3, in_$r9, in_$fakelocal_4, in_i5, in_$i2, in_$r8, in_$fakelocal_5, in_$r7;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon44_Then:
    assume {:partition} out_$r7 != unsafe.$null;
    out_$exception := out_$exception;
    goto anon24;

  block57_dummy:
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Entry;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Entry:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return := out_$return;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception := out_$exception;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r2 := in_r2;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0 := in_r0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3 := out_$fakelocal_3;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4 := out_$c4;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3 := out_$c3;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9 := out_$r9;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4 := out_$fakelocal_4;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5 := out_i5;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2 := out_$i2;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8 := out_$r8;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5 := out_$fakelocal_5;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7 := out_$r7;
    havoc inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex := unsafe.$objIndex;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap := unsafe.$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$entry;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$entry:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block55;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block55:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7
   == unsafe.$null;
    call inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return := 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57:
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 + 1;
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57_dummy;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4
   == inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon33:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3 := unsafe.$intArrHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9][inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon48_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4
   != inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3;
    assert {:sourceloc "String.java", 28, -1, -1, -1} {:comment "elseblock"} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon33;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon30:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4 := unsafe.$intArrHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8][inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r2, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon47_Else:
    assume {:partition} !(inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0);
    call inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return := 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon30;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon27:
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8 := unsafe.$heap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_r0, unsafe.char$lp$$rp$$java.lang.String$chars306];
    assert {:sourceloc "String.java", 28, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon46_Else:
    assume {:partition} !(inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
     < unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8]
   && inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5 >= 0);
    call inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return := 0;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Else:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2
   > inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon27;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon24:
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2 := unsafe.$arrSizeHeap[inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7];
    assert {:sourceloc "String.java", 27, -1, -1, -1} true;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Then, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Else;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon45_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5
   >= inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2;
    assert {:sourceloc "String.java", 27, -1, -1, -1} {:comment "thenblock"} true;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$return, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$exception, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$c3, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r9, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_4, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_i5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$i2, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r8, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$fakelocal_5, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$in_$r7;
    unsafe.$objIndex, unsafe.$heap := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$objIndex, inline$java.lang.String$equals$java.lang.Object_loop_block55$0$$heap;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon44_Then:
    assume {:partition} inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7
   != unsafe.$null;
    inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$anon24;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$block57_dummy:
    assume false;
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$exit:
    goto inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return;

  inline$java.lang.String$equals$java.lang.Object_loop_block55$0$Return:
    out_$return := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$return;
    out_$exception := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$exception;
    out_$fakelocal_3 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_3;
    out_$c4 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c4;
    out_$c3 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$c3;
    out_$r9 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r9;
    out_$fakelocal_4 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_4;
    out_i5 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_i5;
    out_$i2 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$i2;
    out_$r8 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r8;
    out_$fakelocal_5 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$fakelocal_5;
    out_$r7 := inline$java.lang.String$equals$java.lang.Object_loop_block55$0$out_$r7;
    goto block57_dummy$1;

  block57_dummy$1:
    return;

  exit:
    return;
}



type ref;

type javaType;

type Field _;

type $heap_type = <$GenericType__0>[ref,Field $GenericType__0]$GenericType__0;

type boolArrHeap_type = [ref][int]bool;

type refArrHeap_type = [ref][int]ref;

type realArrHeap_type = [ref][int]int;

type intArrHeap_type = [ref][int]int;
