/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Thu Apr 21 13:15:16 GMT 2022
 */

package org.apache.shiro.authc.credential;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class DefaultPasswordService_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.apache.shiro.authc.credential.DefaultPasswordService"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/home/haifeng/files/sc-fix/evaluation/subjects/shiro_hashEquals_unsafe"); 
    java.lang.System.setProperty("java.io.tmpdir", "/tmp"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(DefaultPasswordService_ESTest_scaffolding.class.getClassLoader() ,
      "org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory",
      "org.apache.shiro.codec.Base64",
      "org.apache.shiro.crypto.hash.format.HexFormat",
      "org.apache.shiro.crypto.hash.format.Base64Format",
      "org.apache.shiro.authc.credential.PasswordService",
      "org.apache.shiro.crypto.hash.format.ModularCryptFormat",
      "org.apache.shiro.crypto.hash.format.ParsableHashFormat",
      "org.apache.shiro.crypto.hash.ConfigurableHashService",
      "org.apache.shiro.util.ClassUtils$ExceptionIgnoringAccessor",
      "org.apache.shiro.codec.Hex",
      "org.apache.shiro.codec.CodecException",
      "org.apache.shiro.crypto.hash.Md2Hash",
      "org.apache.shiro.crypto.SecureRandomNumberGenerator",
      "org.apache.shiro.crypto.hash.DefaultHashService",
      "org.apache.shiro.authc.credential.DefaultPasswordService",
      "org.apache.shiro.ShiroException",
      "org.apache.shiro.util.ClassUtils",
      "org.apache.shiro.util.ClassUtils$1",
      "org.apache.shiro.authc.credential.HashingPasswordService",
      "org.apache.shiro.crypto.hash.format.HashFormat",
      "org.apache.shiro.util.ByteSource",
      "org.apache.shiro.crypto.hash.HashRequest$Builder",
      "org.apache.shiro.util.InstantiationException",
      "org.apache.shiro.crypto.hash.SimpleHash",
      "org.apache.shiro.crypto.hash.AbstractHash",
      "org.apache.shiro.crypto.hash.SimpleHashRequest",
      "org.apache.shiro.crypto.UnknownAlgorithmException",
      "org.apache.shiro.util.ClassUtils$ClassLoaderAccessor",
      "org.apache.shiro.crypto.RandomNumberGenerator",
      "org.apache.shiro.util.SimpleByteSource$BytesHelper",
      "org.apache.shiro.util.ClassUtils$3",
      "org.apache.shiro.util.StringUtils",
      "org.apache.shiro.util.SimpleByteSource",
      "org.apache.shiro.util.UnknownClassException",
      "org.apache.shiro.util.ClassUtils$2",
      "org.apache.shiro.crypto.hash.HashRequest",
      "org.apache.shiro.util.ByteSource$Util",
      "org.apache.shiro.crypto.hash.HashService",
      "org.apache.shiro.codec.CodecSupport",
      "org.apache.shiro.crypto.hash.format.HashFormatFactory",
      "org.apache.shiro.crypto.hash.Hash",
      "org.apache.shiro.crypto.hash.format.ProvidedHashFormat",
      "org.apache.shiro.crypto.CryptoException",
      "org.apache.shiro.crypto.hash.format.Shiro1CryptFormat"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(DefaultPasswordService_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.apache.shiro.authc.credential.DefaultPasswordService",
      "org.apache.shiro.crypto.hash.DefaultHashService",
      "org.apache.shiro.crypto.SecureRandomNumberGenerator",
      "org.apache.shiro.crypto.hash.format.Shiro1CryptFormat",
      "org.apache.shiro.crypto.hash.format.DefaultHashFormatFactory",
      "org.apache.shiro.crypto.hash.SimpleHashRequest",
      "org.apache.shiro.codec.CodecSupport",
      "org.apache.shiro.crypto.hash.AbstractHash",
      "org.apache.shiro.crypto.hash.SimpleHash",
      "org.apache.shiro.crypto.hash.Md2Hash",
      "org.apache.shiro.util.StringUtils",
      "org.apache.shiro.ShiroException",
      "org.apache.shiro.codec.CodecException",
      "org.apache.shiro.util.ByteSource$Util",
      "org.apache.shiro.util.SimpleByteSource",
      "org.apache.shiro.codec.Hex",
      "org.apache.shiro.codec.Base64",
      "org.apache.shiro.crypto.hash.HashRequest$Builder",
      "org.apache.shiro.crypto.hash.format.ProvidedHashFormat",
      "org.apache.shiro.util.ClassUtils$ExceptionIgnoringAccessor",
      "org.apache.shiro.util.ClassUtils$1",
      "org.apache.shiro.util.ClassUtils$2",
      "org.apache.shiro.util.ClassUtils$3",
      "org.apache.shiro.util.ClassUtils",
      "org.apache.shiro.util.UnknownClassException",
      "org.apache.shiro.crypto.hash.format.HexFormat",
      "org.apache.shiro.util.SimpleByteSource$BytesHelper",
      "org.apache.shiro.crypto.hash.format.Base64Format",
      "org.apache.shiro.crypto.CryptoException",
      "org.apache.shiro.crypto.UnknownAlgorithmException"
    );
  }
}
