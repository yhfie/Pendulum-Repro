#globals
globals: (unsafe.$heap, fixed.$heap);(unsafe.$intArrayType, fixed.$intArrayType);(unsafe.$charArrayType, fixed.$charArrayType);(unsafe.$boolArrayType, fixed.$boolArrayType);(unsafe.$byteArrayType, fixed.$byteArrayType);(unsafe.$longArrayType, fixed.$longArrayType);(unsafe.$arrSizeHeap, fixed.$arrSizeHeap);(unsafe.$stringSizeHeap, fixed.$stringSizeHeap);(unsafe.$boolArrHeap, fixed.$boolArrHeap);(unsafe.$refArrHeap, fixed.$refArrHeap);(unsafe.$realArrHeap, fixed.$realArrHeap);(unsafe.$intArrHeap, fixed.$intArrHeap);(unsafe.$objIndex, fixed.$objIndex);(unsafe.long$java.math.BigInteger$value0, fixed.long$java.math.BigInteger$value0);(unsafe.java.math.BigInteger$java.math.BigInteger$ONE259, fixed.java.math.BigInteger$java.math.BigInteger$ONE259);(unsafe.java.math.BigInteger$java.math.BigInteger$ZERO260, fixed.java.math.BigInteger$java.math.BigInteger$ZERO260);(unsafe.java.math.BigInteger$java.math.BigInteger$ONE80, fixed.java.math.BigInteger$java.math.BigInteger$ONE80);(unsafe.java.math.BigInteger$java.math.BigInteger$ZERO79, fixed.java.math.BigInteger$java.math.BigInteger$ZERO79);
#types
types: (unsafe.ref, fixed.ref);(unsafe.javaType, fixed.javaType);(unsafe.Field, fixed.Field);(unsafe.$heap_type, fixed.$heap_type);(unsafe.boolArrHeap_type, fixed.boolArrHeap_type);(unsafe.refArrHeap_type, fixed.refArrHeap_type);(unsafe.realArrHeap_type, fixed.realArrHeap_type);(unsafe.intArrHeap_type, fixed.intArrHeap_type);
#constants
constants: (unsafe.$type, fixed.$type);(unsafe.$alloc, fixed.$alloc);(unsafe.$null, fixed.$null);(unsafe.java.lang.Object, fixed.java.lang.Object);(unsafe.java.math.BigInteger, fixed.java.math.BigInteger);(unsafe.java.io.Serializable, fixed.java.io.Serializable);(unsafe.java.lang.Throwable, fixed.java.lang.Throwable);(unsafe.java.lang.Exception, fixed.java.lang.Exception);(unsafe.java.lang.RuntimeException, fixed.java.lang.RuntimeException);(unsafe.java.lang.NullPointerException, fixed.java.lang.NullPointerException);(unsafe.java.lang.ArithmeticException, fixed.java.lang.ArithmeticException);(unsafe.java.lang.reflect.AnnotatedElement, fixed.java.lang.reflect.AnnotatedElement);(unsafe.java.lang.reflect.GenericDeclaration, fixed.java.lang.reflect.GenericDeclaration);(unsafe.java.lang.reflect.Type, fixed.java.lang.reflect.Type);(unsafe.java.lang.Class, fixed.java.lang.Class);(unsafe.java.lang.ClassCastException, fixed.java.lang.ClassCastException);(unsafe.ModPow1, fixed.ModPow1);(unsafe.java.lang.Number, fixed.java.lang.Number);(unsafe.java.lang.Comparable, fixed.java.lang.Comparable);(unsafe.java.lang.Math, fixed.java.lang.Math);
#functions
function: (unsafe.$arrayType, fixed.$arrayType) / (t, t);($ret, $ret);
function: (unsafe.$intToReal, fixed.$intToReal) / (x, x);($ret, $ret);
function: (unsafe.$intToBool, fixed.$intToBool) / (x, x);($ret, $ret);
function: (unsafe.$refToBool, fixed.$refToBool) / (x, x);($ret, $ret);
function: (unsafe.$boolToInt, fixed.$boolToInt) / (x, x);($ret, $ret);
function: (unsafe.$cmpBool, fixed.$cmpBool) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$cmpRef, fixed.$cmpRef) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$cmpReal, fixed.$cmpReal) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$cmpInt, fixed.$cmpInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$bitOr, fixed.$bitOr) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$bitAnd, fixed.$bitAnd) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$xorInt, fixed.$xorInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$shlInt, fixed.$shlInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$ushrInt, fixed.$ushrInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$shrInt, fixed.$shrInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$mulInt, fixed.$mulInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$divInt, fixed.$divInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$modInt, fixed.$modInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$intToRef, fixed.$intToRef) / (id, id);($ret, $ret);

#procedures
procedure: (unsafe.$new, fixed.$new) / (obj_type, obj_type);($obj, $obj);
procedure: (unsafe.java.lang.Object$java.lang.Object$clone$43, fixed.java.lang.Object$java.lang.Object$clone$43) / ($this, $this);($other, $other);
procedure: (unsafe.int$java.lang.String$compareTo$87, fixed.int$java.lang.String$compareTo$87) / ($this, $this);($other, $other);($return, $return);
procedure: (unsafe.java.math.BigInteger$$la$init$ra$$long, fixed.java.math.BigInteger$$la$init$ra$$long) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.Object$$la$init$ra$$, fixed.java.lang.Object$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.math.BigInteger$valueOf$long, fixed.java.math.BigInteger$valueOf$long) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.math.BigInteger$multiply$java.math.BigInteger, fixed.java.math.BigInteger$multiply$java.math.BigInteger) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.math.BigInteger$shiftRight$int, fixed.java.math.BigInteger$shiftRight$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.math.BigInteger$shiftLeft$int, fixed.java.math.BigInteger$shiftLeft$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.math.BigInteger$subtract$java.math.BigInteger, fixed.java.math.BigInteger$subtract$java.math.BigInteger) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.math.BigInteger$add$java.math.BigInteger, fixed.java.math.BigInteger$add$java.math.BigInteger) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.math.BigInteger$mod$java.math.BigInteger, fixed.java.math.BigInteger$mod$java.math.BigInteger) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.ArithmeticException$$la$init$ra$$, fixed.java.lang.ArithmeticException$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.math.BigInteger$bitLength$, fixed.java.math.BigInteger$bitLength$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.math.BigInteger$testBit$int, fixed.java.math.BigInteger$testBit$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.math.BigInteger$equals$java.lang.Object, fixed.java.math.BigInteger$equals$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Object$getClass$, fixed.java.lang.Object$getClass$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.math.BigInteger$$la$clinit$ra$$, fixed.java.math.BigInteger$$la$clinit$ra$$) / ($exception, $exception);
procedure: (unsafe.ModPow1$$la$init$ra$$, fixed.ModPow1$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.ModPow1$modPow1_unsafe$java.math.BigInteger_java.math.BigInteger_java.math.BigInteger_int, fixed.ModPow1$modPow1_unsafe$java.math.BigInteger_java.math.BigInteger_java.math.BigInteger_int) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($in_parameter__3, $in_parameter__3);($return, $return);($exception, $exception);
procedure: (unsafe.ModPow1$standardMultiply$java.math.BigInteger_java.math.BigInteger, fixed.ModPow1$standardMultiply$java.math.BigInteger_java.math.BigInteger) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.ModPow1$modPow1_unsafe_inline$java.math.BigInteger_java.math.BigInteger_java.math.BigInteger, fixed.ModPow1$modPow1_unsafe_inline$java.math.BigInteger_java.math.BigInteger_java.math.BigInteger) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Math$max$int_int, fixed.java.lang.Math$max$int_int) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Math$abs$int, fixed.java.lang.Math$abs$int) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.ModPow1$fastMultiply_1$java.math.BigInteger_java.math.BigInteger, fixed.ModPow1$fastMultiply_1$java.math.BigInteger_java.math.BigInteger) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.ModPow1$fastMultiply_inline$java.math.BigInteger_java.math.BigInteger, fixed.ModPow1$fastMultiply_inline$java.math.BigInteger_java.math.BigInteger) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);


