(set-option :print-success false)
(set-info :smt-lib-version 2.0)
(set-option :produce-models true)
(set-option :AUTO_CONFIG false)
(set-option :pp.bv_literals false)
(set-option :MODEL.V2 true)
(set-option :smt.PHASE_SELECTION 0)
(set-option :smt.RESTART_STRATEGY 0)
(set-option :smt.RESTART_FACTOR |1.5|)
(set-option :smt.ARITH.RANDOM_INITIAL_VALUE true)
(set-option :smt.CASE_SPLIT 3)
(set-option :smt.DELAY_UNITS true)
(set-option :NNF.SK_HACK true)
(set-option :smt.MBQI false)
(set-option :smt.QI.EAGER_THRESHOLD 100)
(set-option :TYPE_CHECK true)
(set-option :smt.BV.REFLECT true)
(set-option :TIMEOUT 20000000)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun Ctor (T@T) Int)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun boolType () T@T)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun type (T@U) T@T)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun javaTypeType () T@T)
(declare-fun fixed.java.lang.Object () T@U)
(declare-fun fixed.java.lang.String () T@U)
(declare-fun oneStep (T@U T@U) T@U)
(declare-fun fixed.java.io.Serializable () T@U)
(declare-fun fixed.java.lang.Throwable () T@U)
(declare-fun fixed.java.lang.Exception () T@U)
(declare-fun fixed.java.lang.RuntimeException () T@U)
(declare-fun fixed.java.lang.IndexOutOfBoundsException () T@U)
(declare-fun fixed.java.lang.ArrayIndexOutOfBoundsException () T@U)
(declare-fun fixed.java.lang.Boolean () T@U)
(declare-fun fixed.java.lang.Comparable () T@U)
(declare-fun fixed.java.lang.Integer () T@U)
(declare-fun fixed.java.lang.NullPointerException () T@U)
(declare-fun fixed.java.lang.ClassCastException () T@U)
(declare-fun fixed.sg.edu.nus.comp.tsunami.safe.Safe () T@U)
(declare-fun fixed.Credential () T@U)
(declare-fun fixed.java.lang.CharSequence () T@U)
(declare-fun FieldType (T@T) T@T)
(declare-fun FieldTypeInv0 (T@T) T@T)
(declare-fun fixed.$type () T@U)
(declare-fun fixed.$alloc () T@U)
(declare-fun refType () T@T)
(declare-fun fixed.$null () T@U)
(declare-fun fixed.$intToBool (Int) Bool)
(declare-fun fixed.$refToBool (T@U) Bool)
(declare-fun fixed.$boolToInt (Bool) Int)
(declare-fun fixed.$cmpReal (Real Real) Int)
(declare-fun fixed.$cmpInt (Int Int) Int)
(declare-fun fixed.$intToRef (Int) T@U)
(declare-fun MapType0Type (T@T) T@T)
(declare-fun MapType0TypeInv0 (T@T) T@T)
(declare-fun MapType0Select (T@U T@U T@U) T@U)
(declare-fun MapType0Store (T@U T@U T@U T@U) T@U)
(declare-fun fixed.$heap () T@U)
(declare-fun fixed.$heap@6 () T@U)
(declare-fun $in_parameter__0 () T@U)
(declare-fun $in_parameter__1 () T@U)
(declare-fun fixed.$heap@10 () T@U)
(declare-fun MapType1Type (T@T T@T) T@T)
(declare-fun MapType1TypeInv0 (T@T) T@T)
(declare-fun MapType1TypeInv1 (T@T) T@T)
(declare-fun MapType1Select (T@U T@U) T@U)
(declare-fun MapType1Store (T@U T@U T@U) T@U)
(declare-fun fixed.$arrSizeHeap () T@U)
(declare-fun fixed.$stringSizeHeap () T@U)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2 () T@U)
(declare-fun fixed.$heap@9 () T@U)
(declare-fun fixed.$heap@8 () T@U)
(declare-fun call3formal@$obj@0 () T@U)
(declare-fun fixed.$intArrHeap () T@U)
(declare-fun fixed.char$lp$$rp$$java.lang.String$chars259 () T@U)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2 () T@U)
(declare-fun fixed.$heap@7 () T@U)
(declare-fun call3formal@$obj@0@@0 () T@U)
(declare-fun fixed.$heap@14 () T@U)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2 () T@U)
(declare-fun fixed.$heap@13 () T@U)
(declare-fun fixed.$heap@12 () T@U)
(declare-fun call3formal@$obj@0@@1 () T@U)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2 () T@U)
(declare-fun fixed.$heap@11 () T@U)
(declare-fun call3formal@$obj@0@@2 () T@U)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2 () T@U)
(declare-fun fixed.$heap@2 () T@U)
(declare-fun fixed.$heap@1 () T@U)
(declare-fun call3formal@$obj@0@@3 () T@U)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2 () T@U)
(declare-fun fixed.$heap@0 () T@U)
(declare-fun call3formal@$obj@0@@4 () T@U)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2 () T@U)
(declare-fun fixed.$heap@5 () T@U)
(declare-fun fixed.$heap@4 () T@U)
(declare-fun call3formal@$obj@0@@5 () T@U)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2 () T@U)
(declare-fun fixed.$heap@3 () T@U)
(declare-fun call3formal@$obj@0@@6 () T@U)
(declare-fun %lbl%+332587 () Bool)
(declare-fun %lbl%+332580 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$z0@1 () Int)
(declare-fun fixed.$bitAnd (Int Int) Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z1 () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i5@1 () Int)
(declare-fun %lbl%+332582 () Bool)
(declare-fun %lbl%+332581 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 () Int)
(declare-fun %lbl%+332579 () Bool)
(declare-fun %lbl%+332578 () Bool)
(declare-fun %lbl%+332577 () Bool)
(declare-fun %lbl%+332576 () Bool)
(declare-fun %lbl%+332575 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2 () Int)
(declare-fun %lbl%+332574 () Bool)
(declare-fun %lbl%+332573 () Bool)
(declare-fun %lbl%+332572 () Bool)
(declare-fun fixed.$objIndex@5 () Int)
(declare-fun fixed.$objIndex@4 () Int)
(declare-fun %lbl%+332571 () Bool)
(declare-fun %lbl%+332570 () Bool)
(declare-fun %lbl%+332569 () Bool)
(declare-fun %lbl%+332568 () Bool)
(declare-fun %lbl%+332567 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2 () Int)
(declare-fun fixed.$objIndex () Int)
(declare-fun %lbl%+332566 () Bool)
(declare-fun %lbl%+332565 () Bool)
(declare-fun %lbl%+332564 () Bool)
(declare-fun fixed.$objIndex@3 () Int)
(declare-fun %lbl%+332563 () Bool)
(declare-fun %lbl%+332562 () Bool)
(declare-fun %lbl%+332561 () Bool)
(declare-fun %lbl%+332560 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 () Int)
(declare-fun %lbl%+332556 () Bool)
(declare-fun %lbl%+332533 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_z0@2 () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$z1 () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_i5@2 () Int)
(declare-fun %lbl%+332535 () Bool)
(declare-fun %lbl%+332536 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 () Int)
(declare-fun %lbl%+332534 () Bool)
(declare-fun %lbl%+332555 () Bool)
(declare-fun %lbl%+332553 () Bool)
(declare-fun %lbl%+332552 () Bool)
(declare-fun %lbl%+332551 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2 () Int)
(declare-fun %lbl%+332550 () Bool)
(declare-fun %lbl%+332549 () Bool)
(declare-fun %lbl%+332548 () Bool)
(declare-fun fixed.$objIndex@2 () Int)
(declare-fun fixed.$objIndex@1 () Int)
(declare-fun %lbl%+332547 () Bool)
(declare-fun %lbl%+332546 () Bool)
(declare-fun %lbl%+332545 () Bool)
(declare-fun %lbl%+332544 () Bool)
(declare-fun %lbl%+332543 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2 () Int)
(declare-fun %lbl%+332542 () Bool)
(declare-fun %lbl%+332541 () Bool)
(declare-fun %lbl%+332540 () Bool)
(declare-fun fixed.$objIndex@0 () Int)
(declare-fun %lbl%+332539 () Bool)
(declare-fun %lbl%+332538 () Bool)
(declare-fun %lbl%+332537 () Bool)
(declare-fun %lbl%+332554 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$i2@2 () Int)
(declare-fun %lbl%+332681 () Bool)
(declare-fun %lbl%+332676 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$z1@1 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$z0 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i7@1 () Int)
(declare-fun %lbl%+332675 () Bool)
(declare-fun %lbl%+332672 () Bool)
(declare-fun %lbl%+332671 () Bool)
(declare-fun %lbl%+332670 () Bool)
(declare-fun %lbl%+332669 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b3@2 () Int)
(declare-fun %lbl%+332673 () Bool)
(declare-fun %lbl%+332668 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 () Int)
(declare-fun %lbl%+332667 () Bool)
(declare-fun %lbl%+332666 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b2@2 () Int)
(declare-fun %lbl%+332674 () Bool)
(declare-fun %lbl%+332665 () Bool)
(declare-fun %lbl%+332664 () Bool)
(declare-fun %lbl%+332663 () Bool)
(declare-fun %lbl%+332662 () Bool)
(declare-fun %lbl%+332661 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2 () Int)
(declare-fun %lbl%+332660 () Bool)
(declare-fun %lbl%+332659 () Bool)
(declare-fun %lbl%+332658 () Bool)
(declare-fun fixed.$objIndex@11 () Int)
(declare-fun fixed.$objIndex@10 () Int)
(declare-fun %lbl%+332657 () Bool)
(declare-fun %lbl%+332656 () Bool)
(declare-fun %lbl%+332655 () Bool)
(declare-fun %lbl%+332654 () Bool)
(declare-fun %lbl%+332653 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2 () Int)
(declare-fun %lbl%+332652 () Bool)
(declare-fun %lbl%+332651 () Bool)
(declare-fun %lbl%+332650 () Bool)
(declare-fun fixed.$objIndex@9 () Int)
(declare-fun %lbl%+332649 () Bool)
(declare-fun %lbl%+332648 () Bool)
(declare-fun %lbl%+332647 () Bool)
(declare-fun %lbl%+332646 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 () Int)
(declare-fun %lbl%+332642 () Bool)
(declare-fun %lbl%+332640 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_z1@2 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$z0 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_i7@2 () Int)
(declare-fun %lbl%+332639 () Bool)
(declare-fun %lbl%+332636 () Bool)
(declare-fun %lbl%+332635 () Bool)
(declare-fun %lbl%+332634 () Bool)
(declare-fun %lbl%+332633 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b3@2 () Int)
(declare-fun %lbl%+332637 () Bool)
(declare-fun %lbl%+332632 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 () Int)
(declare-fun %lbl%+332631 () Bool)
(declare-fun %lbl%+332630 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b2@2 () Int)
(declare-fun %lbl%+332638 () Bool)
(declare-fun %lbl%+332629 () Bool)
(declare-fun %lbl%+332628 () Bool)
(declare-fun %lbl%+332627 () Bool)
(declare-fun %lbl%+332626 () Bool)
(declare-fun %lbl%+332625 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2 () Int)
(declare-fun %lbl%+332624 () Bool)
(declare-fun %lbl%+332623 () Bool)
(declare-fun %lbl%+332622 () Bool)
(declare-fun fixed.$objIndex@8 () Int)
(declare-fun fixed.$objIndex@7 () Int)
(declare-fun %lbl%+332621 () Bool)
(declare-fun %lbl%+332620 () Bool)
(declare-fun %lbl%+332619 () Bool)
(declare-fun %lbl%+332618 () Bool)
(declare-fun %lbl%+332617 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2 () Int)
(declare-fun %lbl%+332616 () Bool)
(declare-fun %lbl%+332615 () Bool)
(declare-fun %lbl%+332614 () Bool)
(declare-fun fixed.$objIndex@6 () Int)
(declare-fun %lbl%+332613 () Bool)
(declare-fun %lbl%+332612 () Bool)
(declare-fun %lbl%+332611 () Bool)
(declare-fun %lbl%+332641 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_$i2@2 () Int)
(declare-fun %lbl%+339788 () Bool)
(declare-fun %lbl%@345016 () Bool)
(declare-fun AA_TEMP383@2 () Bool)
(declare-fun AA_TEMP382@2 () Bool)
(declare-fun AA_TEMP381@2 () Bool)
(declare-fun AA_TEMP380@2 () Bool)
(declare-fun %lbl%+332684 () Bool)
(declare-fun AA_TEMP380@1 () Bool)
(declare-fun AA_TEMP380@0 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 () Int)
(declare-fun AA_TEMP381@1 () Bool)
(declare-fun AA_TEMP381@0 () Bool)
(declare-fun AA_TEMP382@1 () Bool)
(declare-fun AA_TEMP382@0 () Bool)
(declare-fun AA_TEMP383@1 () Bool)
(declare-fun AA_TEMP383@0 () Bool)
(declare-fun %lbl%+332683 () Bool)
(declare-fun %lbl%+332595 () Bool)
(declare-fun %lbl%+332678 () Bool)
(declare-fun %lbl%+332677 () Bool)
(declare-fun %lbl%+332682 () Bool)
(declare-fun %lbl%+332645 () Bool)
(declare-fun %lbl%+332644 () Bool)
(declare-fun %lbl%+332610 () Bool)
(declare-fun %lbl%+332609 () Bool)
(declare-fun %lbl%+332608 () Bool)
(declare-fun %lbl%+332607 () Bool)
(declare-fun %lbl%+332606 () Bool)
(declare-fun %lbl%+332605 () Bool)
(declare-fun %lbl%+332604 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i0@1 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i1@1 () Int)
(declare-fun %lbl%+332603 () Bool)
(declare-fun %lbl%+332602 () Bool)
(declare-fun %lbl%+332601 () Bool)
(declare-fun %lbl%+332600 () Bool)
(declare-fun %lbl%+332679 () Bool)
(declare-fun %lbl%+332599 () Bool)
(declare-fun %lbl%+332598 () Bool)
(declare-fun %lbl%+332680 () Bool)
(declare-fun %lbl%+332597 () Bool)
(declare-fun %lbl%+332596 () Bool)
(declare-fun %lbl%+332594 () Bool)
(declare-fun %lbl%+332593 () Bool)
(declare-fun %lbl%+332592 () Bool)
(declare-fun %lbl%+332591 () Bool)
(declare-fun %lbl%+332590 () Bool)
(declare-fun %lbl%+332589 () Bool)
(declare-fun %lbl%+332517 () Bool)
(declare-fun %lbl%+332584 () Bool)
(declare-fun %lbl%+332583 () Bool)
(declare-fun %lbl%+332588 () Bool)
(declare-fun %lbl%+332559 () Bool)
(declare-fun %lbl%+332558 () Bool)
(declare-fun %lbl%+332532 () Bool)
(declare-fun %lbl%+332531 () Bool)
(declare-fun %lbl%+332530 () Bool)
(declare-fun %lbl%+332529 () Bool)
(declare-fun %lbl%+332528 () Bool)
(declare-fun %lbl%+332527 () Bool)
(declare-fun %lbl%+332526 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i0@1 () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i1@1 () Int)
(declare-fun %lbl%+332525 () Bool)
(declare-fun %lbl%+332524 () Bool)
(declare-fun %lbl%+332523 () Bool)
(declare-fun %lbl%+332522 () Bool)
(declare-fun %lbl%+332585 () Bool)
(declare-fun %lbl%+332521 () Bool)
(declare-fun %lbl%+332520 () Bool)
(declare-fun %lbl%+332586 () Bool)
(declare-fun %lbl%+332519 () Bool)
(declare-fun %lbl%+332518 () Bool)
(declare-fun %lbl%+332516 () Bool)
(declare-fun %lbl%+332515 () Bool)
(declare-fun %lbl%+332514 () Bool)
(declare-fun %lbl%+332513 () Bool)
(declare-fun %lbl%+332512 () Bool)
(declare-fun %lbl%+339786 () Bool)
(declare-fun %lbl%+339801 () Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (Ctor intType) 0) (= (Ctor realType) 1)) (= (Ctor boolType) 2)) (forall ((arg0 Int) ) (! (= (U_2_int (int_2_U arg0)) arg0)
 :qid |typeInv:U_2_int|
 :pattern ( (int_2_U arg0))
))) (forall ((x T@U) ) (!  (=> (= (type x) intType) (= (int_2_U (U_2_int x)) x))
 :qid |cast:U_2_int|
 :pattern ( (U_2_int x))
))) (forall ((arg0@@0 Int) ) (! (= (type (int_2_U arg0@@0)) intType)
 :qid |funType:int_2_U|
 :pattern ( (int_2_U arg0@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :qid |typeInv:U_2_real|
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@0 T@U) ) (!  (=> (= (type x@@0) realType) (= (real_2_U (U_2_real x@@0)) x@@0))
 :qid |cast:U_2_real|
 :pattern ( (U_2_real x@@0))
))) (forall ((arg0@@2 Real) ) (! (= (type (real_2_U arg0@@2)) realType)
 :qid |funType:real_2_U|
 :pattern ( (real_2_U arg0@@2))
))) (forall ((arg0@@3 Bool) ) (! (= (U_2_bool (bool_2_U arg0@@3)) arg0@@3)
 :qid |typeInv:U_2_bool|
 :pattern ( (bool_2_U arg0@@3))
))) (forall ((x@@1 T@U) ) (!  (=> (= (type x@@1) boolType) (= (bool_2_U (U_2_bool x@@1)) x@@1))
 :qid |cast:U_2_bool|
 :pattern ( (U_2_bool x@@1))
))) (forall ((arg0@@4 Bool) ) (! (= (type (bool_2_U arg0@@4)) boolType)
 :qid |funType:bool_2_U|
 :pattern ( (bool_2_U arg0@@4))
))))
(assert (forall ((x@@2 T@U) ) (! (UOrdering2 x@@2 x@@2)
 :qid |bg:subtype-refl|
 :no-pattern (U_2_int x@@2)
 :no-pattern (U_2_bool x@@2)
)))
(assert (forall ((x@@3 T@U) (y T@U) (z T@U) ) (! (let ((alpha (type x@@3)))
 (=> (and (and (= (type y) alpha) (= (type z) alpha)) (and (UOrdering2 x@@3 y) (UOrdering2 y z))) (UOrdering2 x@@3 z)))
 :qid |bg:subtype-trans|
 :pattern ( (UOrdering2 x@@3 y) (UOrdering2 y z))
)))
(assert (forall ((x@@4 T@U) (y@@0 T@U) ) (! (let ((alpha@@0 (type x@@4)))
 (=> (= (type y@@0) alpha@@0) (=> (and (UOrdering2 x@@4 y@@0) (UOrdering2 y@@0 x@@4)) (= x@@4 y@@0))))
 :qid |bg:subtype-antisymm|
 :pattern ( (UOrdering2 x@@4 y@@0) (UOrdering2 y@@0 x@@4))
)))
(assert  (and (= (Ctor javaTypeType) 3) (= (type fixed.java.lang.Object) javaTypeType)))
(assert (forall ((w T@U) ) (!  (=> (and (= (type w) javaTypeType) (UOrdering2 fixed.java.lang.Object w)) (= fixed.java.lang.Object w))
 :pattern ( (UOrdering2 fixed.java.lang.Object w))
)))
(assert (= (type fixed.java.lang.String) javaTypeType))
(assert (not (= fixed.java.lang.String fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.String fixed.java.lang.Object))
(assert (forall ((w@@0 T@U) ) (!  (=> (= (type w@@0) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.String w@@0) (UOrdering2 w@@0 fixed.java.lang.Object)) (or (= fixed.java.lang.String w@@0) (= fixed.java.lang.Object w@@0))))
 :pattern ( (UOrdering2 fixed.java.lang.String w@@0) (UOrdering2 w@@0 fixed.java.lang.Object))
)))
(assert (forall ((w@@1 T@U) ) (!  (=> (and (= (type w@@1) javaTypeType) (UOrdering2 fixed.java.lang.String w@@1)) (or (= fixed.java.lang.String w@@1) (UOrdering2 fixed.java.lang.Object w@@1)))
 :pattern ( (UOrdering2 fixed.java.lang.String w@@1))
)))
(assert (forall ((arg0@@5 T@U) (arg1 T@U) ) (! (= (type (oneStep arg0@@5 arg1)) javaTypeType)
 :qid |funType:oneStep|
 :pattern ( (oneStep arg0@@5 arg1))
)))
(assert (forall ((w@@2 T@U) ) (!  (=> (and (= (type w@@2) javaTypeType) (UOrdering2 w@@2 fixed.java.lang.String)) (= (oneStep fixed.java.lang.Object w@@2) fixed.java.lang.String))
 :pattern ( (UOrdering2 w@@2 fixed.java.lang.String))
)))
(assert (= (type fixed.java.io.Serializable) javaTypeType))
(assert (forall ((w@@3 T@U) ) (!  (=> (and (= (type w@@3) javaTypeType) (UOrdering2 fixed.java.io.Serializable w@@3)) (= fixed.java.io.Serializable w@@3))
 :pattern ( (UOrdering2 fixed.java.io.Serializable w@@3))
)))
(assert (= (type fixed.java.lang.Throwable) javaTypeType))
(assert (not (= fixed.java.lang.Throwable fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.Throwable fixed.java.lang.Object))
(assert (not (= fixed.java.lang.Throwable fixed.java.io.Serializable)))
(assert (UOrdering2 fixed.java.lang.Throwable fixed.java.io.Serializable))
(assert (forall ((w@@4 T@U) ) (!  (=> (= (type w@@4) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Throwable w@@4) (UOrdering2 w@@4 fixed.java.lang.Object)) (or (= fixed.java.lang.Throwable w@@4) (= fixed.java.lang.Object w@@4))))
 :pattern ( (UOrdering2 fixed.java.lang.Throwable w@@4) (UOrdering2 w@@4 fixed.java.lang.Object))
)))
(assert (forall ((w@@5 T@U) ) (!  (=> (= (type w@@5) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Throwable w@@5) (UOrdering2 w@@5 fixed.java.io.Serializable)) (or (= fixed.java.lang.Throwable w@@5) (= fixed.java.io.Serializable w@@5))))
 :pattern ( (UOrdering2 fixed.java.lang.Throwable w@@5) (UOrdering2 w@@5 fixed.java.io.Serializable))
)))
(assert (forall ((w@@6 T@U) ) (!  (=> (and (= (type w@@6) javaTypeType) (UOrdering2 fixed.java.lang.Throwable w@@6)) (or (or (= fixed.java.lang.Throwable w@@6) (UOrdering2 fixed.java.lang.Object w@@6)) (UOrdering2 fixed.java.io.Serializable w@@6)))
 :pattern ( (UOrdering2 fixed.java.lang.Throwable w@@6))
)))
(assert (forall ((w@@7 T@U) ) (!  (=> (and (= (type w@@7) javaTypeType) (UOrdering2 w@@7 fixed.java.lang.Throwable)) (= (oneStep fixed.java.lang.Object w@@7) fixed.java.lang.Throwable))
 :pattern ( (UOrdering2 w@@7 fixed.java.lang.Throwable))
)))
(assert (= (type fixed.java.lang.Exception) javaTypeType))
(assert (not (= fixed.java.lang.Exception fixed.java.lang.Throwable)))
(assert (UOrdering2 fixed.java.lang.Exception fixed.java.lang.Throwable))
(assert (forall ((w@@8 T@U) ) (!  (=> (= (type w@@8) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Exception w@@8) (UOrdering2 w@@8 fixed.java.lang.Throwable)) (or (= fixed.java.lang.Exception w@@8) (= fixed.java.lang.Throwable w@@8))))
 :pattern ( (UOrdering2 fixed.java.lang.Exception w@@8) (UOrdering2 w@@8 fixed.java.lang.Throwable))
)))
(assert (forall ((w@@9 T@U) ) (!  (=> (and (= (type w@@9) javaTypeType) (UOrdering2 fixed.java.lang.Exception w@@9)) (or (= fixed.java.lang.Exception w@@9) (UOrdering2 fixed.java.lang.Throwable w@@9)))
 :pattern ( (UOrdering2 fixed.java.lang.Exception w@@9))
)))
(assert (forall ((w@@10 T@U) ) (!  (=> (and (= (type w@@10) javaTypeType) (UOrdering2 w@@10 fixed.java.lang.Exception)) (= (oneStep fixed.java.lang.Throwable w@@10) fixed.java.lang.Exception))
 :pattern ( (UOrdering2 w@@10 fixed.java.lang.Exception))
)))
(assert (= (type fixed.java.lang.RuntimeException) javaTypeType))
(assert (not (= fixed.java.lang.RuntimeException fixed.java.lang.Exception)))
(assert (UOrdering2 fixed.java.lang.RuntimeException fixed.java.lang.Exception))
(assert (forall ((w@@11 T@U) ) (!  (=> (= (type w@@11) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.RuntimeException w@@11) (UOrdering2 w@@11 fixed.java.lang.Exception)) (or (= fixed.java.lang.RuntimeException w@@11) (= fixed.java.lang.Exception w@@11))))
 :pattern ( (UOrdering2 fixed.java.lang.RuntimeException w@@11) (UOrdering2 w@@11 fixed.java.lang.Exception))
)))
(assert (forall ((w@@12 T@U) ) (!  (=> (and (= (type w@@12) javaTypeType) (UOrdering2 fixed.java.lang.RuntimeException w@@12)) (or (= fixed.java.lang.RuntimeException w@@12) (UOrdering2 fixed.java.lang.Exception w@@12)))
 :pattern ( (UOrdering2 fixed.java.lang.RuntimeException w@@12))
)))
(assert (forall ((w@@13 T@U) ) (!  (=> (and (= (type w@@13) javaTypeType) (UOrdering2 w@@13 fixed.java.lang.RuntimeException)) (= (oneStep fixed.java.lang.Exception w@@13) fixed.java.lang.RuntimeException))
 :pattern ( (UOrdering2 w@@13 fixed.java.lang.RuntimeException))
)))
(assert (= (type fixed.java.lang.IndexOutOfBoundsException) javaTypeType))
(assert (not (= fixed.java.lang.IndexOutOfBoundsException fixed.java.lang.RuntimeException)))
(assert (UOrdering2 fixed.java.lang.IndexOutOfBoundsException fixed.java.lang.RuntimeException))
(assert (forall ((w@@14 T@U) ) (!  (=> (= (type w@@14) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@14) (UOrdering2 w@@14 fixed.java.lang.RuntimeException)) (or (= fixed.java.lang.IndexOutOfBoundsException w@@14) (= fixed.java.lang.RuntimeException w@@14))))
 :pattern ( (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@14) (UOrdering2 w@@14 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@15 T@U) ) (!  (=> (and (= (type w@@15) javaTypeType) (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@15)) (or (= fixed.java.lang.IndexOutOfBoundsException w@@15) (UOrdering2 fixed.java.lang.RuntimeException w@@15)))
 :pattern ( (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@15))
)))
(assert (forall ((w@@16 T@U) ) (!  (=> (and (= (type w@@16) javaTypeType) (UOrdering2 w@@16 fixed.java.lang.IndexOutOfBoundsException)) (= (oneStep fixed.java.lang.RuntimeException w@@16) fixed.java.lang.IndexOutOfBoundsException))
 :pattern ( (UOrdering2 w@@16 fixed.java.lang.IndexOutOfBoundsException))
)))
(assert (= (type fixed.java.lang.ArrayIndexOutOfBoundsException) javaTypeType))
(assert (not (= fixed.java.lang.ArrayIndexOutOfBoundsException fixed.java.lang.IndexOutOfBoundsException)))
(assert (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException fixed.java.lang.IndexOutOfBoundsException))
(assert (forall ((w@@17 T@U) ) (!  (=> (= (type w@@17) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@17) (UOrdering2 w@@17 fixed.java.lang.IndexOutOfBoundsException)) (or (= fixed.java.lang.ArrayIndexOutOfBoundsException w@@17) (= fixed.java.lang.IndexOutOfBoundsException w@@17))))
 :pattern ( (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@17) (UOrdering2 w@@17 fixed.java.lang.IndexOutOfBoundsException))
)))
(assert (forall ((w@@18 T@U) ) (!  (=> (and (= (type w@@18) javaTypeType) (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@18)) (or (= fixed.java.lang.ArrayIndexOutOfBoundsException w@@18) (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@18)))
 :pattern ( (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@18))
)))
(assert (forall ((w@@19 T@U) ) (!  (=> (and (= (type w@@19) javaTypeType) (UOrdering2 w@@19 fixed.java.lang.ArrayIndexOutOfBoundsException)) (= (oneStep fixed.java.lang.IndexOutOfBoundsException w@@19) fixed.java.lang.ArrayIndexOutOfBoundsException))
 :pattern ( (UOrdering2 w@@19 fixed.java.lang.ArrayIndexOutOfBoundsException))
)))
(assert (= (type fixed.java.lang.Boolean) javaTypeType))
(assert (not (= fixed.java.lang.Boolean fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.Boolean fixed.java.lang.Object))
(assert (forall ((w@@20 T@U) ) (!  (=> (= (type w@@20) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Boolean w@@20) (UOrdering2 w@@20 fixed.java.lang.Object)) (or (= fixed.java.lang.Boolean w@@20) (= fixed.java.lang.Object w@@20))))
 :pattern ( (UOrdering2 fixed.java.lang.Boolean w@@20) (UOrdering2 w@@20 fixed.java.lang.Object))
)))
(assert (forall ((w@@21 T@U) ) (!  (=> (and (= (type w@@21) javaTypeType) (UOrdering2 fixed.java.lang.Boolean w@@21)) (or (= fixed.java.lang.Boolean w@@21) (UOrdering2 fixed.java.lang.Object w@@21)))
 :pattern ( (UOrdering2 fixed.java.lang.Boolean w@@21))
)))
(assert (forall ((w@@22 T@U) ) (!  (=> (and (= (type w@@22) javaTypeType) (UOrdering2 w@@22 fixed.java.lang.Boolean)) (= (oneStep fixed.java.lang.Object w@@22) fixed.java.lang.Boolean))
 :pattern ( (UOrdering2 w@@22 fixed.java.lang.Boolean))
)))
(assert (= (type fixed.java.lang.Comparable) javaTypeType))
(assert (forall ((w@@23 T@U) ) (!  (=> (and (= (type w@@23) javaTypeType) (UOrdering2 fixed.java.lang.Comparable w@@23)) (= fixed.java.lang.Comparable w@@23))
 :pattern ( (UOrdering2 fixed.java.lang.Comparable w@@23))
)))
(assert (= (type fixed.java.lang.Integer) javaTypeType))
(assert (not (= fixed.java.lang.Integer fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.Integer fixed.java.lang.Object))
(assert (not (= fixed.java.lang.Integer fixed.java.io.Serializable)))
(assert (UOrdering2 fixed.java.lang.Integer fixed.java.io.Serializable))
(assert (not (= fixed.java.lang.Integer fixed.java.lang.Comparable)))
(assert (UOrdering2 fixed.java.lang.Integer fixed.java.lang.Comparable))
(assert (forall ((w@@24 T@U) ) (!  (=> (= (type w@@24) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Integer w@@24) (UOrdering2 w@@24 fixed.java.lang.Object)) (or (= fixed.java.lang.Integer w@@24) (= fixed.java.lang.Object w@@24))))
 :pattern ( (UOrdering2 fixed.java.lang.Integer w@@24) (UOrdering2 w@@24 fixed.java.lang.Object))
)))
(assert (forall ((w@@25 T@U) ) (!  (=> (= (type w@@25) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Integer w@@25) (UOrdering2 w@@25 fixed.java.io.Serializable)) (or (= fixed.java.lang.Integer w@@25) (= fixed.java.io.Serializable w@@25))))
 :pattern ( (UOrdering2 fixed.java.lang.Integer w@@25) (UOrdering2 w@@25 fixed.java.io.Serializable))
)))
(assert (forall ((w@@26 T@U) ) (!  (=> (= (type w@@26) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Integer w@@26) (UOrdering2 w@@26 fixed.java.lang.Comparable)) (or (= fixed.java.lang.Integer w@@26) (= fixed.java.lang.Comparable w@@26))))
 :pattern ( (UOrdering2 fixed.java.lang.Integer w@@26) (UOrdering2 w@@26 fixed.java.lang.Comparable))
)))
(assert (forall ((w@@27 T@U) ) (!  (=> (and (= (type w@@27) javaTypeType) (UOrdering2 fixed.java.lang.Integer w@@27)) (or (or (or (= fixed.java.lang.Integer w@@27) (UOrdering2 fixed.java.lang.Object w@@27)) (UOrdering2 fixed.java.io.Serializable w@@27)) (UOrdering2 fixed.java.lang.Comparable w@@27)))
 :pattern ( (UOrdering2 fixed.java.lang.Integer w@@27))
)))
(assert (forall ((w@@28 T@U) ) (!  (=> (and (= (type w@@28) javaTypeType) (UOrdering2 w@@28 fixed.java.lang.Integer)) (= (oneStep fixed.java.lang.Object w@@28) fixed.java.lang.Integer))
 :pattern ( (UOrdering2 w@@28 fixed.java.lang.Integer))
)))
(assert (= (type fixed.java.lang.NullPointerException) javaTypeType))
(assert (not (= fixed.java.lang.NullPointerException fixed.java.lang.RuntimeException)))
(assert (UOrdering2 fixed.java.lang.NullPointerException fixed.java.lang.RuntimeException))
(assert (forall ((w@@29 T@U) ) (!  (=> (= (type w@@29) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.NullPointerException w@@29) (UOrdering2 w@@29 fixed.java.lang.RuntimeException)) (or (= fixed.java.lang.NullPointerException w@@29) (= fixed.java.lang.RuntimeException w@@29))))
 :pattern ( (UOrdering2 fixed.java.lang.NullPointerException w@@29) (UOrdering2 w@@29 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@30 T@U) ) (!  (=> (and (= (type w@@30) javaTypeType) (UOrdering2 fixed.java.lang.NullPointerException w@@30)) (or (= fixed.java.lang.NullPointerException w@@30) (UOrdering2 fixed.java.lang.RuntimeException w@@30)))
 :pattern ( (UOrdering2 fixed.java.lang.NullPointerException w@@30))
)))
(assert (forall ((w@@31 T@U) ) (!  (=> (and (= (type w@@31) javaTypeType) (UOrdering2 w@@31 fixed.java.lang.NullPointerException)) (= (oneStep fixed.java.lang.RuntimeException w@@31) fixed.java.lang.NullPointerException))
 :pattern ( (UOrdering2 w@@31 fixed.java.lang.NullPointerException))
)))
(assert (= (type fixed.java.lang.ClassCastException) javaTypeType))
(assert (not (= fixed.java.lang.ClassCastException fixed.java.lang.RuntimeException)))
(assert (UOrdering2 fixed.java.lang.ClassCastException fixed.java.lang.RuntimeException))
(assert (forall ((w@@32 T@U) ) (!  (=> (= (type w@@32) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.ClassCastException w@@32) (UOrdering2 w@@32 fixed.java.lang.RuntimeException)) (or (= fixed.java.lang.ClassCastException w@@32) (= fixed.java.lang.RuntimeException w@@32))))
 :pattern ( (UOrdering2 fixed.java.lang.ClassCastException w@@32) (UOrdering2 w@@32 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@33 T@U) ) (!  (=> (and (= (type w@@33) javaTypeType) (UOrdering2 fixed.java.lang.ClassCastException w@@33)) (or (= fixed.java.lang.ClassCastException w@@33) (UOrdering2 fixed.java.lang.RuntimeException w@@33)))
 :pattern ( (UOrdering2 fixed.java.lang.ClassCastException w@@33))
)))
(assert (forall ((w@@34 T@U) ) (!  (=> (and (= (type w@@34) javaTypeType) (UOrdering2 w@@34 fixed.java.lang.ClassCastException)) (= (oneStep fixed.java.lang.RuntimeException w@@34) fixed.java.lang.ClassCastException))
 :pattern ( (UOrdering2 w@@34 fixed.java.lang.ClassCastException))
)))
(assert (= (type fixed.sg.edu.nus.comp.tsunami.safe.Safe) javaTypeType))
(assert (not (= fixed.sg.edu.nus.comp.tsunami.safe.Safe fixed.java.lang.Object)))
(assert (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe fixed.java.lang.Object))
(assert (forall ((w@@35 T@U) ) (!  (=> (= (type w@@35) javaTypeType) (=> (and (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@35) (UOrdering2 w@@35 fixed.java.lang.Object)) (or (= fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@35) (= fixed.java.lang.Object w@@35))))
 :pattern ( (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@35) (UOrdering2 w@@35 fixed.java.lang.Object))
)))
(assert (forall ((w@@36 T@U) ) (!  (=> (and (= (type w@@36) javaTypeType) (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@36)) (or (= fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@36) (UOrdering2 fixed.java.lang.Object w@@36)))
 :pattern ( (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@36))
)))
(assert (forall ((w@@37 T@U) ) (!  (=> (and (= (type w@@37) javaTypeType) (UOrdering2 w@@37 fixed.sg.edu.nus.comp.tsunami.safe.Safe)) (= (oneStep fixed.java.lang.Object w@@37) fixed.sg.edu.nus.comp.tsunami.safe.Safe))
 :pattern ( (UOrdering2 w@@37 fixed.sg.edu.nus.comp.tsunami.safe.Safe))
)))
(assert (= (type fixed.Credential) javaTypeType))
(assert (not (= fixed.Credential fixed.java.lang.Object)))
(assert (UOrdering2 fixed.Credential fixed.java.lang.Object))
(assert (forall ((w@@38 T@U) ) (!  (=> (= (type w@@38) javaTypeType) (=> (and (UOrdering2 fixed.Credential w@@38) (UOrdering2 w@@38 fixed.java.lang.Object)) (or (= fixed.Credential w@@38) (= fixed.java.lang.Object w@@38))))
 :pattern ( (UOrdering2 fixed.Credential w@@38) (UOrdering2 w@@38 fixed.java.lang.Object))
)))
(assert (forall ((w@@39 T@U) ) (!  (=> (and (= (type w@@39) javaTypeType) (UOrdering2 fixed.Credential w@@39)) (or (= fixed.Credential w@@39) (UOrdering2 fixed.java.lang.Object w@@39)))
 :pattern ( (UOrdering2 fixed.Credential w@@39))
)))
(assert (forall ((w@@40 T@U) ) (!  (=> (and (= (type w@@40) javaTypeType) (UOrdering2 w@@40 fixed.Credential)) (= (oneStep fixed.java.lang.Object w@@40) fixed.Credential))
 :pattern ( (UOrdering2 w@@40 fixed.Credential))
)))
(assert (= (type fixed.java.lang.CharSequence) javaTypeType))
(assert (forall ((w@@41 T@U) ) (!  (=> (and (= (type w@@41) javaTypeType) (UOrdering2 fixed.java.lang.CharSequence w@@41)) (= fixed.java.lang.CharSequence w@@41))
 :pattern ( (UOrdering2 fixed.java.lang.CharSequence w@@41))
)))
(assert (forall ((w@@42 T@U) ) (!  (=> (and (= (type w@@42) javaTypeType) (UOrdering2 w@@42 fixed.java.lang.Object)) (or (or (or (or (or (or (= fixed.java.lang.Object w@@42) (UOrdering2 w@@42 fixed.java.lang.String)) (UOrdering2 w@@42 fixed.java.lang.Throwable)) (UOrdering2 w@@42 fixed.java.lang.Boolean)) (UOrdering2 w@@42 fixed.java.lang.Integer)) (UOrdering2 w@@42 fixed.sg.edu.nus.comp.tsunami.safe.Safe)) (UOrdering2 w@@42 fixed.Credential)))
 :pattern ( (UOrdering2 w@@42 fixed.java.lang.Object))
)))
(assert (forall ((w@@43 T@U) ) (!  (=> (and (= (type w@@43) javaTypeType) (UOrdering2 w@@43 fixed.java.lang.String)) (= fixed.java.lang.String w@@43))
 :pattern ( (UOrdering2 w@@43 fixed.java.lang.String))
)))
(assert (forall ((w@@44 T@U) ) (!  (=> (and (= (type w@@44) javaTypeType) (UOrdering2 w@@44 fixed.java.io.Serializable)) (or (or (= fixed.java.io.Serializable w@@44) (UOrdering2 w@@44 fixed.java.lang.Throwable)) (UOrdering2 w@@44 fixed.java.lang.Integer)))
 :pattern ( (UOrdering2 w@@44 fixed.java.io.Serializable))
)))
(assert (forall ((w@@45 T@U) ) (!  (=> (and (= (type w@@45) javaTypeType) (UOrdering2 w@@45 fixed.java.lang.Throwable)) (or (= fixed.java.lang.Throwable w@@45) (UOrdering2 w@@45 fixed.java.lang.Exception)))
 :pattern ( (UOrdering2 w@@45 fixed.java.lang.Throwable))
)))
(assert (forall ((w@@46 T@U) ) (!  (=> (and (= (type w@@46) javaTypeType) (UOrdering2 w@@46 fixed.java.lang.Exception)) (or (= fixed.java.lang.Exception w@@46) (UOrdering2 w@@46 fixed.java.lang.RuntimeException)))
 :pattern ( (UOrdering2 w@@46 fixed.java.lang.Exception))
)))
(assert (forall ((w@@47 T@U) ) (!  (=> (and (= (type w@@47) javaTypeType) (UOrdering2 w@@47 fixed.java.lang.RuntimeException)) (or (or (or (= fixed.java.lang.RuntimeException w@@47) (UOrdering2 w@@47 fixed.java.lang.IndexOutOfBoundsException)) (UOrdering2 w@@47 fixed.java.lang.NullPointerException)) (UOrdering2 w@@47 fixed.java.lang.ClassCastException)))
 :pattern ( (UOrdering2 w@@47 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@48 T@U) ) (!  (=> (and (= (type w@@48) javaTypeType) (UOrdering2 w@@48 fixed.java.lang.IndexOutOfBoundsException)) (or (= fixed.java.lang.IndexOutOfBoundsException w@@48) (UOrdering2 w@@48 fixed.java.lang.ArrayIndexOutOfBoundsException)))
 :pattern ( (UOrdering2 w@@48 fixed.java.lang.IndexOutOfBoundsException))
)))
(assert (forall ((w@@49 T@U) ) (!  (=> (and (= (type w@@49) javaTypeType) (UOrdering2 w@@49 fixed.java.lang.ArrayIndexOutOfBoundsException)) (= fixed.java.lang.ArrayIndexOutOfBoundsException w@@49))
 :pattern ( (UOrdering2 w@@49 fixed.java.lang.ArrayIndexOutOfBoundsException))
)))
(assert (forall ((w@@50 T@U) ) (!  (=> (and (= (type w@@50) javaTypeType) (UOrdering2 w@@50 fixed.java.lang.Boolean)) (= fixed.java.lang.Boolean w@@50))
 :pattern ( (UOrdering2 w@@50 fixed.java.lang.Boolean))
)))
(assert (forall ((w@@51 T@U) ) (!  (=> (and (= (type w@@51) javaTypeType) (UOrdering2 w@@51 fixed.java.lang.Comparable)) (or (= fixed.java.lang.Comparable w@@51) (UOrdering2 w@@51 fixed.java.lang.Integer)))
 :pattern ( (UOrdering2 w@@51 fixed.java.lang.Comparable))
)))
(assert (forall ((w@@52 T@U) ) (!  (=> (and (= (type w@@52) javaTypeType) (UOrdering2 w@@52 fixed.java.lang.Integer)) (= fixed.java.lang.Integer w@@52))
 :pattern ( (UOrdering2 w@@52 fixed.java.lang.Integer))
)))
(assert (forall ((w@@53 T@U) ) (!  (=> (and (= (type w@@53) javaTypeType) (UOrdering2 w@@53 fixed.java.lang.NullPointerException)) (= fixed.java.lang.NullPointerException w@@53))
 :pattern ( (UOrdering2 w@@53 fixed.java.lang.NullPointerException))
)))
(assert (forall ((w@@54 T@U) ) (!  (=> (and (= (type w@@54) javaTypeType) (UOrdering2 w@@54 fixed.java.lang.ClassCastException)) (= fixed.java.lang.ClassCastException w@@54))
 :pattern ( (UOrdering2 w@@54 fixed.java.lang.ClassCastException))
)))
(assert (forall ((w@@55 T@U) ) (!  (=> (and (= (type w@@55) javaTypeType) (UOrdering2 w@@55 fixed.sg.edu.nus.comp.tsunami.safe.Safe)) (= fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@55))
 :pattern ( (UOrdering2 w@@55 fixed.sg.edu.nus.comp.tsunami.safe.Safe))
)))
(assert (forall ((w@@56 T@U) ) (!  (=> (and (= (type w@@56) javaTypeType) (UOrdering2 w@@56 fixed.Credential)) (= fixed.Credential w@@56))
 :pattern ( (UOrdering2 w@@56 fixed.Credential))
)))
(assert (forall ((w@@57 T@U) ) (!  (=> (and (= (type w@@57) javaTypeType) (UOrdering2 w@@57 fixed.java.lang.CharSequence)) (= fixed.java.lang.CharSequence w@@57))
 :pattern ( (UOrdering2 w@@57 fixed.java.lang.CharSequence))
)))
(assert  (and (and (and (and (and (forall ((arg0@@6 T@T) ) (! (= (Ctor (FieldType arg0@@6)) 4)
 :qid |ctor:FieldType|
)) (forall ((arg0@@7 T@T) ) (! (= (FieldTypeInv0 (FieldType arg0@@7)) arg0@@7)
 :qid |typeInv:FieldTypeInv0|
 :pattern ( (FieldType arg0@@7))
))) (= (type fixed.$type) (FieldType javaTypeType))) (= (type fixed.$alloc) (FieldType boolType))) (= (Ctor refType) 5)) (= (type fixed.$null) refType)))
(assert (distinct fixed.$type fixed.$alloc fixed.$null fixed.java.lang.Object fixed.java.lang.String fixed.java.io.Serializable fixed.java.lang.Throwable fixed.java.lang.Exception fixed.java.lang.RuntimeException fixed.java.lang.IndexOutOfBoundsException fixed.java.lang.ArrayIndexOutOfBoundsException fixed.java.lang.Boolean fixed.java.lang.Comparable fixed.java.lang.Integer fixed.java.lang.NullPointerException fixed.java.lang.ClassCastException fixed.sg.edu.nus.comp.tsunami.safe.Safe fixed.Credential fixed.java.lang.CharSequence)
)
(assert (forall ((x@@5 Int) ) (!  (and (=> (fixed.$intToBool x@@5) (ite (= x@@5 0) false true)) (=> (ite (= x@@5 0) false true) (fixed.$intToBool x@@5)))
 :qid |RSPROCCr.109:15|
 :skolemid |2199|
 :pattern ( (fixed.$intToBool x@@5))
)))
(assert (forall ((x@@6 T@U) ) (!  (=> (= (type x@@6) refType) (and (=> (fixed.$refToBool x@@6) (ite (= x@@6 fixed.$null) false true)) (=> (ite (= x@@6 fixed.$null) false true) (fixed.$refToBool x@@6))))
 :qid |RSPROCCr.113:15|
 :skolemid |2200|
 :pattern ( (fixed.$refToBool x@@6))
)))
(assert (forall ((x@@7 Bool) ) (! (= (fixed.$boolToInt x@@7) (ite  (and (=> x@@7 true) (=> true x@@7)) 1 0))
 :qid |RSPROCCr.117:15|
 :skolemid |2201|
 :pattern ( (fixed.$boolToInt x@@7))
)))
(assert (forall ((x@@8 Real) (y@@1 Real) ) (! (= (fixed.$cmpReal x@@8 y@@1) (ite (> x@@8 y@@1) 1 (ite (< x@@8 y@@1) (- 0 1) 0)))
 :qid |RSPROCCr.121:15|
 :skolemid |2202|
 :pattern ( (fixed.$cmpReal x@@8 y@@1))
)))
(assert (forall ((x@@9 Int) (y@@2 Int) ) (! (= (fixed.$cmpInt x@@9 y@@2) (ite (> x@@9 y@@2) 1 (ite (< x@@9 y@@2) (- 0 1) 0)))
 :qid |RSPROCCr.125:15|
 :skolemid |2203|
 :pattern ( (fixed.$cmpInt x@@9 y@@2))
)))
(assert (forall ((arg0@@8 Int) ) (! (= (type (fixed.$intToRef arg0@@8)) refType)
 :qid |funType:fixed.$intToRef|
 :pattern ( (fixed.$intToRef arg0@@8))
)))
(assert (forall ((index Int) ) (! (not (= (fixed.$intToRef index) fixed.$null))
 :qid |RSPROCCr.129:15|
 :skolemid |2204|
)))
(assert (forall ((i1 Int) (i2 Int) ) (!  (and (=> (= i1 i2) (= (fixed.$intToRef i1) (fixed.$intToRef i2))) (=> (= (fixed.$intToRef i1) (fixed.$intToRef i2)) (= i1 i2)))
 :qid |RSPROCCr.131:15|
 :skolemid |2205|
)))
(assert (forall ((x@@10 Int) ) (!  (and (=> (fixed.$intToBool x@@10) (ite (= x@@10 0) false true)) (=> (ite (= x@@10 0) false true) (fixed.$intToBool x@@10)))
 :qid |RSPROCCr.3844:15|
 :skolemid |2344|
 :pattern ( (fixed.$intToBool x@@10))
)))
(assert (forall ((x@@11 T@U) ) (!  (=> (= (type x@@11) refType) (and (=> (fixed.$refToBool x@@11) (ite (= x@@11 fixed.$null) false true)) (=> (ite (= x@@11 fixed.$null) false true) (fixed.$refToBool x@@11))))
 :qid |RSPROCCr.3848:15|
 :skolemid |2345|
 :pattern ( (fixed.$refToBool x@@11))
)))
(assert (forall ((x@@12 Bool) ) (! (= (fixed.$boolToInt x@@12) (ite  (and (=> x@@12 true) (=> true x@@12)) 1 0))
 :qid |RSPROCCr.3852:15|
 :skolemid |2346|
 :pattern ( (fixed.$boolToInt x@@12))
)))
(assert (forall ((x@@13 Real) (y@@3 Real) ) (! (= (fixed.$cmpReal x@@13 y@@3) (ite (> x@@13 y@@3) 1 (ite (< x@@13 y@@3) (- 0 1) 0)))
 :qid |RSPROCCr.3856:15|
 :skolemid |2347|
 :pattern ( (fixed.$cmpReal x@@13 y@@3))
)))
(assert (forall ((x@@14 Int) (y@@4 Int) ) (! (= (fixed.$cmpInt x@@14 y@@4) (ite (> x@@14 y@@4) 1 (ite (< x@@14 y@@4) (- 0 1) 0)))
 :qid |RSPROCCr.3860:15|
 :skolemid |2348|
 :pattern ( (fixed.$cmpInt x@@14 y@@4))
)))
(assert (forall ((index@@0 Int) ) (! (not (= (fixed.$intToRef index@@0) fixed.$null))
 :qid |RSPROCCr.3864:15|
 :skolemid |2349|
)))
(assert (forall ((i1@@0 Int) (i2@@0 Int) ) (!  (and (=> (= i1@@0 i2@@0) (= (fixed.$intToRef i1@@0) (fixed.$intToRef i2@@0))) (=> (= (fixed.$intToRef i1@@0) (fixed.$intToRef i2@@0)) (= i1@@0 i2@@0)))
 :qid |RSPROCCr.3866:15|
 :skolemid |2350|
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (forall ((arg0@@9 T@T) ) (! (= (Ctor (MapType0Type arg0@@9)) 6)
 :qid |ctor:MapType0Type|
)) (forall ((arg0@@10 T@T) ) (! (= (MapType0TypeInv0 (MapType0Type arg0@@10)) arg0@@10)
 :qid |typeInv:MapType0TypeInv0|
 :pattern ( (MapType0Type arg0@@10))
))) (forall ((arg0@@11 T@U) (arg1@@0 T@U) (arg2 T@U) ) (! (let (($GenericType__0 (FieldTypeInv0 (type arg2))))
(= (type (MapType0Select arg0@@11 arg1@@0 arg2)) $GenericType__0))
 :qid |funType:MapType0Select|
 :pattern ( (MapType0Select arg0@@11 arg1@@0 arg2))
))) (forall ((arg0@@12 T@U) (arg1@@1 T@U) (arg2@@0 T@U) (arg3 T@U) ) (! (let ((aVar0 (type arg1@@1)))
(= (type (MapType0Store arg0@@12 arg1@@1 arg2@@0 arg3)) (MapType0Type aVar0)))
 :qid |funType:MapType0Store|
 :pattern ( (MapType0Store arg0@@12 arg1@@1 arg2@@0 arg3))
))) (forall ((m T@U) (x0 T@U) (x1 T@U) (val T@U) ) (! (let (($GenericType__0@@0 (FieldTypeInv0 (type x1))))
 (=> (= (type val) $GenericType__0@@0) (= (MapType0Select (MapType0Store m x0 x1 val) x0 x1) val)))
 :qid |mapAx0:MapType0Select|
 :weight 0
))) (and (and (forall ((val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (x1@@0 T@U) (y0 T@U) (y1 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select (MapType0Store m@@0 x0@@0 x1@@0 val@@0) y0 y1) (MapType0Select m@@0 y0 y1)))
 :qid |mapAx1:MapType0Select:0|
 :weight 0
)) (forall ((val@@1 T@U) (m@@1 T@U) (x0@@1 T@U) (x1@@1 T@U) (y0@@0 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType0Select (MapType0Store m@@1 x0@@1 x1@@1 val@@1) y0@@0 y1@@0) (MapType0Select m@@1 y0@@0 y1@@0)))
 :qid |mapAx1:MapType0Select:1|
 :weight 0
))) (forall ((val@@2 T@U) (m@@2 T@U) (x0@@2 T@U) (x1@@2 T@U) (y0@@1 T@U) (y1@@1 T@U) ) (!  (or true (= (MapType0Select (MapType0Store m@@2 x0@@2 x1@@2 val@@2) y0@@1 y1@@1) (MapType0Select m@@2 y0@@1 y1@@1)))
 :qid |mapAx2:MapType0Select|
 :weight 0
)))) (= (type fixed.$heap) (MapType0Type refType))) (= (type fixed.$heap@6) (MapType0Type refType))) (= (type $in_parameter__0) refType)) (= (type $in_parameter__1) refType)) (= (type fixed.$heap@10) (MapType0Type refType))) (forall ((arg0@@13 T@T) (arg1@@2 T@T) ) (! (= (Ctor (MapType1Type arg0@@13 arg1@@2)) 7)
 :qid |ctor:MapType1Type|
))) (forall ((arg0@@14 T@T) (arg1@@3 T@T) ) (! (= (MapType1TypeInv0 (MapType1Type arg0@@14 arg1@@3)) arg0@@14)
 :qid |typeInv:MapType1TypeInv0|
 :pattern ( (MapType1Type arg0@@14 arg1@@3))
))) (forall ((arg0@@15 T@T) (arg1@@4 T@T) ) (! (= (MapType1TypeInv1 (MapType1Type arg0@@15 arg1@@4)) arg1@@4)
 :qid |typeInv:MapType1TypeInv1|
 :pattern ( (MapType1Type arg0@@15 arg1@@4))
))) (forall ((arg0@@16 T@U) (arg1@@5 T@U) ) (! (let ((aVar1 (MapType1TypeInv1 (type arg0@@16))))
(= (type (MapType1Select arg0@@16 arg1@@5)) aVar1))
 :qid |funType:MapType1Select|
 :pattern ( (MapType1Select arg0@@16 arg1@@5))
))) (forall ((arg0@@17 T@U) (arg1@@6 T@U) (arg2@@1 T@U) ) (! (let ((aVar1@@0 (type arg2@@1)))
(let ((aVar0@@0 (type arg1@@6)))
(= (type (MapType1Store arg0@@17 arg1@@6 arg2@@1)) (MapType1Type aVar0@@0 aVar1@@0))))
 :qid |funType:MapType1Store|
 :pattern ( (MapType1Store arg0@@17 arg1@@6 arg2@@1))
))) (forall ((m@@3 T@U) (x0@@3 T@U) (val@@3 T@U) ) (! (let ((aVar1@@1 (MapType1TypeInv1 (type m@@3))))
 (=> (= (type val@@3) aVar1@@1) (= (MapType1Select (MapType1Store m@@3 x0@@3 val@@3) x0@@3) val@@3)))
 :qid |mapAx0:MapType1Select|
 :weight 0
))) (and (forall ((val@@4 T@U) (m@@4 T@U) (x0@@4 T@U) (y0@@2 T@U) ) (!  (or (= x0@@4 y0@@2) (= (MapType1Select (MapType1Store m@@4 x0@@4 val@@4) y0@@2) (MapType1Select m@@4 y0@@2)))
 :qid |mapAx1:MapType1Select:0|
 :weight 0
)) (forall ((val@@5 T@U) (m@@5 T@U) (x0@@5 T@U) (y0@@3 T@U) ) (!  (or true (= (MapType1Select (MapType1Store m@@5 x0@@5 val@@5) y0@@3) (MapType1Select m@@5 y0@@3)))
 :qid |mapAx2:MapType1Select|
 :weight 0
)))) (= (type fixed.$arrSizeHeap) (MapType1Type refType intType))) (= (type fixed.$stringSizeHeap) (MapType1Type refType intType))) (= (type inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2) refType)) (= (type fixed.$heap@9) (MapType0Type refType))) (= (type fixed.$heap@8) (MapType0Type refType))) (= (type call3formal@$obj@0) refType)) (= (type fixed.$intArrHeap) (MapType1Type refType (MapType1Type intType intType)))) (= (type fixed.char$lp$$rp$$java.lang.String$chars259) (FieldType refType))) (= (type inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2) refType)) (= (type fixed.$heap@7) (MapType0Type refType))) (= (type call3formal@$obj@0@@0) refType)) (= (type fixed.$heap@14) (MapType0Type refType))) (= (type inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2) refType)) (= (type fixed.$heap@13) (MapType0Type refType))) (= (type fixed.$heap@12) (MapType0Type refType))) (= (type call3formal@$obj@0@@1) refType)) (= (type inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2) refType)) (= (type fixed.$heap@11) (MapType0Type refType))) (= (type call3formal@$obj@0@@2) refType)) (= (type inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2) refType)) (= (type fixed.$heap@2) (MapType0Type refType))) (= (type fixed.$heap@1) (MapType0Type refType))) (= (type call3formal@$obj@0@@3) refType)) (= (type inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2) refType)) (= (type fixed.$heap@0) (MapType0Type refType))) (= (type call3formal@$obj@0@@4) refType)) (= (type inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2) refType)) (= (type fixed.$heap@5) (MapType0Type refType))) (= (type fixed.$heap@4) (MapType0Type refType))) (= (type call3formal@$obj@0@@5) refType)) (= (type inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2) refType)) (= (type fixed.$heap@3) (MapType0Type refType))) (= (type call3formal@$obj@0@@6) refType)))
(push 1)
(set-info :boogie-vc-id PROC_.Credential$stringEquals_original$java.lang.String_java.lang.String_EQ_unsafe__xx__fixed)
(assert (not
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block20_dummy_correct  (=> (! (and %lbl%+332587 true) :lblpos +332587) true)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block20_correct  (=> (! (and %lbl%+332580 true) :lblpos +332580) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$z0@1 (fixed.$bitAnd 1 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z1)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i5@1 (+ 0 1))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block20_dummy_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block19_correct  (=> (! (and %lbl%+332582 true) :lblpos +332582) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block20_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon23_Then_correct  (=> (! (and %lbl%+332581 true) :lblpos +332581) (=> (not (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block19_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon17_correct  (=> (! (and %lbl%+332579 true) :lblpos +332579) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block20_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon23_Else_correct  (=> (! (and %lbl%+332578 true) :lblpos +332578) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon17_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$2_correct  (=> (! (and %lbl%+332577 true) :lblpos +332577) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon23_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon23_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct  (=> (! (and %lbl%+332576 true) :lblpos +332576) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$2_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$block2_correct  (=> (! (and %lbl%+332575 true) :lblpos +332575) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon3_correct  (=> (! (and %lbl%+332574 true) :lblpos +332574) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2) (int_2_U 0)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$block2_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Then_correct  (=> (! (and %lbl%+332573 true) :lblpos +332573) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2))) (>= 0 0)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon3_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Else_correct  (=> (! (and %lbl%+332572 true) :lblpos +332572) (=> (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2))) (>= 0 0))) (=> (and (= fixed.$heap@5 (MapType0Store (MapType0Store fixed.$heap@4 call3formal@$obj@0@@5 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@5 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)) (= fixed.$objIndex@5 (+ fixed.$objIndex@4 1))) (=> (and (and (not (U_2_bool (MapType0Select fixed.$heap@4 call3formal@$obj@0@@5 fixed.$alloc))) (not (= call3formal@$obj@0@@5 fixed.$null))) (and (= call3formal@$obj@0@@5 (fixed.$intToRef fixed.$objIndex@4)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 0))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon0_correct  (=> (! (and %lbl%+332571 true) :lblpos +332571) (=> (and (forall ((T T@U) ) (!  (=> (= (type T) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@4 fixed.$null fixed.$type) T))
 :qid |RSPROCCr.7223:20|
 :skolemid |2432|
 :no-pattern (type T)
 :no-pattern (U_2_int T)
 :no-pattern (U_2_bool T)
)) (forall ((_r T@U) ) (!  (=> (= (type _r) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r)) 0))
 :qid |RSPROCCr.7224:20|
 :skolemid |2433|
 :no-pattern (type _r)
 :no-pattern (U_2_int _r)
 :no-pattern (U_2_bool _r)
))) (=> (and (and (forall ((_r@@0 T@U) ) (!  (=> (= (type _r@@0) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@0)) 0))
 :qid |RSPROCCr.7225:20|
 :skolemid |2434|
 :no-pattern (type _r@@0)
 :no-pattern (U_2_int _r@@0)
 :no-pattern (U_2_bool _r@@0)
)) (UOrdering2 (MapType0Select fixed.$heap@4 $in_parameter__1 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__1 fixed.$null)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2 (MapType0Select fixed.$heap@4 $in_parameter__1 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Else_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Entry_correct  (=> (! (and %lbl%+332570 true) :lblpos +332570) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon0_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$1_correct  (=> (! (and %lbl%+332569 true) :lblpos +332569) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct  (=> (! (and %lbl%+332568 true) :lblpos +332568) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$1_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$block2_correct  (=> (! (and %lbl%+332567 true) :lblpos +332567) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2) (=> (and (= fixed.$objIndex@4 fixed.$objIndex) (= fixed.$heap@4 fixed.$heap)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon3_correct  (=> (! (and %lbl%+332566 true) :lblpos +332566) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2) (int_2_U 0)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$block2_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Then_correct  (=> (! (and %lbl%+332565 true) :lblpos +332565) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2))) (>= 0 0)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon3_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Else_correct  (=> (! (and %lbl%+332564 true) :lblpos +332564) (=> (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2))) (>= 0 0))) (=> (and (and (and (= fixed.$heap@3 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@6 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@6 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)) (= fixed.$objIndex@3 (+ fixed.$objIndex 1))) (and (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@6 fixed.$alloc))) (not (= call3formal@$obj@0@@6 fixed.$null)))) (and (and (= call3formal@$obj@0@@6 (fixed.$intToRef fixed.$objIndex)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 0)) (and (= fixed.$objIndex@4 fixed.$objIndex@3) (= fixed.$heap@4 fixed.$heap@3)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon0_correct  (=> (! (and %lbl%+332563 true) :lblpos +332563) (=> (and (forall ((T@@0 T@U) ) (!  (=> (= (type T@@0) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@0))
 :qid |RSPROCCr.7161:20|
 :skolemid |2429|
 :no-pattern (type T@@0)
 :no-pattern (U_2_int T@@0)
 :no-pattern (U_2_bool T@@0)
)) (forall ((_r@@1 T@U) ) (!  (=> (= (type _r@@1) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@1)) 0))
 :qid |RSPROCCr.7162:20|
 :skolemid |2430|
 :no-pattern (type _r@@1)
 :no-pattern (U_2_int _r@@1)
 :no-pattern (U_2_bool _r@@1)
))) (=> (and (and (forall ((_r@@2 T@U) ) (!  (=> (= (type _r@@2) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@2)) 0))
 :qid |RSPROCCr.7163:20|
 :skolemid |2431|
 :no-pattern (type _r@@2)
 :no-pattern (U_2_int _r@@2)
 :no-pattern (U_2_bool _r@@2)
)) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__0 fixed.$null)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2 (MapType0Select fixed.$heap $in_parameter__0 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Else_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Entry_correct  (=> (! (and %lbl%+332562 true) :lblpos +332562) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon0_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_correct  (=> (! (and %lbl%+332561 true) :lblpos +332561) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon22_Else_correct  (=> (! (and %lbl%+332560 true) :lblpos +332560) (=> (> inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 0) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block20_dummy_correct  (=> (! (and %lbl%+332556 true) :lblpos +332556) true)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block20_correct  (=> (! (and %lbl%+332533 true) :lblpos +332533) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_z0@2 (fixed.$bitAnd 1 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$z1)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_i5@2 (+ 0 1))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block20_dummy_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block19_correct  (=> (! (and %lbl%+332535 true) :lblpos +332535) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block20_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon23_Then_correct  (=> (! (and %lbl%+332536 true) :lblpos +332536) (=> (not (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block19_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon17_correct  (=> (! (and %lbl%+332534 true) :lblpos +332534) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block20_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon23_Else_correct  (=> (! (and %lbl%+332555 true) :lblpos +332555) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon17_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14$2_correct  (=> (! (and %lbl%+332553 true) :lblpos +332553) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon23_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon23_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct  (=> (! (and %lbl%+332552 true) :lblpos +332552) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14$2_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$block2_correct  (=> (! (and %lbl%+332551 true) :lblpos +332551) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon3_correct  (=> (! (and %lbl%+332550 true) :lblpos +332550) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2) (int_2_U 0)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$block2_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Then_correct  (=> (! (and %lbl%+332549 true) :lblpos +332549) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2))) (>= 0 0)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon3_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Else_correct  (=> (! (and %lbl%+332548 true) :lblpos +332548) (=> (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2))) (>= 0 0))) (=> (and (= fixed.$heap@2 (MapType0Store (MapType0Store fixed.$heap@1 call3formal@$obj@0@@3 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@3 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)) (= fixed.$objIndex@2 (+ fixed.$objIndex@1 1))) (=> (and (and (not (U_2_bool (MapType0Select fixed.$heap@1 call3formal@$obj@0@@3 fixed.$alloc))) (not (= call3formal@$obj@0@@3 fixed.$null))) (and (= call3formal@$obj@0@@3 (fixed.$intToRef fixed.$objIndex@1)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 0))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon0_correct  (=> (! (and %lbl%+332547 true) :lblpos +332547) (=> (and (forall ((T@@1 T@U) ) (!  (=> (= (type T@@1) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@1 fixed.$null fixed.$type) T@@1))
 :qid |RSPROCCr.7057:20|
 :skolemid |2426|
 :no-pattern (type T@@1)
 :no-pattern (U_2_int T@@1)
 :no-pattern (U_2_bool T@@1)
)) (forall ((_r@@3 T@U) ) (!  (=> (= (type _r@@3) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@3)) 0))
 :qid |RSPROCCr.7058:20|
 :skolemid |2427|
 :no-pattern (type _r@@3)
 :no-pattern (U_2_int _r@@3)
 :no-pattern (U_2_bool _r@@3)
))) (=> (and (and (forall ((_r@@4 T@U) ) (!  (=> (= (type _r@@4) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@4)) 0))
 :qid |RSPROCCr.7059:20|
 :skolemid |2428|
 :no-pattern (type _r@@4)
 :no-pattern (U_2_int _r@@4)
 :no-pattern (U_2_bool _r@@4)
)) (UOrdering2 (MapType0Select fixed.$heap@1 $in_parameter__1 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__1 fixed.$null)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2 (MapType0Select fixed.$heap@1 $in_parameter__1 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Else_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Entry_correct  (=> (! (and %lbl%+332546 true) :lblpos +332546) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon0_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14$1_correct  (=> (! (and %lbl%+332545 true) :lblpos +332545) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct  (=> (! (and %lbl%+332544 true) :lblpos +332544) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14$1_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$block2_correct  (=> (! (and %lbl%+332543 true) :lblpos +332543) (=> (= fixed.$objIndex@1 fixed.$objIndex) (=> (and (= fixed.$heap@1 fixed.$heap) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon3_correct  (=> (! (and %lbl%+332542 true) :lblpos +332542) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2) (int_2_U 0)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$block2_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Then_correct  (=> (! (and %lbl%+332541 true) :lblpos +332541) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2))) (>= 0 0)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon3_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Else_correct  (=> (! (and %lbl%+332540 true) :lblpos +332540) (=> (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2))) (>= 0 0))) (=> (and (and (and (= fixed.$heap@0 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@4 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@4 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)) (= fixed.$objIndex@0 (+ fixed.$objIndex 1))) (and (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@4 fixed.$alloc))) (not (= call3formal@$obj@0@@4 fixed.$null)))) (and (and (= call3formal@$obj@0@@4 (fixed.$intToRef fixed.$objIndex)) (= fixed.$objIndex@1 fixed.$objIndex@0)) (and (= fixed.$heap@1 fixed.$heap@0) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 0)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon0_correct  (=> (! (and %lbl%+332539 true) :lblpos +332539) (=> (and (forall ((T@@2 T@U) ) (!  (=> (= (type T@@2) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@2))
 :qid |RSPROCCr.6995:20|
 :skolemid |2423|
 :no-pattern (type T@@2)
 :no-pattern (U_2_int T@@2)
 :no-pattern (U_2_bool T@@2)
)) (forall ((_r@@5 T@U) ) (!  (=> (= (type _r@@5) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@5)) 0))
 :qid |RSPROCCr.6996:20|
 :skolemid |2424|
 :no-pattern (type _r@@5)
 :no-pattern (U_2_int _r@@5)
 :no-pattern (U_2_bool _r@@5)
))) (=> (and (and (forall ((_r@@6 T@U) ) (!  (=> (= (type _r@@6) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@6)) 0))
 :qid |RSPROCCr.6997:20|
 :skolemid |2425|
 :no-pattern (type _r@@6)
 :no-pattern (U_2_int _r@@6)
 :no-pattern (U_2_bool _r@@6)
)) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__0 fixed.$null)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2 (MapType0Select fixed.$heap $in_parameter__0 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Else_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Entry_correct  (=> (! (and %lbl%+332538 true) :lblpos +332538) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon0_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14_correct  (=> (! (and %lbl%+332537 true) :lblpos +332537) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon22_Else_correct  (=> (! (and %lbl%+332554 true) :lblpos +332554) (=> (> inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$i2@2 0) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_dummy_correct  (=> (! (and %lbl%+332681 true) :lblpos +332681) true)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$3_correct  (=> (! (and %lbl%+332676 true) :lblpos +332676) (=> (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$z1@1 (fixed.$bitAnd 1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$z0)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i7@1 (+ 0 1))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_dummy_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$Return_correct  (=> (! (and %lbl%+332675 true) :lblpos +332675) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$3_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block33_correct  (=> (! (and %lbl%+332672 true) :lblpos +332672) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$Return_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block32_correct  (=> (! (and %lbl%+332671 true) :lblpos +332671) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block33_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon6_correct  (=> (! (and %lbl%+332670 true) :lblpos +332670) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block32_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon8_Else_correct  (=> (! (and %lbl%+332669 true) :lblpos +332669) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b3@2 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon6_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon8_Then_correct  (=> (! (and %lbl%+332673 true) :lblpos +332673) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b3@2 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block32_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block31_correct  (=> (! (and %lbl%+332668 true) :lblpos +332668) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b3@2 (fixed.$cmpInt inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2)) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon8_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon8_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon3_correct  (=> (! (and %lbl%+332667 true) :lblpos +332667) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block31_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon7_Else_correct  (=> (! (and %lbl%+332666 true) :lblpos +332666) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b2@2 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon7_Then_correct  (=> (! (and %lbl%+332674 true) :lblpos +332674) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b2@2 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block31_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon0_correct  (=> (! (and %lbl%+332665 true) :lblpos +332665) (=> (and (and (forall ((T@@3 T@U) ) (!  (=> (= (type T@@3) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@14 fixed.$null fixed.$type) T@@3))
 :qid |RSPROCCr.7886:20|
 :skolemid |2453|
 :no-pattern (type T@@3)
 :no-pattern (U_2_int T@@3)
 :no-pattern (U_2_bool T@@3)
)) (forall ((_r@@7 T@U) ) (!  (=> (= (type _r@@7) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@7)) 0))
 :qid |RSPROCCr.7887:20|
 :skolemid |2454|
 :no-pattern (type _r@@7)
 :no-pattern (U_2_int _r@@7)
 :no-pattern (U_2_bool _r@@7)
))) (and (forall ((_r@@8 T@U) ) (!  (=> (= (type _r@@8) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@8)) 0))
 :qid |RSPROCCr.7888:20|
 :skolemid |2455|
 :no-pattern (type _r@@8)
 :no-pattern (U_2_int _r@@8)
 :no-pattern (U_2_bool _r@@8)
)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b2@2 (fixed.$cmpInt inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon7_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon7_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$Entry_correct  (=> (! (and %lbl%+332664 true) :lblpos +332664) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$2_correct  (=> (! (and %lbl%+332663 true) :lblpos +332663) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct  (=> (! (and %lbl%+332662 true) :lblpos +332662) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$2_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$block2_correct  (=> (! (and %lbl%+332661 true) :lblpos +332661) (=> (and (= fixed.$heap@14 fixed.$heap@12) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon3_correct  (=> (! (and %lbl%+332660 true) :lblpos +332660) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2) (int_2_U 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$block2_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Then_correct  (=> (! (and %lbl%+332659 true) :lblpos +332659) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2))) (>= 0 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Else_correct  (=> (! (and %lbl%+332658 true) :lblpos +332658) (=> (and (and (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2))) (>= 0 0))) (= fixed.$heap@13 (MapType0Store (MapType0Store fixed.$heap@12 call3formal@$obj@0@@1 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@1 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (and (= fixed.$objIndex@11 (+ fixed.$objIndex@10 1)) (not (U_2_bool (MapType0Select fixed.$heap@12 call3formal@$obj@0@@1 fixed.$alloc))))) (and (and (not (= call3formal@$obj@0@@1 fixed.$null)) (= call3formal@$obj@0@@1 (fixed.$intToRef fixed.$objIndex@10))) (and (= fixed.$heap@14 fixed.$heap@13) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon0_correct  (=> (! (and %lbl%+332657 true) :lblpos +332657) (=> (and (forall ((T@@4 T@U) ) (!  (=> (= (type T@@4) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@12 fixed.$null fixed.$type) T@@4))
 :qid |RSPROCCr.7824:20|
 :skolemid |2450|
 :no-pattern (type T@@4)
 :no-pattern (U_2_int T@@4)
 :no-pattern (U_2_bool T@@4)
)) (forall ((_r@@9 T@U) ) (!  (=> (= (type _r@@9) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@9)) 0))
 :qid |RSPROCCr.7825:20|
 :skolemid |2451|
 :no-pattern (type _r@@9)
 :no-pattern (U_2_int _r@@9)
 :no-pattern (U_2_bool _r@@9)
))) (=> (and (and (forall ((_r@@10 T@U) ) (!  (=> (= (type _r@@10) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@10)) 0))
 :qid |RSPROCCr.7826:20|
 :skolemid |2452|
 :no-pattern (type _r@@10)
 :no-pattern (U_2_int _r@@10)
 :no-pattern (U_2_bool _r@@10)
)) (UOrdering2 (MapType0Select fixed.$heap@12 $in_parameter__1 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__1 fixed.$null)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2 (MapType0Select fixed.$heap@12 $in_parameter__1 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Else_correct))))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Entry_correct  (=> (! (and %lbl%+332656 true) :lblpos +332656) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$1_correct  (=> (! (and %lbl%+332655 true) :lblpos +332655) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct  (=> (! (and %lbl%+332654 true) :lblpos +332654) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$1_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$block2_correct  (=> (! (and %lbl%+332653 true) :lblpos +332653) (=> (= fixed.$heap@12 fixed.$heap) (=> (and (= fixed.$objIndex@10 fixed.$objIndex) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon3_correct  (=> (! (and %lbl%+332652 true) :lblpos +332652) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2) (int_2_U 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$block2_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Then_correct  (=> (! (and %lbl%+332651 true) :lblpos +332651) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2))) (>= 0 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Else_correct  (=> (! (and %lbl%+332650 true) :lblpos +332650) (=> (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2))) (>= 0 0))) (=> (and (and (and (= fixed.$heap@11 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@2 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@2 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)) (= fixed.$objIndex@9 (+ fixed.$objIndex 1))) (and (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@2 fixed.$alloc))) (not (= call3formal@$obj@0@@2 fixed.$null)))) (and (and (= call3formal@$obj@0@@2 (fixed.$intToRef fixed.$objIndex)) (= fixed.$heap@12 fixed.$heap@11)) (and (= fixed.$objIndex@10 fixed.$objIndex@9) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon0_correct  (=> (! (and %lbl%+332649 true) :lblpos +332649) (=> (and (forall ((T@@5 T@U) ) (!  (=> (= (type T@@5) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@5))
 :qid |RSPROCCr.7760:20|
 :skolemid |2447|
 :no-pattern (type T@@5)
 :no-pattern (U_2_int T@@5)
 :no-pattern (U_2_bool T@@5)
)) (forall ((_r@@11 T@U) ) (!  (=> (= (type _r@@11) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@11)) 0))
 :qid |RSPROCCr.7761:20|
 :skolemid |2448|
 :no-pattern (type _r@@11)
 :no-pattern (U_2_int _r@@11)
 :no-pattern (U_2_bool _r@@11)
))) (=> (and (and (forall ((_r@@12 T@U) ) (!  (=> (= (type _r@@12) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@12)) 0))
 :qid |RSPROCCr.7762:20|
 :skolemid |2449|
 :no-pattern (type _r@@12)
 :no-pattern (U_2_int _r@@12)
 :no-pattern (U_2_bool _r@@12)
)) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__0 fixed.$null)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2 (MapType0Select fixed.$heap $in_parameter__0 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Else_correct))))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Entry_correct  (=> (! (and %lbl%+332648 true) :lblpos +332648) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_correct  (=> (! (and %lbl%+332647 true) :lblpos +332647) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Else_correct  (=> (! (and %lbl%+332646 true) :lblpos +332646) (=> (> inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14_dummy_correct  (=> (! (and %lbl%+332642 true) :lblpos +332642) true)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$3_correct  (=> (! (and %lbl%+332640 true) :lblpos +332640) (=> (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_z1@2 (fixed.$bitAnd 1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$z0)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_i7@2 (+ 0 1))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14_dummy_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$Return_correct  (=> (! (and %lbl%+332639 true) :lblpos +332639) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$3_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block33_correct  (=> (! (and %lbl%+332636 true) :lblpos +332636) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$Return_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block32_correct  (=> (! (and %lbl%+332635 true) :lblpos +332635) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block33_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon6_correct  (=> (! (and %lbl%+332634 true) :lblpos +332634) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block32_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon8_Else_correct  (=> (! (and %lbl%+332633 true) :lblpos +332633) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b3@2 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon6_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon8_Then_correct  (=> (! (and %lbl%+332637 true) :lblpos +332637) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b3@2 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block32_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block31_correct  (=> (! (and %lbl%+332632 true) :lblpos +332632) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b3@2 (fixed.$cmpInt inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2)) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon8_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon8_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon3_correct  (=> (! (and %lbl%+332631 true) :lblpos +332631) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block31_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon7_Else_correct  (=> (! (and %lbl%+332630 true) :lblpos +332630) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b2@2 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon7_Then_correct  (=> (! (and %lbl%+332638 true) :lblpos +332638) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b2@2 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block31_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon0_correct  (=> (! (and %lbl%+332629 true) :lblpos +332629) (=> (and (and (forall ((T@@6 T@U) ) (!  (=> (= (type T@@6) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@10 fixed.$null fixed.$type) T@@6))
 :qid |RSPROCCr.7633:20|
 :skolemid |2444|
 :no-pattern (type T@@6)
 :no-pattern (U_2_int T@@6)
 :no-pattern (U_2_bool T@@6)
)) (forall ((_r@@13 T@U) ) (!  (=> (= (type _r@@13) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@13)) 0))
 :qid |RSPROCCr.7634:20|
 :skolemid |2445|
 :no-pattern (type _r@@13)
 :no-pattern (U_2_int _r@@13)
 :no-pattern (U_2_bool _r@@13)
))) (and (forall ((_r@@14 T@U) ) (!  (=> (= (type _r@@14) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@14)) 0))
 :qid |RSPROCCr.7635:20|
 :skolemid |2446|
 :no-pattern (type _r@@14)
 :no-pattern (U_2_int _r@@14)
 :no-pattern (U_2_bool _r@@14)
)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b2@2 (fixed.$cmpInt inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon7_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon7_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$Entry_correct  (=> (! (and %lbl%+332628 true) :lblpos +332628) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$2_correct  (=> (! (and %lbl%+332627 true) :lblpos +332627) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct  (=> (! (and %lbl%+332626 true) :lblpos +332626) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$2_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$block2_correct  (=> (! (and %lbl%+332625 true) :lblpos +332625) (=> (and (= fixed.$heap@10 fixed.$heap@8) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon3_correct  (=> (! (and %lbl%+332624 true) :lblpos +332624) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2) (int_2_U 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$block2_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Then_correct  (=> (! (and %lbl%+332623 true) :lblpos +332623) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2))) (>= 0 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Else_correct  (=> (! (and %lbl%+332622 true) :lblpos +332622) (=> (and (and (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2))) (>= 0 0))) (= fixed.$heap@9 (MapType0Store (MapType0Store fixed.$heap@8 call3formal@$obj@0 fixed.$alloc (bool_2_U true)) call3formal@$obj@0 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (and (= fixed.$objIndex@8 (+ fixed.$objIndex@7 1)) (not (U_2_bool (MapType0Select fixed.$heap@8 call3formal@$obj@0 fixed.$alloc))))) (and (and (not (= call3formal@$obj@0 fixed.$null)) (= call3formal@$obj@0 (fixed.$intToRef fixed.$objIndex@7))) (and (= fixed.$heap@10 fixed.$heap@9) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon0_correct  (=> (! (and %lbl%+332621 true) :lblpos +332621) (=> (and (forall ((T@@7 T@U) ) (!  (=> (= (type T@@7) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@8 fixed.$null fixed.$type) T@@7))
 :qid |RSPROCCr.7571:20|
 :skolemid |2441|
 :no-pattern (type T@@7)
 :no-pattern (U_2_int T@@7)
 :no-pattern (U_2_bool T@@7)
)) (forall ((_r@@15 T@U) ) (!  (=> (= (type _r@@15) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@15)) 0))
 :qid |RSPROCCr.7572:20|
 :skolemid |2442|
 :no-pattern (type _r@@15)
 :no-pattern (U_2_int _r@@15)
 :no-pattern (U_2_bool _r@@15)
))) (=> (and (and (forall ((_r@@16 T@U) ) (!  (=> (= (type _r@@16) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@16)) 0))
 :qid |RSPROCCr.7573:20|
 :skolemid |2443|
 :no-pattern (type _r@@16)
 :no-pattern (U_2_int _r@@16)
 :no-pattern (U_2_bool _r@@16)
)) (UOrdering2 (MapType0Select fixed.$heap@8 $in_parameter__1 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__1 fixed.$null)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2 (MapType0Select fixed.$heap@8 $in_parameter__1 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Else_correct))))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Entry_correct  (=> (! (and %lbl%+332620 true) :lblpos +332620) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$1_correct  (=> (! (and %lbl%+332619 true) :lblpos +332619) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct  (=> (! (and %lbl%+332618 true) :lblpos +332618) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$1_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$block2_correct  (=> (! (and %lbl%+332617 true) :lblpos +332617) (=> (= fixed.$heap@8 fixed.$heap) (=> (and (= fixed.$objIndex@7 fixed.$objIndex) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon3_correct  (=> (! (and %lbl%+332616 true) :lblpos +332616) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2) (int_2_U 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$block2_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Then_correct  (=> (! (and %lbl%+332615 true) :lblpos +332615) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2))) (>= 0 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Else_correct  (=> (! (and %lbl%+332614 true) :lblpos +332614) (=> (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2))) (>= 0 0))) (=> (and (and (and (= fixed.$heap@7 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@0 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@0 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)) (= fixed.$objIndex@6 (+ fixed.$objIndex 1))) (and (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@0 fixed.$alloc))) (not (= call3formal@$obj@0@@0 fixed.$null)))) (and (and (= call3formal@$obj@0@@0 (fixed.$intToRef fixed.$objIndex)) (= fixed.$heap@8 fixed.$heap@7)) (and (= fixed.$objIndex@7 fixed.$objIndex@6) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon0_correct  (=> (! (and %lbl%+332613 true) :lblpos +332613) (=> (and (forall ((T@@8 T@U) ) (!  (=> (= (type T@@8) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@8))
 :qid |RSPROCCr.7507:20|
 :skolemid |2438|
 :no-pattern (type T@@8)
 :no-pattern (U_2_int T@@8)
 :no-pattern (U_2_bool T@@8)
)) (forall ((_r@@17 T@U) ) (!  (=> (= (type _r@@17) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@17)) 0))
 :qid |RSPROCCr.7508:20|
 :skolemid |2439|
 :no-pattern (type _r@@17)
 :no-pattern (U_2_int _r@@17)
 :no-pattern (U_2_bool _r@@17)
))) (=> (and (and (forall ((_r@@18 T@U) ) (!  (=> (= (type _r@@18) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@18)) 0))
 :qid |RSPROCCr.7509:20|
 :skolemid |2440|
 :no-pattern (type _r@@18)
 :no-pattern (U_2_int _r@@18)
 :no-pattern (U_2_bool _r@@18)
)) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__0 fixed.$null)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2 (MapType0Select fixed.$heap $in_parameter__0 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Else_correct))))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Entry_correct  (=> (! (and %lbl%+332612 true) :lblpos +332612) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14_correct  (=> (! (and %lbl%+332611 true) :lblpos +332611) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon19_Else_correct  (=> (! (and %lbl%+332641 true) :lblpos +332641) (=> (> inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_$i2@2 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14_correct))))
(let ((GeneratedUnifiedExit_correct  (=> (! (and %lbl%+339788 true) :lblpos +339788) (! (or %lbl%@345016  (and (and (and AA_TEMP383@2 AA_TEMP382@2) AA_TEMP381@2) AA_TEMP380@2)) :lblneg @345016))))
(let ((AA_INSTR_EQ_BODY$2_correct  (=> (! (and %lbl%+332684 true) :lblpos +332684) (=> (and (and (and (and (and (=> AA_TEMP380@1 (or AA_TEMP380@0 (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1))) (=> (or AA_TEMP380@0 (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1)) AA_TEMP380@1)) (and (=> AA_TEMP381@1 (or AA_TEMP381@0 (= fixed.$null fixed.$null))) (=> (or AA_TEMP381@0 (= fixed.$null fixed.$null)) AA_TEMP381@1))) (and (=> AA_TEMP382@1 (or AA_TEMP382@0 (= fixed.$objIndex fixed.$objIndex))) (=> (or AA_TEMP382@0 (= fixed.$objIndex fixed.$objIndex)) AA_TEMP382@1))) (and (=> AA_TEMP383@1 (or AA_TEMP383@0 (forall ((r T@U) (f T@U) ) (! (let ((_ty (FieldTypeInv0 (type f))))
 (=> (and (= (type r) refType) (= (type f) (FieldType _ty))) (or (= (MapType0Select fixed.$heap r f) (MapType0Select fixed.$heap@6 r f)) (not (U_2_bool (MapType0Select fixed.$heap r fixed.$alloc))))))
 :qid |RSPROCCr.8019:20|
 :skolemid |2456|
 :no-pattern (type r)
 :no-pattern (type f)
 :no-pattern (U_2_int r)
 :no-pattern (U_2_bool r)
 :no-pattern (U_2_int f)
 :no-pattern (U_2_bool f)
)))) (=> (or AA_TEMP383@0 (forall ((r@@0 T@U) (f@@0 T@U) ) (! (let ((_ty@@0 (FieldTypeInv0 (type f@@0))))
 (=> (and (= (type r@@0) refType) (= (type f@@0) (FieldType _ty@@0))) (or (= (MapType0Select fixed.$heap r@@0 f@@0) (MapType0Select fixed.$heap@6 r@@0 f@@0)) (not (U_2_bool (MapType0Select fixed.$heap r@@0 fixed.$alloc))))))
 :qid |RSPROCCr.8019:20|
 :skolemid |2456|
 :no-pattern (type r@@0)
 :no-pattern (type f@@0)
 :no-pattern (U_2_int r@@0)
 :no-pattern (U_2_bool r@@0)
 :no-pattern (U_2_int f@@0)
 :no-pattern (U_2_bool f@@0)
))) AA_TEMP383@1))) (and (and (and (=> AA_TEMP380@2 AA_TEMP380@1) (=> AA_TEMP380@1 AA_TEMP380@2)) (and (=> AA_TEMP381@2 AA_TEMP381@1) (=> AA_TEMP381@1 AA_TEMP381@2))) (and (and (=> AA_TEMP382@2 AA_TEMP382@1) (=> AA_TEMP382@1 AA_TEMP382@2)) (and (=> AA_TEMP383@2 AA_TEMP383@1) (=> AA_TEMP383@1 AA_TEMP383@2))))) GeneratedUnifiedExit_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Return_correct  (=> (! (and %lbl%+332683 true) :lblpos +332683) AA_INSTR_EQ_BODY$2_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block70_correct  (=> (! (and %lbl%+332595 true) :lblpos +332595) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Return_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block69_correct  (=> (! (and %lbl%+332678 true) :lblpos +332678) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 1) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block70_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Then_correct  (=> (! (and %lbl%+332677 true) :lblpos +332677) (=> (>= 0 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block69_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68_last_correct  (=> (! (and %lbl%+332682 true) :lblpos +332682) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__0))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68$1_correct  (=> (! (and %lbl%+332645 true) :lblpos +332645) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68_last_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$Return_correct  (=> (! (and %lbl%+332644 true) :lblpos +332644) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68$1_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon19_Then_correct  (=> (! (and %lbl%+332610 true) :lblpos +332610) (=> (>= 0 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_$i2@2) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$Return_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$block68_correct  (=> (! (and %lbl%+332609 true) :lblpos +332609) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_$i2@2 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__0))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon19_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon19_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$entry_correct  (=> (! (and %lbl%+332608 true) :lblpos +332608) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$block68_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$Entry_correct  (=> (! (and %lbl%+332607 true) :lblpos +332607) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68_correct  (=> (! (and %lbl%+332606 true) :lblpos +332606) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block67_correct  (=> (! (and %lbl%+332605 true) :lblpos +332605) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Then_correct  (=> (! (and %lbl%+332604 true) :lblpos +332604) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i0@1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i1@1) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block67_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block66_correct  (=> (! (and %lbl%+332603 true) :lblpos +332603) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block70_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Else_correct  (=> (! (and %lbl%+332602 true) :lblpos +332602) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i0@1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i1@1)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block66_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon9_correct  (=> (! (and %lbl%+332601 true) :lblpos +332601) (=> (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i0@1 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__0))) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i1@1 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__1)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon17_Else_correct  (=> (! (and %lbl%+332600 true) :lblpos +332600) (=> (not (= $in_parameter__1 fixed.$null)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon9_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon17_Then_correct  (=> (! (and %lbl%+332679 true) :lblpos +332679) (=> (= $in_parameter__1 fixed.$null) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block66_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon6_correct  (=> (! (and %lbl%+332599 true) :lblpos +332599) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon17_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon17_Else_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon16_Else_correct  (=> (! (and %lbl%+332598 true) :lblpos +332598) (=> (not (= $in_parameter__0 fixed.$null)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon6_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon16_Then_correct  (=> (! (and %lbl%+332680 true) :lblpos +332680) (=> (= $in_parameter__0 fixed.$null) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block66_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block65_correct  (=> (! (and %lbl%+332597 true) :lblpos +332597) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon16_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon16_Else_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon15_Then_correct  (=> (! (and %lbl%+332596 true) :lblpos +332596) (=> (not (= $in_parameter__0 $in_parameter__1)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block65_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon3_correct  (=> (! (and %lbl%+332594 true) :lblpos +332594) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 1) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block70_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon15_Else_correct  (=> (! (and %lbl%+332593 true) :lblpos +332593) (=> (= $in_parameter__0 $in_parameter__1) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon0_correct  (=> (! (and %lbl%+332592 true) :lblpos +332592) (=> (forall ((T@@9 T@U) ) (!  (=> (= (type T@@9) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@9))
 :qid |RSPROCCr.7369:20|
 :skolemid |2435|
 :no-pattern (type T@@9)
 :no-pattern (U_2_int T@@9)
 :no-pattern (U_2_bool T@@9)
)) (=> (and (and (forall ((_r@@19 T@U) ) (!  (=> (= (type _r@@19) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@19)) 0))
 :qid |RSPROCCr.7370:20|
 :skolemid |2436|
 :no-pattern (type _r@@19)
 :no-pattern (U_2_int _r@@19)
 :no-pattern (U_2_bool _r@@19)
)) (forall ((_r@@20 T@U) ) (!  (=> (= (type _r@@20) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@20)) 0))
 :qid |RSPROCCr.7371:20|
 :skolemid |2437|
 :no-pattern (type _r@@20)
 :no-pattern (U_2_int _r@@20)
 :no-pattern (U_2_bool _r@@20)
))) (and (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__1 fixed.$type) fixed.java.lang.String))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon15_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon15_Else_correct))))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Entry_correct  (=> (! (and %lbl%+332591 true) :lblpos +332591) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon0_correct)))
(let ((AA_INSTR_EQ_BODY$1_correct  (=> (! (and %lbl%+332590 true) :lblpos +332590) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Return_correct  (=> (! (and %lbl%+332589 true) :lblpos +332589) AA_INSTR_EQ_BODY$1_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block21_correct  (=> (! (and %lbl%+332517 true) :lblpos +332517) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Return_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block18_correct  (=> (! (and %lbl%+332584 true) :lblpos +332584) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 1) (= fixed.$heap@6 fixed.$heap)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block21_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon22_Then_correct  (=> (! (and %lbl%+332583 true) :lblpos +332583) (=> (>= 0 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block18_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17_last_correct  (=> (! (and %lbl%+332588 true) :lblpos +332588) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__0))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon22_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon22_Else_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17$1_correct  (=> (! (and %lbl%+332559 true) :lblpos +332559) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17_last_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$Return_correct  (=> (! (and %lbl%+332558 true) :lblpos +332558) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17$1_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon22_Then_correct  (=> (! (and %lbl%+332532 true) :lblpos +332532) (=> (>= 0 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$i2@2) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$Return_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block17_correct  (=> (! (and %lbl%+332531 true) :lblpos +332531) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$i2@2 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__0))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon22_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon22_Else_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$entry_correct  (=> (! (and %lbl%+332530 true) :lblpos +332530) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block17_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$Entry_correct  (=> (! (and %lbl%+332529 true) :lblpos +332529) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17_correct  (=> (! (and %lbl%+332528 true) :lblpos +332528) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$Entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block16_correct  (=> (! (and %lbl%+332527 true) :lblpos +332527) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon21_Then_correct  (=> (! (and %lbl%+332526 true) :lblpos +332526) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i0@1 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i1@1) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block16_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block15_correct  (=> (! (and %lbl%+332525 true) :lblpos +332525) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 0) (= fixed.$heap@6 fixed.$heap)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block21_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon21_Else_correct  (=> (! (and %lbl%+332524 true) :lblpos +332524) (=> (not (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i0@1 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i1@1)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block15_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon9_correct  (=> (! (and %lbl%+332523 true) :lblpos +332523) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i0@1 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__0))) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i1@1 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__1)))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon21_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon21_Else_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon20_Else_correct  (=> (! (and %lbl%+332522 true) :lblpos +332522) (=> (not (= $in_parameter__1 fixed.$null)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon9_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon20_Then_correct  (=> (! (and %lbl%+332585 true) :lblpos +332585) (=> (= $in_parameter__1 fixed.$null) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block15_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon6_correct  (=> (! (and %lbl%+332521 true) :lblpos +332521) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon20_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon20_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Else_correct  (=> (! (and %lbl%+332520 true) :lblpos +332520) (=> (not (= $in_parameter__0 fixed.$null)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon6_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Then_correct  (=> (! (and %lbl%+332586 true) :lblpos +332586) (=> (= $in_parameter__0 fixed.$null) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block15_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block14_correct  (=> (! (and %lbl%+332519 true) :lblpos +332519) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Then_correct  (=> (! (and %lbl%+332518 true) :lblpos +332518) (=> (not (= $in_parameter__0 $in_parameter__1)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block14_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon3_correct  (=> (! (and %lbl%+332516 true) :lblpos +332516) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 1) (= fixed.$heap@6 fixed.$heap)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block21_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Else_correct  (=> (! (and %lbl%+332515 true) :lblpos +332515) (=> (= $in_parameter__0 $in_parameter__1) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon3_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon0_correct  (=> (! (and %lbl%+332514 true) :lblpos +332514) (=> (forall ((T@@10 T@U) ) (!  (=> (= (type T@@10) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@10))
 :qid |RSPROCCr.6832:20|
 :skolemid |2420|
 :no-pattern (type T@@10)
 :no-pattern (U_2_int T@@10)
 :no-pattern (U_2_bool T@@10)
)) (=> (and (and (forall ((_r@@21 T@U) ) (!  (=> (= (type _r@@21) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@21)) 0))
 :qid |RSPROCCr.6833:20|
 :skolemid |2421|
 :no-pattern (type _r@@21)
 :no-pattern (U_2_int _r@@21)
 :no-pattern (U_2_bool _r@@21)
)) (forall ((_r@@22 T@U) ) (!  (=> (= (type _r@@22) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@22)) 0))
 :qid |RSPROCCr.6834:20|
 :skolemid |2422|
 :no-pattern (type _r@@22)
 :no-pattern (U_2_int _r@@22)
 :no-pattern (U_2_bool _r@@22)
))) (and (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__1 fixed.$type) fixed.java.lang.String))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Else_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Entry_correct  (=> (! (and %lbl%+332513 true) :lblpos +332513) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon0_correct)))
(let ((AA_INSTR_EQ_BODY_correct  (=> (! (and %lbl%+332512 true) :lblpos +332512) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Entry_correct)))
(let ((q@0_correct  (=> (! (and %lbl%+339786 true) :lblpos +339786) AA_INSTR_EQ_BODY_correct)))
(let ((PreconditionGeneratedEntry_correct  (=> (! (and %lbl%+339801 true) :lblpos +339801) q@0_correct)))
PreconditionGeneratedEntry_correct))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
