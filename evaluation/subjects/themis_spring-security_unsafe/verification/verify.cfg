#globals
globals: (unsafe.$heap, fixed.$heap);(unsafe.$intArrayType, fixed.$intArrayType);(unsafe.$charArrayType, fixed.$charArrayType);(unsafe.$boolArrayType, fixed.$boolArrayType);(unsafe.$byteArrayType, fixed.$byteArrayType);(unsafe.$longArrayType, fixed.$longArrayType);(unsafe.$arrSizeHeap, fixed.$arrSizeHeap);(unsafe.$stringSizeHeap, fixed.$stringSizeHeap);(unsafe.$boolArrHeap, fixed.$boolArrHeap);(unsafe.$refArrHeap, fixed.$refArrHeap);(unsafe.$realArrHeap, fixed.$realArrHeap);(unsafe.$intArrHeap, fixed.$intArrHeap);(unsafe.$objIndex, fixed.$objIndex);(unsafe.java.io.PrintStream$java.lang.System$out260, fixed.java.io.PrintStream$java.lang.System$out260);(unsafe.char$lp$$rp$$java.lang.StringBuilder$chars347, fixed.char$lp$$rp$$java.lang.StringBuilder$chars347);(unsafe.char$lp$$rp$$java.lang.String$chars348, fixed.char$lp$$rp$$java.lang.String$chars348);(unsafe.boolean$java.lang.Boolean$value0, fixed.boolean$java.lang.Boolean$value0);
#types
types: (unsafe.ref, fixed.ref);(unsafe.javaType, fixed.javaType);(unsafe.Field, fixed.Field);(unsafe.$heap_type, fixed.$heap_type);(unsafe.boolArrHeap_type, fixed.boolArrHeap_type);(unsafe.refArrHeap_type, fixed.refArrHeap_type);(unsafe.realArrHeap_type, fixed.realArrHeap_type);(unsafe.intArrHeap_type, fixed.intArrHeap_type);
#constants
constants: (unsafe.$type, fixed.$type);(unsafe.$alloc, fixed.$alloc);(unsafe.$null, fixed.$null);(unsafe.java.lang.Object, fixed.java.lang.Object);(unsafe.PasswordEncoderUtils, fixed.PasswordEncoderUtils);(unsafe.java.io.Serializable, fixed.java.io.Serializable);(unsafe.java.lang.Comparable, fixed.java.lang.Comparable);(unsafe.java.lang.CharSequence, fixed.java.lang.CharSequence);(unsafe.java.lang.Throwable, fixed.java.lang.Throwable);(unsafe.java.lang.Exception, fixed.java.lang.Exception);(unsafe.java.lang.RuntimeException, fixed.java.lang.RuntimeException);(unsafe.java.lang.NullPointerException, fixed.java.lang.NullPointerException);(unsafe.java.lang.IndexOutOfBoundsException, fixed.java.lang.IndexOutOfBoundsException);(unsafe.java.lang.ArrayIndexOutOfBoundsException, fixed.java.lang.ArrayIndexOutOfBoundsException);(unsafe.$StringConst0, fixed.$StringConst0);(unsafe.java.io.IOException, fixed.java.io.IOException);(unsafe.java.io.UnsupportedEncodingException, fixed.java.io.UnsupportedEncodingException);(unsafe.$StringConst1, fixed.$StringConst1);(unsafe.java.lang.AutoCloseable, fixed.java.lang.AutoCloseable);(unsafe.java.io.Closeable, fixed.java.io.Closeable);(unsafe.java.io.Flushable, fixed.java.io.Flushable);(unsafe.java.io.OutputStream, fixed.java.io.OutputStream);(unsafe.java.io.FilterOutputStream, fixed.java.io.FilterOutputStream);(unsafe.java.lang.Appendable, fixed.java.lang.Appendable);(unsafe.java.io.PrintStream, fixed.java.io.PrintStream);(unsafe.java.lang.StringBuilder, fixed.java.lang.StringBuilder);(unsafe.java.lang.String, fixed.java.lang.String);(unsafe.java.lang.Boolean, fixed.java.lang.Boolean);
#functions
function: (unsafe.$arrayType, fixed.$arrayType) / (t, t);(out_ret, out_ret);
function: (unsafe.$intToReal, fixed.$intToReal) / (x, x);(out_ret, out_ret);
function: (unsafe.$intToBool, fixed.$intToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$refToBool, fixed.$refToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$boolToInt, fixed.$boolToInt) / (x, x);(out_ret, out_ret);
function: (unsafe.$cmpBool, fixed.$cmpBool) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpRef, fixed.$cmpRef) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpReal, fixed.$cmpReal) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpInt, fixed.$cmpInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitOr, fixed.$bitOr) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitAnd, fixed.$bitAnd) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$xorInt, fixed.$xorInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shlInt, fixed.$shlInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$ushrInt, fixed.$ushrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shrInt, fixed.$shrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$mulInt, fixed.$mulInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$divInt, fixed.$divInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$modInt, fixed.$modInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$intToRef, fixed.$intToRef) / (id, id);(out_ret, out_ret);

#procedures
procedure: (unsafe.$new, fixed.$new) / (obj_type, obj_type);($obj, $obj);
procedure: (unsafe.java.lang.Object$java.lang.Object$clone$43, fixed.java.lang.Object$java.lang.Object$clone$43) / ($this, $this);($other, $other);
procedure: (unsafe.int$java.lang.String$compareTo$87, fixed.int$java.lang.String$compareTo$87) / ($this, $this);($other, $other);($return, $return);
procedure: (unsafe.PasswordEncoderUtils$$la$init$ra$$, fixed.PasswordEncoderUtils$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.Object$$la$init$ra$$, fixed.java.lang.Object$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.PasswordEncoderUtils$equals_unsafe$java.lang.String_java.lang.String, fixed.PasswordEncoderUtils$equals_unsafe$java.lang.String_java.lang.String) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.PasswordEncoderUtils$bytesUtf8$java.lang.String, fixed.PasswordEncoderUtils$bytesUtf8$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.io.PrintStream$println$java.lang.String, fixed.java.io.PrintStream$println$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$$la$init$ra$$, fixed.java.lang.StringBuilder$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$append$java.lang.String, fixed.java.lang.StringBuilder$append$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$toString$, fixed.java.lang.StringBuilder$toString$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$, fixed.java.lang.String$$la$init$ra$$char$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$, fixed.java.lang.String$$la$init$ra$$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.String$charAt$int, fixed.java.lang.String$charAt$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$getBytes$java.lang.String, fixed.java.lang.String$getBytes$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$getBytes$, fixed.java.lang.String$getBytes$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$format$java.lang.String_java.lang.Object$lp$$rp$, fixed.java.lang.String$format$java.lang.String_java.lang.Object$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$$la$init$ra$$boolean, fixed.java.lang.Boolean$$la$init$ra$$boolean) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$valueOf$boolean, fixed.java.lang.Boolean$valueOf$boolean) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$booleanValue$, fixed.java.lang.Boolean$booleanValue$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.PasswordEncoderUtils$equals_unsafe$java.lang.String_java.lang.String_loop_block7, fixed.PasswordEncoderUtils$equals_unsafe$java.lang.String_java.lang.String_loop_block6) / (in_$return, in_$return);(in_$exception, in_$exception);(in_$b4, in_$b4);(in_$b2, in_$b2);(in_b7, in_b7);(in_i8, in_i8);(in_r2, in_r2);(in_$b3, in_$b3);(in_$fakelocal_2, in_$fakelocal_2);(in_r3, in_r3);(in_$fakelocal_3, in_$fakelocal_3);(in_i0, in_i0);(out_$return, out_$return);(out_$exception, out_$exception);(out_$b4, out_$b4);(out_$b2, out_$b2);(out_b7, out_b7);(out_i8, out_i8);(out_$b3, out_$b3);(out_$fakelocal_2, out_$fakelocal_2);(out_$fakelocal_3, out_$fakelocal_3);
procedure: (unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25, fixed.java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24) / (in_$exception, in_$exception);(in_$fakelocal_2, in_$fakelocal_2);(in_$fakelocal_4, in_$fakelocal_4);(in_$c2, in_$c2);(in_i3, in_i3);(in_$fakelocal_3, in_$fakelocal_3);(in_r0, in_r0);(in_r1, in_r1);(in_$r3, in_$r3);(in_$i1, in_$i1);(out_$exception, out_$exception);(out_$fakelocal_2, out_$fakelocal_2);(out_$fakelocal_4, out_$fakelocal_4);(out_$c2, out_$c2);(out_i3, out_i3);(out_$fakelocal_3, out_$fakelocal_3);(out_$r3, out_$r3);(out_$i1, out_$i1);
procedure: (unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$_loop_block28, fixed.java.lang.String$$la$init$ra$$byte$lp$$rp$_loop_block27) / (in_$exception, in_$exception);(in_$r3, in_$r3);(in_$i1, in_$i1);(in_$c3, in_$c3);(in_i4, in_i4);(in_$fakelocal_2, in_$fakelocal_2);(in_$fakelocal_4, in_$fakelocal_4);(in_r1, in_r1);(in_r0, in_r0);(in_$b2, in_$b2);(in_$fakelocal_3, in_$fakelocal_3);(out_$exception, out_$exception);(out_$r3, out_$r3);(out_$i1, out_$i1);(out_$c3, out_$c3);(out_i4, out_i4);(out_$fakelocal_2, out_$fakelocal_2);(out_$fakelocal_4, out_$fakelocal_4);(out_$b2, out_$b2);(out_$fakelocal_3, out_$fakelocal_3);
procedure: (unsafe.java.lang.String$getBytes$_loop_block33, fixed.java.lang.String$getBytes$_loop_block32) / (in_$return, in_$return);(in_$exception, in_$exception);(in_$b4, in_$b4);(in_$i1, in_$i1);(in_i5, in_i5);(in_r1, in_r1);(in_r0, in_r0);(in_$fakelocal_4, in_$fakelocal_4);(in_$r4, in_$r4);(in_$c3, in_$c3);(in_$r3, in_$r3);(in_$fakelocal_2, in_$fakelocal_2);(in_$fakelocal_3, in_$fakelocal_3);(in_$c2, in_$c2);(out_$return, out_$return);(out_$exception, out_$exception);(out_$b4, out_$b4);(out_$i1, out_$i1);(out_i5, out_i5);(out_$fakelocal_4, out_$fakelocal_4);(out_$r4, out_$r4);(out_$c3, out_$c3);(out_$r3, out_$r3);(out_$fakelocal_2, out_$fakelocal_2);(out_$fakelocal_3, out_$fakelocal_3);(out_$c2, out_$c2);


