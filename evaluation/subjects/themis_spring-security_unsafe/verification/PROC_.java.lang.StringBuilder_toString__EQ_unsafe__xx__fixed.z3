(set-option :print-success false)
(set-info :smt-lib-version 2.0)
(set-option :produce-models true)
(set-option :AUTO_CONFIG false)
(set-option :pp.bv_literals false)
(set-option :MODEL.V2 true)
(set-option :smt.PHASE_SELECTION 0)
(set-option :smt.RESTART_STRATEGY 0)
(set-option :smt.RESTART_FACTOR |1.5|)
(set-option :smt.ARITH.RANDOM_INITIAL_VALUE true)
(set-option :smt.CASE_SPLIT 3)
(set-option :smt.DELAY_UNITS true)
(set-option :NNF.SK_HACK true)
(set-option :smt.MBQI false)
(set-option :smt.QI.EAGER_THRESHOLD 100)
(set-option :TYPE_CHECK true)
(set-option :smt.BV.REFLECT true)
(set-option :TIMEOUT 20000000)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun Ctor (T@T) Int)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun boolType () T@T)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun type (T@U) T@T)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun javaTypeType () T@T)
(declare-fun fixed.java.lang.Object () T@U)
(declare-fun fixed.PasswordEncoderUtils () T@U)
(declare-fun oneStep (T@U T@U) T@U)
(declare-fun fixed.java.io.Serializable () T@U)
(declare-fun fixed.java.lang.Comparable () T@U)
(declare-fun fixed.java.lang.CharSequence () T@U)
(declare-fun fixed.java.lang.Throwable () T@U)
(declare-fun fixed.java.lang.Exception () T@U)
(declare-fun fixed.java.lang.RuntimeException () T@U)
(declare-fun fixed.java.lang.NullPointerException () T@U)
(declare-fun fixed.sg.edu.nus.comp.tsunami.safe.Safe () T@U)
(declare-fun fixed.java.lang.ClassCastException () T@U)
(declare-fun fixed.java.lang.IndexOutOfBoundsException () T@U)
(declare-fun fixed.java.lang.ArrayIndexOutOfBoundsException () T@U)
(declare-fun refType () T@T)
(declare-fun fixed.$StringConst0 () T@U)
(declare-fun fixed.java.io.IOException () T@U)
(declare-fun fixed.java.io.UnsupportedEncodingException () T@U)
(declare-fun fixed.$StringConst1 () T@U)
(declare-fun fixed.java.lang.AutoCloseable () T@U)
(declare-fun fixed.java.io.Closeable () T@U)
(declare-fun fixed.java.io.Flushable () T@U)
(declare-fun fixed.java.io.OutputStream () T@U)
(declare-fun fixed.java.io.FilterOutputStream () T@U)
(declare-fun fixed.java.lang.Appendable () T@U)
(declare-fun fixed.java.io.PrintStream () T@U)
(declare-fun fixed.java.lang.StringBuilder () T@U)
(declare-fun fixed.java.lang.String () T@U)
(declare-fun fixed.java.lang.Boolean () T@U)
(declare-fun FieldType (T@T) T@T)
(declare-fun FieldTypeInv0 (T@T) T@T)
(declare-fun fixed.$type () T@U)
(declare-fun fixed.$alloc () T@U)
(declare-fun fixed.$null () T@U)
(declare-fun fixed.$intToBool (Int) Bool)
(declare-fun fixed.$refToBool (T@U) Bool)
(declare-fun fixed.$boolToInt (Bool) Int)
(declare-fun fixed.$cmpReal (Real Real) Int)
(declare-fun fixed.$cmpInt (Int Int) Int)
(declare-fun fixed.$intToRef (Int) T@U)
(declare-fun call3formal@$obj@0 () T@U)
(declare-fun call3formal@$obj@0@@0 () T@U)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 () T@U)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 () T@U)
(declare-fun MapType0Type (T@T) T@T)
(declare-fun MapType0TypeInv0 (T@T) T@T)
(declare-fun MapType0Select (T@U T@U T@U) T@U)
(declare-fun MapType0Store (T@U T@U T@U T@U) T@U)
(declare-fun fixed.$heap@21 () T@U)
(declare-fun fixed.$heap@10 () T@U)
(declare-fun fixed.$heap () T@U)
(declare-fun MapType1Type (T@T T@T) T@T)
(declare-fun MapType1TypeInv0 (T@T) T@T)
(declare-fun MapType1TypeInv1 (T@T) T@T)
(declare-fun MapType1Select (T@U T@U) T@U)
(declare-fun MapType1Store (T@U T@U T@U) T@U)
(declare-fun fixed.$arrSizeHeap@1 () T@U)
(declare-fun fixed.$arrSizeHeap@3 () T@U)
(declare-fun fixed.$intArrHeap@1 () T@U)
(declare-fun fixed.$intArrHeap () T@U)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1 () T@U)
(declare-fun fixed.$heap@12 () T@U)
(declare-fun fixed.$heap@11 () T@U)
(declare-fun call3formal@$obj@0@@1 () T@U)
(declare-fun fixed.$arrSizeHeap () T@U)
(declare-fun fixed.$heap@18 () T@U)
(declare-fun fixed.$heap@14 () T@U)
(declare-fun call3formal@$obj@0@@2 () T@U)
(declare-fun fixed.$arrSizeHeap@2 () T@U)
(declare-fun fixed.$heap@19 () T@U)
(declare-fun call3formal@$obj@0@@3 () T@U)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2 () T@U)
(declare-fun fixed.$heap@20 () T@U)
(declare-fun call3formal@$obj@0@@4 () T@U)
(declare-fun fixed.$intArrHeap@2 () T@U)
(declare-fun fixed.char$lp$$rp$$java.lang.String$chars348 () T@U)
(declare-fun fixed.$heap@15 () T@U)
(declare-fun call3formal@$obj@0@@5 () T@U)
(declare-fun fixed.$heap@16 () T@U)
(declare-fun call3formal@$obj@0@@6 () T@U)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$r3@2 () T@U)
(declare-fun fixed.$heap@17 () T@U)
(declare-fun call3formal@$obj@0@@7 () T@U)
(declare-fun fixed.$intArrHeap@3 () T@U)
(declare-fun fixed.$heap@13 () T@U)
(declare-fun call3formal@$obj@0@@8 () T@U)
(declare-fun fixed.$intArrayType () T@U)
(declare-fun fixed.$stringSizeHeap () T@U)
(declare-fun $this () T@U)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$$return@0 () T@U)
(declare-fun fixed.char$lp$$rp$$java.lang.StringBuilder$chars347 () T@U)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1 () T@U)
(declare-fun fixed.$heap@1 () T@U)
(declare-fun fixed.$heap@0 () T@U)
(declare-fun call3formal@$obj@0@@9 () T@U)
(declare-fun fixed.$heap@7 () T@U)
(declare-fun fixed.$heap@3 () T@U)
(declare-fun call3formal@$obj@0@@10 () T@U)
(declare-fun fixed.$arrSizeHeap@0 () T@U)
(declare-fun fixed.$heap@8 () T@U)
(declare-fun call3formal@$obj@0@@11 () T@U)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2 () T@U)
(declare-fun fixed.$heap@9 () T@U)
(declare-fun call3formal@$obj@0@@12 () T@U)
(declare-fun fixed.$intArrHeap@0 () T@U)
(declare-fun fixed.$heap@4 () T@U)
(declare-fun call3formal@$obj@0@@13 () T@U)
(declare-fun fixed.$heap@5 () T@U)
(declare-fun call3formal@$obj@0@@14 () T@U)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$r3@2 () T@U)
(declare-fun fixed.$heap@6 () T@U)
(declare-fun call3formal@$obj@0@@15 () T@U)
(declare-fun fixed.$intArrHeap@4 () T@U)
(declare-fun fixed.$heap@2 () T@U)
(declare-fun call3formal@$obj@0@@16 () T@U)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$$return@0 () T@U)
(declare-fun %lbl%+741534 () Bool)
(declare-fun %lbl%+741523 () Bool)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$c2@2 () Int)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_i3@2 () Int)
(declare-fun %lbl%+741524 () Bool)
(declare-fun %lbl%+741552 () Bool)
(declare-fun %lbl%+741548 () Bool)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$c2@2 () Int)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$i3@2 () Int)
(declare-fun %lbl%+741547 () Bool)
(declare-fun %lbl%+741586 () Bool)
(declare-fun %lbl%+741575 () Bool)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$c2@2 () Int)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_i3@2 () Int)
(declare-fun %lbl%+741576 () Bool)
(declare-fun %lbl%+741604 () Bool)
(declare-fun %lbl%+741600 () Bool)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$c2@2 () Int)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$i3@2 () Int)
(declare-fun %lbl%+741599 () Bool)
(declare-fun %lbl%+751626 () Bool)
(declare-fun %lbl%@757027 () Bool)
(declare-fun AA_TEMP235@2 () Bool)
(declare-fun AA_TEMP234@2 () Bool)
(declare-fun AA_TEMP233@2 () Bool)
(declare-fun AA_TEMP232@2 () Bool)
(declare-fun AA_TEMP231@2 () Bool)
(declare-fun AA_TEMP230@2 () Bool)
(declare-fun %lbl%+741610 () Bool)
(declare-fun AA_TEMP230@1 () Bool)
(declare-fun AA_TEMP230@0 () Bool)
(declare-fun AA_TEMP231@1 () Bool)
(declare-fun AA_TEMP231@0 () Bool)
(declare-fun AA_TEMP232@1 () Bool)
(declare-fun AA_TEMP232@0 () Bool)
(declare-fun fixed.$objIndex@18 () Int)
(declare-fun AA_TEMP233@1 () Bool)
(declare-fun AA_TEMP233@0 () Bool)
(declare-fun AA_TEMP234@1 () Bool)
(declare-fun AA_TEMP234@0 () Bool)
(declare-fun AA_TEMP235@1 () Bool)
(declare-fun AA_TEMP235@0 () Bool)
(declare-fun %lbl%+741609 () Bool)
(declare-fun %lbl%+741608 () Bool)
(declare-fun %lbl%+741607 () Bool)
(declare-fun %lbl%+741606 () Bool)
(declare-fun %lbl%+741603 () Bool)
(declare-fun fixed.$objIndex@11 () Int)
(declare-fun %lbl%+741602 () Bool)
(declare-fun %lbl%+741601 () Bool)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i1@2 () Int)
(declare-fun %lbl%+741598 () Bool)
(declare-fun fixed.$objIndex@17 () Int)
(declare-fun %lbl%+741597 () Bool)
(declare-fun %lbl%+741596 () Bool)
(declare-fun %lbl%+741595 () Bool)
(declare-fun fixed.$objIndex@16 () Int)
(declare-fun %lbl%+741594 () Bool)
(declare-fun %lbl%+741593 () Bool)
(declare-fun %lbl%+741592 () Bool)
(declare-fun %lbl%+741591 () Bool)
(declare-fun %lbl%+741590 () Bool)
(declare-fun fixed.$objIndex@15 () Int)
(declare-fun %lbl%+741605 () Bool)
(declare-fun %lbl%+741589 () Bool)
(declare-fun %lbl%+741588 () Bool)
(declare-fun %lbl%+741578 () Bool)
(declare-fun fixed.$objIndex@14 () Int)
(declare-fun %lbl%+741577 () Bool)
(declare-fun %lbl%+741579 () Bool)
(declare-fun %lbl%+741581 () Bool)
(declare-fun fixed.$objIndex@13 () Int)
(declare-fun %lbl%+741580 () Bool)
(declare-fun %lbl%+741582 () Bool)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$i1@2 () Int)
(declare-fun %lbl%+741584 () Bool)
(declare-fun %lbl%+741583 () Bool)
(declare-fun %lbl%+741585 () Bool)
(declare-fun %lbl%+741574 () Bool)
(declare-fun fixed.$objIndex@12 () Int)
(declare-fun %lbl%+741573 () Bool)
(declare-fun %lbl%+741572 () Bool)
(declare-fun %lbl%+741571 () Bool)
(declare-fun %lbl%+741570 () Bool)
(declare-fun %lbl%+741569 () Bool)
(declare-fun inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i0@2 () Int)
(declare-fun fixed.$objIndex@9 () Int)
(declare-fun %lbl%+741568 () Bool)
(declare-fun %lbl%+741567 () Bool)
(declare-fun fixed.$objIndex@10 () Int)
(declare-fun %lbl%+741566 () Bool)
(declare-fun %lbl%+741565 () Bool)
(declare-fun %lbl%+741564 () Bool)
(declare-fun %lbl%+741563 () Bool)
(declare-fun %lbl%+741562 () Bool)
(declare-fun %lbl%+741561 () Bool)
(declare-fun %lbl%+741560 () Bool)
(declare-fun fixed.$objIndex () Int)
(declare-fun %lbl%+741559 () Bool)
(declare-fun %lbl%+741558 () Bool)
(declare-fun %lbl%+741557 () Bool)
(declare-fun %lbl%+741556 () Bool)
(declare-fun %lbl%+741555 () Bool)
(declare-fun %lbl%+741554 () Bool)
(declare-fun %lbl%+741551 () Bool)
(declare-fun %lbl%+741550 () Bool)
(declare-fun %lbl%+741549 () Bool)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i1@2 () Int)
(declare-fun %lbl%+741546 () Bool)
(declare-fun fixed.$objIndex@2 () Int)
(declare-fun fixed.$objIndex@8 () Int)
(declare-fun %lbl%+741545 () Bool)
(declare-fun %lbl%+741544 () Bool)
(declare-fun %lbl%+741543 () Bool)
(declare-fun fixed.$objIndex@7 () Int)
(declare-fun %lbl%+741542 () Bool)
(declare-fun %lbl%+741541 () Bool)
(declare-fun %lbl%+741540 () Bool)
(declare-fun %lbl%+741539 () Bool)
(declare-fun %lbl%+741538 () Bool)
(declare-fun fixed.$objIndex@6 () Int)
(declare-fun %lbl%+741553 () Bool)
(declare-fun %lbl%+741537 () Bool)
(declare-fun %lbl%+741536 () Bool)
(declare-fun %lbl%+741526 () Bool)
(declare-fun fixed.$objIndex@5 () Int)
(declare-fun %lbl%+741525 () Bool)
(declare-fun %lbl%+741527 () Bool)
(declare-fun %lbl%+741529 () Bool)
(declare-fun fixed.$objIndex@4 () Int)
(declare-fun %lbl%+741528 () Bool)
(declare-fun %lbl%+741530 () Bool)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$i1@2 () Int)
(declare-fun %lbl%+741532 () Bool)
(declare-fun %lbl%+741531 () Bool)
(declare-fun %lbl%+741533 () Bool)
(declare-fun %lbl%+741522 () Bool)
(declare-fun fixed.$objIndex@3 () Int)
(declare-fun %lbl%+741521 () Bool)
(declare-fun %lbl%+741520 () Bool)
(declare-fun %lbl%+741519 () Bool)
(declare-fun %lbl%+741518 () Bool)
(declare-fun %lbl%+741517 () Bool)
(declare-fun inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i0@2 () Int)
(declare-fun fixed.$objIndex@0 () Int)
(declare-fun %lbl%+741516 () Bool)
(declare-fun %lbl%+741515 () Bool)
(declare-fun fixed.$objIndex@1 () Int)
(declare-fun %lbl%+741514 () Bool)
(declare-fun %lbl%+741513 () Bool)
(declare-fun %lbl%+741512 () Bool)
(declare-fun %lbl%+741511 () Bool)
(declare-fun %lbl%+741510 () Bool)
(declare-fun %lbl%+741509 () Bool)
(declare-fun %lbl%+741508 () Bool)
(declare-fun %lbl%+741507 () Bool)
(declare-fun %lbl%+741506 () Bool)
(declare-fun %lbl%+751624 () Bool)
(declare-fun %lbl%+751640 () Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (Ctor intType) 0) (= (Ctor realType) 1)) (= (Ctor boolType) 2)) (forall ((arg0 Int) ) (! (= (U_2_int (int_2_U arg0)) arg0)
 :qid |typeInv:U_2_int|
 :pattern ( (int_2_U arg0))
))) (forall ((x T@U) ) (!  (=> (= (type x) intType) (= (int_2_U (U_2_int x)) x))
 :qid |cast:U_2_int|
 :pattern ( (U_2_int x))
))) (forall ((arg0@@0 Int) ) (! (= (type (int_2_U arg0@@0)) intType)
 :qid |funType:int_2_U|
 :pattern ( (int_2_U arg0@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :qid |typeInv:U_2_real|
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@0 T@U) ) (!  (=> (= (type x@@0) realType) (= (real_2_U (U_2_real x@@0)) x@@0))
 :qid |cast:U_2_real|
 :pattern ( (U_2_real x@@0))
))) (forall ((arg0@@2 Real) ) (! (= (type (real_2_U arg0@@2)) realType)
 :qid |funType:real_2_U|
 :pattern ( (real_2_U arg0@@2))
))) (forall ((arg0@@3 Bool) ) (! (= (U_2_bool (bool_2_U arg0@@3)) arg0@@3)
 :qid |typeInv:U_2_bool|
 :pattern ( (bool_2_U arg0@@3))
))) (forall ((x@@1 T@U) ) (!  (=> (= (type x@@1) boolType) (= (bool_2_U (U_2_bool x@@1)) x@@1))
 :qid |cast:U_2_bool|
 :pattern ( (U_2_bool x@@1))
))) (forall ((arg0@@4 Bool) ) (! (= (type (bool_2_U arg0@@4)) boolType)
 :qid |funType:bool_2_U|
 :pattern ( (bool_2_U arg0@@4))
))))
(assert (forall ((x@@2 T@U) ) (! (UOrdering2 x@@2 x@@2)
 :qid |bg:subtype-refl|
 :no-pattern (U_2_int x@@2)
 :no-pattern (U_2_bool x@@2)
)))
(assert (forall ((x@@3 T@U) (y T@U) (z T@U) ) (! (let ((alpha (type x@@3)))
 (=> (and (and (= (type y) alpha) (= (type z) alpha)) (and (UOrdering2 x@@3 y) (UOrdering2 y z))) (UOrdering2 x@@3 z)))
 :qid |bg:subtype-trans|
 :pattern ( (UOrdering2 x@@3 y) (UOrdering2 y z))
)))
(assert (forall ((x@@4 T@U) (y@@0 T@U) ) (! (let ((alpha@@0 (type x@@4)))
 (=> (= (type y@@0) alpha@@0) (=> (and (UOrdering2 x@@4 y@@0) (UOrdering2 y@@0 x@@4)) (= x@@4 y@@0))))
 :qid |bg:subtype-antisymm|
 :pattern ( (UOrdering2 x@@4 y@@0) (UOrdering2 y@@0 x@@4))
)))
(assert  (and (= (Ctor javaTypeType) 3) (= (type fixed.java.lang.Object) javaTypeType)))
(assert (forall ((w T@U) ) (!  (=> (and (= (type w) javaTypeType) (UOrdering2 fixed.java.lang.Object w)) (= fixed.java.lang.Object w))
 :pattern ( (UOrdering2 fixed.java.lang.Object w))
)))
(assert (= (type fixed.PasswordEncoderUtils) javaTypeType))
(assert (not (= fixed.PasswordEncoderUtils fixed.java.lang.Object)))
(assert (UOrdering2 fixed.PasswordEncoderUtils fixed.java.lang.Object))
(assert (forall ((w@@0 T@U) ) (!  (=> (= (type w@@0) javaTypeType) (=> (and (UOrdering2 fixed.PasswordEncoderUtils w@@0) (UOrdering2 w@@0 fixed.java.lang.Object)) (or (= fixed.PasswordEncoderUtils w@@0) (= fixed.java.lang.Object w@@0))))
 :pattern ( (UOrdering2 fixed.PasswordEncoderUtils w@@0) (UOrdering2 w@@0 fixed.java.lang.Object))
)))
(assert (forall ((w@@1 T@U) ) (!  (=> (and (= (type w@@1) javaTypeType) (UOrdering2 fixed.PasswordEncoderUtils w@@1)) (or (= fixed.PasswordEncoderUtils w@@1) (UOrdering2 fixed.java.lang.Object w@@1)))
 :pattern ( (UOrdering2 fixed.PasswordEncoderUtils w@@1))
)))
(assert (forall ((arg0@@5 T@U) (arg1 T@U) ) (! (= (type (oneStep arg0@@5 arg1)) javaTypeType)
 :qid |funType:oneStep|
 :pattern ( (oneStep arg0@@5 arg1))
)))
(assert (forall ((w@@2 T@U) ) (!  (=> (and (= (type w@@2) javaTypeType) (UOrdering2 w@@2 fixed.PasswordEncoderUtils)) (= (oneStep fixed.java.lang.Object w@@2) fixed.PasswordEncoderUtils))
 :pattern ( (UOrdering2 w@@2 fixed.PasswordEncoderUtils))
)))
(assert (= (type fixed.java.io.Serializable) javaTypeType))
(assert (forall ((w@@3 T@U) ) (!  (=> (and (= (type w@@3) javaTypeType) (UOrdering2 fixed.java.io.Serializable w@@3)) (= fixed.java.io.Serializable w@@3))
 :pattern ( (UOrdering2 fixed.java.io.Serializable w@@3))
)))
(assert (= (type fixed.java.lang.Comparable) javaTypeType))
(assert (forall ((w@@4 T@U) ) (!  (=> (and (= (type w@@4) javaTypeType) (UOrdering2 fixed.java.lang.Comparable w@@4)) (= fixed.java.lang.Comparable w@@4))
 :pattern ( (UOrdering2 fixed.java.lang.Comparable w@@4))
)))
(assert (= (type fixed.java.lang.CharSequence) javaTypeType))
(assert (forall ((w@@5 T@U) ) (!  (=> (and (= (type w@@5) javaTypeType) (UOrdering2 fixed.java.lang.CharSequence w@@5)) (= fixed.java.lang.CharSequence w@@5))
 :pattern ( (UOrdering2 fixed.java.lang.CharSequence w@@5))
)))
(assert (= (type fixed.java.lang.Throwable) javaTypeType))
(assert (not (= fixed.java.lang.Throwable fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.Throwable fixed.java.lang.Object))
(assert (not (= fixed.java.lang.Throwable fixed.java.io.Serializable)))
(assert (UOrdering2 fixed.java.lang.Throwable fixed.java.io.Serializable))
(assert (forall ((w@@6 T@U) ) (!  (=> (= (type w@@6) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Throwable w@@6) (UOrdering2 w@@6 fixed.java.lang.Object)) (or (= fixed.java.lang.Throwable w@@6) (= fixed.java.lang.Object w@@6))))
 :pattern ( (UOrdering2 fixed.java.lang.Throwable w@@6) (UOrdering2 w@@6 fixed.java.lang.Object))
)))
(assert (forall ((w@@7 T@U) ) (!  (=> (= (type w@@7) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Throwable w@@7) (UOrdering2 w@@7 fixed.java.io.Serializable)) (or (= fixed.java.lang.Throwable w@@7) (= fixed.java.io.Serializable w@@7))))
 :pattern ( (UOrdering2 fixed.java.lang.Throwable w@@7) (UOrdering2 w@@7 fixed.java.io.Serializable))
)))
(assert (forall ((w@@8 T@U) ) (!  (=> (and (= (type w@@8) javaTypeType) (UOrdering2 fixed.java.lang.Throwable w@@8)) (or (or (= fixed.java.lang.Throwable w@@8) (UOrdering2 fixed.java.lang.Object w@@8)) (UOrdering2 fixed.java.io.Serializable w@@8)))
 :pattern ( (UOrdering2 fixed.java.lang.Throwable w@@8))
)))
(assert (forall ((w@@9 T@U) ) (!  (=> (and (= (type w@@9) javaTypeType) (UOrdering2 w@@9 fixed.java.lang.Throwable)) (= (oneStep fixed.java.lang.Object w@@9) fixed.java.lang.Throwable))
 :pattern ( (UOrdering2 w@@9 fixed.java.lang.Throwable))
)))
(assert (= (type fixed.java.lang.Exception) javaTypeType))
(assert (not (= fixed.java.lang.Exception fixed.java.lang.Throwable)))
(assert (UOrdering2 fixed.java.lang.Exception fixed.java.lang.Throwable))
(assert (forall ((w@@10 T@U) ) (!  (=> (= (type w@@10) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Exception w@@10) (UOrdering2 w@@10 fixed.java.lang.Throwable)) (or (= fixed.java.lang.Exception w@@10) (= fixed.java.lang.Throwable w@@10))))
 :pattern ( (UOrdering2 fixed.java.lang.Exception w@@10) (UOrdering2 w@@10 fixed.java.lang.Throwable))
)))
(assert (forall ((w@@11 T@U) ) (!  (=> (and (= (type w@@11) javaTypeType) (UOrdering2 fixed.java.lang.Exception w@@11)) (or (= fixed.java.lang.Exception w@@11) (UOrdering2 fixed.java.lang.Throwable w@@11)))
 :pattern ( (UOrdering2 fixed.java.lang.Exception w@@11))
)))
(assert (forall ((w@@12 T@U) ) (!  (=> (and (= (type w@@12) javaTypeType) (UOrdering2 w@@12 fixed.java.lang.Exception)) (= (oneStep fixed.java.lang.Throwable w@@12) fixed.java.lang.Exception))
 :pattern ( (UOrdering2 w@@12 fixed.java.lang.Exception))
)))
(assert (= (type fixed.java.lang.RuntimeException) javaTypeType))
(assert (not (= fixed.java.lang.RuntimeException fixed.java.lang.Exception)))
(assert (UOrdering2 fixed.java.lang.RuntimeException fixed.java.lang.Exception))
(assert (forall ((w@@13 T@U) ) (!  (=> (= (type w@@13) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.RuntimeException w@@13) (UOrdering2 w@@13 fixed.java.lang.Exception)) (or (= fixed.java.lang.RuntimeException w@@13) (= fixed.java.lang.Exception w@@13))))
 :pattern ( (UOrdering2 fixed.java.lang.RuntimeException w@@13) (UOrdering2 w@@13 fixed.java.lang.Exception))
)))
(assert (forall ((w@@14 T@U) ) (!  (=> (and (= (type w@@14) javaTypeType) (UOrdering2 fixed.java.lang.RuntimeException w@@14)) (or (= fixed.java.lang.RuntimeException w@@14) (UOrdering2 fixed.java.lang.Exception w@@14)))
 :pattern ( (UOrdering2 fixed.java.lang.RuntimeException w@@14))
)))
(assert (forall ((w@@15 T@U) ) (!  (=> (and (= (type w@@15) javaTypeType) (UOrdering2 w@@15 fixed.java.lang.RuntimeException)) (= (oneStep fixed.java.lang.Exception w@@15) fixed.java.lang.RuntimeException))
 :pattern ( (UOrdering2 w@@15 fixed.java.lang.RuntimeException))
)))
(assert (= (type fixed.java.lang.NullPointerException) javaTypeType))
(assert (not (= fixed.java.lang.NullPointerException fixed.java.lang.RuntimeException)))
(assert (UOrdering2 fixed.java.lang.NullPointerException fixed.java.lang.RuntimeException))
(assert (forall ((w@@16 T@U) ) (!  (=> (= (type w@@16) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.NullPointerException w@@16) (UOrdering2 w@@16 fixed.java.lang.RuntimeException)) (or (= fixed.java.lang.NullPointerException w@@16) (= fixed.java.lang.RuntimeException w@@16))))
 :pattern ( (UOrdering2 fixed.java.lang.NullPointerException w@@16) (UOrdering2 w@@16 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@17 T@U) ) (!  (=> (and (= (type w@@17) javaTypeType) (UOrdering2 fixed.java.lang.NullPointerException w@@17)) (or (= fixed.java.lang.NullPointerException w@@17) (UOrdering2 fixed.java.lang.RuntimeException w@@17)))
 :pattern ( (UOrdering2 fixed.java.lang.NullPointerException w@@17))
)))
(assert (forall ((w@@18 T@U) ) (!  (=> (and (= (type w@@18) javaTypeType) (UOrdering2 w@@18 fixed.java.lang.NullPointerException)) (= (oneStep fixed.java.lang.RuntimeException w@@18) fixed.java.lang.NullPointerException))
 :pattern ( (UOrdering2 w@@18 fixed.java.lang.NullPointerException))
)))
(assert (= (type fixed.sg.edu.nus.comp.tsunami.safe.Safe) javaTypeType))
(assert (not (= fixed.sg.edu.nus.comp.tsunami.safe.Safe fixed.java.lang.Object)))
(assert (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe fixed.java.lang.Object))
(assert (forall ((w@@19 T@U) ) (!  (=> (= (type w@@19) javaTypeType) (=> (and (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@19) (UOrdering2 w@@19 fixed.java.lang.Object)) (or (= fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@19) (= fixed.java.lang.Object w@@19))))
 :pattern ( (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@19) (UOrdering2 w@@19 fixed.java.lang.Object))
)))
(assert (forall ((w@@20 T@U) ) (!  (=> (and (= (type w@@20) javaTypeType) (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@20)) (or (= fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@20) (UOrdering2 fixed.java.lang.Object w@@20)))
 :pattern ( (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@20))
)))
(assert (forall ((w@@21 T@U) ) (!  (=> (and (= (type w@@21) javaTypeType) (UOrdering2 w@@21 fixed.sg.edu.nus.comp.tsunami.safe.Safe)) (= (oneStep fixed.java.lang.Object w@@21) fixed.sg.edu.nus.comp.tsunami.safe.Safe))
 :pattern ( (UOrdering2 w@@21 fixed.sg.edu.nus.comp.tsunami.safe.Safe))
)))
(assert (= (type fixed.java.lang.ClassCastException) javaTypeType))
(assert (not (= fixed.java.lang.ClassCastException fixed.java.lang.RuntimeException)))
(assert (UOrdering2 fixed.java.lang.ClassCastException fixed.java.lang.RuntimeException))
(assert (forall ((w@@22 T@U) ) (!  (=> (= (type w@@22) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.ClassCastException w@@22) (UOrdering2 w@@22 fixed.java.lang.RuntimeException)) (or (= fixed.java.lang.ClassCastException w@@22) (= fixed.java.lang.RuntimeException w@@22))))
 :pattern ( (UOrdering2 fixed.java.lang.ClassCastException w@@22) (UOrdering2 w@@22 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@23 T@U) ) (!  (=> (and (= (type w@@23) javaTypeType) (UOrdering2 fixed.java.lang.ClassCastException w@@23)) (or (= fixed.java.lang.ClassCastException w@@23) (UOrdering2 fixed.java.lang.RuntimeException w@@23)))
 :pattern ( (UOrdering2 fixed.java.lang.ClassCastException w@@23))
)))
(assert (forall ((w@@24 T@U) ) (!  (=> (and (= (type w@@24) javaTypeType) (UOrdering2 w@@24 fixed.java.lang.ClassCastException)) (= (oneStep fixed.java.lang.RuntimeException w@@24) fixed.java.lang.ClassCastException))
 :pattern ( (UOrdering2 w@@24 fixed.java.lang.ClassCastException))
)))
(assert (= (type fixed.java.lang.IndexOutOfBoundsException) javaTypeType))
(assert (not (= fixed.java.lang.IndexOutOfBoundsException fixed.java.lang.RuntimeException)))
(assert (UOrdering2 fixed.java.lang.IndexOutOfBoundsException fixed.java.lang.RuntimeException))
(assert (forall ((w@@25 T@U) ) (!  (=> (= (type w@@25) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@25) (UOrdering2 w@@25 fixed.java.lang.RuntimeException)) (or (= fixed.java.lang.IndexOutOfBoundsException w@@25) (= fixed.java.lang.RuntimeException w@@25))))
 :pattern ( (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@25) (UOrdering2 w@@25 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@26 T@U) ) (!  (=> (and (= (type w@@26) javaTypeType) (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@26)) (or (= fixed.java.lang.IndexOutOfBoundsException w@@26) (UOrdering2 fixed.java.lang.RuntimeException w@@26)))
 :pattern ( (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@26))
)))
(assert (forall ((w@@27 T@U) ) (!  (=> (and (= (type w@@27) javaTypeType) (UOrdering2 w@@27 fixed.java.lang.IndexOutOfBoundsException)) (= (oneStep fixed.java.lang.RuntimeException w@@27) fixed.java.lang.IndexOutOfBoundsException))
 :pattern ( (UOrdering2 w@@27 fixed.java.lang.IndexOutOfBoundsException))
)))
(assert (= (type fixed.java.lang.ArrayIndexOutOfBoundsException) javaTypeType))
(assert (not (= fixed.java.lang.ArrayIndexOutOfBoundsException fixed.java.lang.IndexOutOfBoundsException)))
(assert (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException fixed.java.lang.IndexOutOfBoundsException))
(assert (forall ((w@@28 T@U) ) (!  (=> (= (type w@@28) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@28) (UOrdering2 w@@28 fixed.java.lang.IndexOutOfBoundsException)) (or (= fixed.java.lang.ArrayIndexOutOfBoundsException w@@28) (= fixed.java.lang.IndexOutOfBoundsException w@@28))))
 :pattern ( (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@28) (UOrdering2 w@@28 fixed.java.lang.IndexOutOfBoundsException))
)))
(assert (forall ((w@@29 T@U) ) (!  (=> (and (= (type w@@29) javaTypeType) (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@29)) (or (= fixed.java.lang.ArrayIndexOutOfBoundsException w@@29) (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@29)))
 :pattern ( (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@29))
)))
(assert (forall ((w@@30 T@U) ) (!  (=> (and (= (type w@@30) javaTypeType) (UOrdering2 w@@30 fixed.java.lang.ArrayIndexOutOfBoundsException)) (= (oneStep fixed.java.lang.IndexOutOfBoundsException w@@30) fixed.java.lang.ArrayIndexOutOfBoundsException))
 :pattern ( (UOrdering2 w@@30 fixed.java.lang.ArrayIndexOutOfBoundsException))
)))
(assert  (and (= (Ctor refType) 4) (= (type fixed.$StringConst0) refType)))
(assert (forall ((w@@31 T@U) ) (!  (=> (and (= (type w@@31) refType) (UOrdering2 fixed.$StringConst0 w@@31)) (= fixed.$StringConst0 w@@31))
 :pattern ( (UOrdering2 fixed.$StringConst0 w@@31))
)))
(assert (= (type fixed.java.io.IOException) javaTypeType))
(assert (not (= fixed.java.io.IOException fixed.java.lang.Exception)))
(assert (UOrdering2 fixed.java.io.IOException fixed.java.lang.Exception))
(assert (forall ((w@@32 T@U) ) (!  (=> (= (type w@@32) javaTypeType) (=> (and (UOrdering2 fixed.java.io.IOException w@@32) (UOrdering2 w@@32 fixed.java.lang.Exception)) (or (= fixed.java.io.IOException w@@32) (= fixed.java.lang.Exception w@@32))))
 :pattern ( (UOrdering2 fixed.java.io.IOException w@@32) (UOrdering2 w@@32 fixed.java.lang.Exception))
)))
(assert (forall ((w@@33 T@U) ) (!  (=> (and (= (type w@@33) javaTypeType) (UOrdering2 fixed.java.io.IOException w@@33)) (or (= fixed.java.io.IOException w@@33) (UOrdering2 fixed.java.lang.Exception w@@33)))
 :pattern ( (UOrdering2 fixed.java.io.IOException w@@33))
)))
(assert (forall ((w@@34 T@U) ) (!  (=> (and (= (type w@@34) javaTypeType) (UOrdering2 w@@34 fixed.java.io.IOException)) (= (oneStep fixed.java.lang.Exception w@@34) fixed.java.io.IOException))
 :pattern ( (UOrdering2 w@@34 fixed.java.io.IOException))
)))
(assert (= (type fixed.java.io.UnsupportedEncodingException) javaTypeType))
(assert (not (= fixed.java.io.UnsupportedEncodingException fixed.java.io.IOException)))
(assert (UOrdering2 fixed.java.io.UnsupportedEncodingException fixed.java.io.IOException))
(assert (forall ((w@@35 T@U) ) (!  (=> (= (type w@@35) javaTypeType) (=> (and (UOrdering2 fixed.java.io.UnsupportedEncodingException w@@35) (UOrdering2 w@@35 fixed.java.io.IOException)) (or (= fixed.java.io.UnsupportedEncodingException w@@35) (= fixed.java.io.IOException w@@35))))
 :pattern ( (UOrdering2 fixed.java.io.UnsupportedEncodingException w@@35) (UOrdering2 w@@35 fixed.java.io.IOException))
)))
(assert (forall ((w@@36 T@U) ) (!  (=> (and (= (type w@@36) javaTypeType) (UOrdering2 fixed.java.io.UnsupportedEncodingException w@@36)) (or (= fixed.java.io.UnsupportedEncodingException w@@36) (UOrdering2 fixed.java.io.IOException w@@36)))
 :pattern ( (UOrdering2 fixed.java.io.UnsupportedEncodingException w@@36))
)))
(assert (forall ((w@@37 T@U) ) (!  (=> (and (= (type w@@37) javaTypeType) (UOrdering2 w@@37 fixed.java.io.UnsupportedEncodingException)) (= (oneStep fixed.java.io.IOException w@@37) fixed.java.io.UnsupportedEncodingException))
 :pattern ( (UOrdering2 w@@37 fixed.java.io.UnsupportedEncodingException))
)))
(assert (= (type fixed.$StringConst1) refType))
(assert (forall ((w@@38 T@U) ) (!  (=> (and (= (type w@@38) refType) (UOrdering2 fixed.$StringConst1 w@@38)) (= fixed.$StringConst1 w@@38))
 :pattern ( (UOrdering2 fixed.$StringConst1 w@@38))
)))
(assert (= (type fixed.java.lang.AutoCloseable) javaTypeType))
(assert (forall ((w@@39 T@U) ) (!  (=> (and (= (type w@@39) javaTypeType) (UOrdering2 fixed.java.lang.AutoCloseable w@@39)) (= fixed.java.lang.AutoCloseable w@@39))
 :pattern ( (UOrdering2 fixed.java.lang.AutoCloseable w@@39))
)))
(assert (= (type fixed.java.io.Closeable) javaTypeType))
(assert (not (= fixed.java.io.Closeable fixed.java.lang.AutoCloseable)))
(assert (UOrdering2 fixed.java.io.Closeable fixed.java.lang.AutoCloseable))
(assert (forall ((w@@40 T@U) ) (!  (=> (= (type w@@40) javaTypeType) (=> (and (UOrdering2 fixed.java.io.Closeable w@@40) (UOrdering2 w@@40 fixed.java.lang.AutoCloseable)) (or (= fixed.java.io.Closeable w@@40) (= fixed.java.lang.AutoCloseable w@@40))))
 :pattern ( (UOrdering2 fixed.java.io.Closeable w@@40) (UOrdering2 w@@40 fixed.java.lang.AutoCloseable))
)))
(assert (forall ((w@@41 T@U) ) (!  (=> (and (= (type w@@41) javaTypeType) (UOrdering2 fixed.java.io.Closeable w@@41)) (or (= fixed.java.io.Closeable w@@41) (UOrdering2 fixed.java.lang.AutoCloseable w@@41)))
 :pattern ( (UOrdering2 fixed.java.io.Closeable w@@41))
)))
(assert (= (type fixed.java.io.Flushable) javaTypeType))
(assert (forall ((w@@42 T@U) ) (!  (=> (and (= (type w@@42) javaTypeType) (UOrdering2 fixed.java.io.Flushable w@@42)) (= fixed.java.io.Flushable w@@42))
 :pattern ( (UOrdering2 fixed.java.io.Flushable w@@42))
)))
(assert (= (type fixed.java.io.OutputStream) javaTypeType))
(assert (not (= fixed.java.io.OutputStream fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.io.OutputStream fixed.java.lang.Object))
(assert (not (= fixed.java.io.OutputStream fixed.java.io.Closeable)))
(assert (UOrdering2 fixed.java.io.OutputStream fixed.java.io.Closeable))
(assert (not (= fixed.java.io.OutputStream fixed.java.io.Flushable)))
(assert (UOrdering2 fixed.java.io.OutputStream fixed.java.io.Flushable))
(assert (forall ((w@@43 T@U) ) (!  (=> (= (type w@@43) javaTypeType) (=> (and (UOrdering2 fixed.java.io.OutputStream w@@43) (UOrdering2 w@@43 fixed.java.lang.Object)) (or (= fixed.java.io.OutputStream w@@43) (= fixed.java.lang.Object w@@43))))
 :pattern ( (UOrdering2 fixed.java.io.OutputStream w@@43) (UOrdering2 w@@43 fixed.java.lang.Object))
)))
(assert (forall ((w@@44 T@U) ) (!  (=> (= (type w@@44) javaTypeType) (=> (and (UOrdering2 fixed.java.io.OutputStream w@@44) (UOrdering2 w@@44 fixed.java.io.Closeable)) (or (= fixed.java.io.OutputStream w@@44) (= fixed.java.io.Closeable w@@44))))
 :pattern ( (UOrdering2 fixed.java.io.OutputStream w@@44) (UOrdering2 w@@44 fixed.java.io.Closeable))
)))
(assert (forall ((w@@45 T@U) ) (!  (=> (= (type w@@45) javaTypeType) (=> (and (UOrdering2 fixed.java.io.OutputStream w@@45) (UOrdering2 w@@45 fixed.java.io.Flushable)) (or (= fixed.java.io.OutputStream w@@45) (= fixed.java.io.Flushable w@@45))))
 :pattern ( (UOrdering2 fixed.java.io.OutputStream w@@45) (UOrdering2 w@@45 fixed.java.io.Flushable))
)))
(assert (forall ((w@@46 T@U) ) (!  (=> (and (= (type w@@46) javaTypeType) (UOrdering2 fixed.java.io.OutputStream w@@46)) (or (or (or (= fixed.java.io.OutputStream w@@46) (UOrdering2 fixed.java.lang.Object w@@46)) (UOrdering2 fixed.java.io.Closeable w@@46)) (UOrdering2 fixed.java.io.Flushable w@@46)))
 :pattern ( (UOrdering2 fixed.java.io.OutputStream w@@46))
)))
(assert (forall ((w@@47 T@U) ) (!  (=> (and (= (type w@@47) javaTypeType) (UOrdering2 w@@47 fixed.java.io.OutputStream)) (= (oneStep fixed.java.lang.Object w@@47) fixed.java.io.OutputStream))
 :pattern ( (UOrdering2 w@@47 fixed.java.io.OutputStream))
)))
(assert (= (type fixed.java.io.FilterOutputStream) javaTypeType))
(assert (not (= fixed.java.io.FilterOutputStream fixed.java.io.OutputStream)))
(assert (UOrdering2 fixed.java.io.FilterOutputStream fixed.java.io.OutputStream))
(assert (forall ((w@@48 T@U) ) (!  (=> (= (type w@@48) javaTypeType) (=> (and (UOrdering2 fixed.java.io.FilterOutputStream w@@48) (UOrdering2 w@@48 fixed.java.io.OutputStream)) (or (= fixed.java.io.FilterOutputStream w@@48) (= fixed.java.io.OutputStream w@@48))))
 :pattern ( (UOrdering2 fixed.java.io.FilterOutputStream w@@48) (UOrdering2 w@@48 fixed.java.io.OutputStream))
)))
(assert (forall ((w@@49 T@U) ) (!  (=> (and (= (type w@@49) javaTypeType) (UOrdering2 fixed.java.io.FilterOutputStream w@@49)) (or (= fixed.java.io.FilterOutputStream w@@49) (UOrdering2 fixed.java.io.OutputStream w@@49)))
 :pattern ( (UOrdering2 fixed.java.io.FilterOutputStream w@@49))
)))
(assert (forall ((w@@50 T@U) ) (!  (=> (and (= (type w@@50) javaTypeType) (UOrdering2 w@@50 fixed.java.io.FilterOutputStream)) (= (oneStep fixed.java.io.OutputStream w@@50) fixed.java.io.FilterOutputStream))
 :pattern ( (UOrdering2 w@@50 fixed.java.io.FilterOutputStream))
)))
(assert (= (type fixed.java.lang.Appendable) javaTypeType))
(assert (forall ((w@@51 T@U) ) (!  (=> (and (= (type w@@51) javaTypeType) (UOrdering2 fixed.java.lang.Appendable w@@51)) (= fixed.java.lang.Appendable w@@51))
 :pattern ( (UOrdering2 fixed.java.lang.Appendable w@@51))
)))
(assert (= (type fixed.java.io.PrintStream) javaTypeType))
(assert (not (= fixed.java.io.PrintStream fixed.java.io.FilterOutputStream)))
(assert (UOrdering2 fixed.java.io.PrintStream fixed.java.io.FilterOutputStream))
(assert (not (= fixed.java.io.PrintStream fixed.java.lang.Appendable)))
(assert (UOrdering2 fixed.java.io.PrintStream fixed.java.lang.Appendable))
(assert (not (= fixed.java.io.PrintStream fixed.java.io.Closeable)))
(assert (UOrdering2 fixed.java.io.PrintStream fixed.java.io.Closeable))
(assert (forall ((w@@52 T@U) ) (!  (=> (= (type w@@52) javaTypeType) (=> (and (UOrdering2 fixed.java.io.PrintStream w@@52) (UOrdering2 w@@52 fixed.java.io.FilterOutputStream)) (or (= fixed.java.io.PrintStream w@@52) (= fixed.java.io.FilterOutputStream w@@52))))
 :pattern ( (UOrdering2 fixed.java.io.PrintStream w@@52) (UOrdering2 w@@52 fixed.java.io.FilterOutputStream))
)))
(assert (forall ((w@@53 T@U) ) (!  (=> (= (type w@@53) javaTypeType) (=> (and (UOrdering2 fixed.java.io.PrintStream w@@53) (UOrdering2 w@@53 fixed.java.lang.Appendable)) (or (= fixed.java.io.PrintStream w@@53) (= fixed.java.lang.Appendable w@@53))))
 :pattern ( (UOrdering2 fixed.java.io.PrintStream w@@53) (UOrdering2 w@@53 fixed.java.lang.Appendable))
)))
(assert (forall ((w@@54 T@U) ) (!  (=> (= (type w@@54) javaTypeType) (=> (and (UOrdering2 fixed.java.io.PrintStream w@@54) (UOrdering2 w@@54 fixed.java.io.Closeable)) (or (= fixed.java.io.PrintStream w@@54) (= fixed.java.io.Closeable w@@54))))
 :pattern ( (UOrdering2 fixed.java.io.PrintStream w@@54) (UOrdering2 w@@54 fixed.java.io.Closeable))
)))
(assert (forall ((w@@55 T@U) ) (!  (=> (and (= (type w@@55) javaTypeType) (UOrdering2 fixed.java.io.PrintStream w@@55)) (or (or (or (= fixed.java.io.PrintStream w@@55) (UOrdering2 fixed.java.io.FilterOutputStream w@@55)) (UOrdering2 fixed.java.lang.Appendable w@@55)) (UOrdering2 fixed.java.io.Closeable w@@55)))
 :pattern ( (UOrdering2 fixed.java.io.PrintStream w@@55))
)))
(assert (forall ((w@@56 T@U) ) (!  (=> (and (= (type w@@56) javaTypeType) (UOrdering2 w@@56 fixed.java.io.PrintStream)) (= (oneStep fixed.java.io.FilterOutputStream w@@56) fixed.java.io.PrintStream))
 :pattern ( (UOrdering2 w@@56 fixed.java.io.PrintStream))
)))
(assert (= (type fixed.java.lang.StringBuilder) javaTypeType))
(assert (not (= fixed.java.lang.StringBuilder fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.StringBuilder fixed.java.lang.Object))
(assert (forall ((w@@57 T@U) ) (!  (=> (= (type w@@57) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.StringBuilder w@@57) (UOrdering2 w@@57 fixed.java.lang.Object)) (or (= fixed.java.lang.StringBuilder w@@57) (= fixed.java.lang.Object w@@57))))
 :pattern ( (UOrdering2 fixed.java.lang.StringBuilder w@@57) (UOrdering2 w@@57 fixed.java.lang.Object))
)))
(assert (forall ((w@@58 T@U) ) (!  (=> (and (= (type w@@58) javaTypeType) (UOrdering2 fixed.java.lang.StringBuilder w@@58)) (or (= fixed.java.lang.StringBuilder w@@58) (UOrdering2 fixed.java.lang.Object w@@58)))
 :pattern ( (UOrdering2 fixed.java.lang.StringBuilder w@@58))
)))
(assert (forall ((w@@59 T@U) ) (!  (=> (and (= (type w@@59) javaTypeType) (UOrdering2 w@@59 fixed.java.lang.StringBuilder)) (= (oneStep fixed.java.lang.Object w@@59) fixed.java.lang.StringBuilder))
 :pattern ( (UOrdering2 w@@59 fixed.java.lang.StringBuilder))
)))
(assert (= (type fixed.java.lang.String) javaTypeType))
(assert (not (= fixed.java.lang.String fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.String fixed.java.lang.Object))
(assert (forall ((w@@60 T@U) ) (!  (=> (= (type w@@60) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.String w@@60) (UOrdering2 w@@60 fixed.java.lang.Object)) (or (= fixed.java.lang.String w@@60) (= fixed.java.lang.Object w@@60))))
 :pattern ( (UOrdering2 fixed.java.lang.String w@@60) (UOrdering2 w@@60 fixed.java.lang.Object))
)))
(assert (forall ((w@@61 T@U) ) (!  (=> (and (= (type w@@61) javaTypeType) (UOrdering2 fixed.java.lang.String w@@61)) (or (= fixed.java.lang.String w@@61) (UOrdering2 fixed.java.lang.Object w@@61)))
 :pattern ( (UOrdering2 fixed.java.lang.String w@@61))
)))
(assert (forall ((w@@62 T@U) ) (!  (=> (and (= (type w@@62) javaTypeType) (UOrdering2 w@@62 fixed.java.lang.String)) (= (oneStep fixed.java.lang.Object w@@62) fixed.java.lang.String))
 :pattern ( (UOrdering2 w@@62 fixed.java.lang.String))
)))
(assert (= (type fixed.java.lang.Boolean) javaTypeType))
(assert (not (= fixed.java.lang.Boolean fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.Boolean fixed.java.lang.Object))
(assert (forall ((w@@63 T@U) ) (!  (=> (= (type w@@63) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Boolean w@@63) (UOrdering2 w@@63 fixed.java.lang.Object)) (or (= fixed.java.lang.Boolean w@@63) (= fixed.java.lang.Object w@@63))))
 :pattern ( (UOrdering2 fixed.java.lang.Boolean w@@63) (UOrdering2 w@@63 fixed.java.lang.Object))
)))
(assert (forall ((w@@64 T@U) ) (!  (=> (and (= (type w@@64) javaTypeType) (UOrdering2 fixed.java.lang.Boolean w@@64)) (or (= fixed.java.lang.Boolean w@@64) (UOrdering2 fixed.java.lang.Object w@@64)))
 :pattern ( (UOrdering2 fixed.java.lang.Boolean w@@64))
)))
(assert (forall ((w@@65 T@U) ) (!  (=> (and (= (type w@@65) javaTypeType) (UOrdering2 w@@65 fixed.java.lang.Boolean)) (= (oneStep fixed.java.lang.Object w@@65) fixed.java.lang.Boolean))
 :pattern ( (UOrdering2 w@@65 fixed.java.lang.Boolean))
)))
(assert (forall ((w@@66 T@U) ) (!  (=> (and (= (type w@@66) javaTypeType) (UOrdering2 w@@66 fixed.java.lang.Object)) (or (or (or (or (or (or (or (= fixed.java.lang.Object w@@66) (UOrdering2 w@@66 fixed.PasswordEncoderUtils)) (UOrdering2 w@@66 fixed.java.lang.Throwable)) (UOrdering2 w@@66 fixed.sg.edu.nus.comp.tsunami.safe.Safe)) (UOrdering2 w@@66 fixed.java.io.OutputStream)) (UOrdering2 w@@66 fixed.java.lang.StringBuilder)) (UOrdering2 w@@66 fixed.java.lang.String)) (UOrdering2 w@@66 fixed.java.lang.Boolean)))
 :pattern ( (UOrdering2 w@@66 fixed.java.lang.Object))
)))
(assert (forall ((w@@67 T@U) ) (!  (=> (and (= (type w@@67) javaTypeType) (UOrdering2 w@@67 fixed.PasswordEncoderUtils)) (= fixed.PasswordEncoderUtils w@@67))
 :pattern ( (UOrdering2 w@@67 fixed.PasswordEncoderUtils))
)))
(assert (forall ((w@@68 T@U) ) (!  (=> (and (= (type w@@68) javaTypeType) (UOrdering2 w@@68 fixed.java.io.Serializable)) (or (= fixed.java.io.Serializable w@@68) (UOrdering2 w@@68 fixed.java.lang.Throwable)))
 :pattern ( (UOrdering2 w@@68 fixed.java.io.Serializable))
)))
(assert (forall ((w@@69 T@U) ) (!  (=> (and (= (type w@@69) javaTypeType) (UOrdering2 w@@69 fixed.java.lang.Comparable)) (= fixed.java.lang.Comparable w@@69))
 :pattern ( (UOrdering2 w@@69 fixed.java.lang.Comparable))
)))
(assert (forall ((w@@70 T@U) ) (!  (=> (and (= (type w@@70) javaTypeType) (UOrdering2 w@@70 fixed.java.lang.CharSequence)) (= fixed.java.lang.CharSequence w@@70))
 :pattern ( (UOrdering2 w@@70 fixed.java.lang.CharSequence))
)))
(assert (forall ((w@@71 T@U) ) (!  (=> (and (= (type w@@71) javaTypeType) (UOrdering2 w@@71 fixed.java.lang.Throwable)) (or (= fixed.java.lang.Throwable w@@71) (UOrdering2 w@@71 fixed.java.lang.Exception)))
 :pattern ( (UOrdering2 w@@71 fixed.java.lang.Throwable))
)))
(assert (forall ((w@@72 T@U) ) (!  (=> (and (= (type w@@72) javaTypeType) (UOrdering2 w@@72 fixed.java.lang.Exception)) (or (or (= fixed.java.lang.Exception w@@72) (UOrdering2 w@@72 fixed.java.lang.RuntimeException)) (UOrdering2 w@@72 fixed.java.io.IOException)))
 :pattern ( (UOrdering2 w@@72 fixed.java.lang.Exception))
)))
(assert (forall ((w@@73 T@U) ) (!  (=> (and (= (type w@@73) javaTypeType) (UOrdering2 w@@73 fixed.java.lang.RuntimeException)) (or (or (or (= fixed.java.lang.RuntimeException w@@73) (UOrdering2 w@@73 fixed.java.lang.NullPointerException)) (UOrdering2 w@@73 fixed.java.lang.ClassCastException)) (UOrdering2 w@@73 fixed.java.lang.IndexOutOfBoundsException)))
 :pattern ( (UOrdering2 w@@73 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@74 T@U) ) (!  (=> (and (= (type w@@74) javaTypeType) (UOrdering2 w@@74 fixed.java.lang.NullPointerException)) (= fixed.java.lang.NullPointerException w@@74))
 :pattern ( (UOrdering2 w@@74 fixed.java.lang.NullPointerException))
)))
(assert (forall ((w@@75 T@U) ) (!  (=> (and (= (type w@@75) javaTypeType) (UOrdering2 w@@75 fixed.sg.edu.nus.comp.tsunami.safe.Safe)) (= fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@75))
 :pattern ( (UOrdering2 w@@75 fixed.sg.edu.nus.comp.tsunami.safe.Safe))
)))
(assert (forall ((w@@76 T@U) ) (!  (=> (and (= (type w@@76) javaTypeType) (UOrdering2 w@@76 fixed.java.lang.ClassCastException)) (= fixed.java.lang.ClassCastException w@@76))
 :pattern ( (UOrdering2 w@@76 fixed.java.lang.ClassCastException))
)))
(assert (forall ((w@@77 T@U) ) (!  (=> (and (= (type w@@77) javaTypeType) (UOrdering2 w@@77 fixed.java.lang.IndexOutOfBoundsException)) (or (= fixed.java.lang.IndexOutOfBoundsException w@@77) (UOrdering2 w@@77 fixed.java.lang.ArrayIndexOutOfBoundsException)))
 :pattern ( (UOrdering2 w@@77 fixed.java.lang.IndexOutOfBoundsException))
)))
(assert (forall ((w@@78 T@U) ) (!  (=> (and (= (type w@@78) javaTypeType) (UOrdering2 w@@78 fixed.java.lang.ArrayIndexOutOfBoundsException)) (= fixed.java.lang.ArrayIndexOutOfBoundsException w@@78))
 :pattern ( (UOrdering2 w@@78 fixed.java.lang.ArrayIndexOutOfBoundsException))
)))
(assert (forall ((w@@79 T@U) ) (!  (=> (and (= (type w@@79) refType) (UOrdering2 w@@79 fixed.$StringConst0)) (= fixed.$StringConst0 w@@79))
 :pattern ( (UOrdering2 w@@79 fixed.$StringConst0))
)))
(assert (forall ((w@@80 T@U) ) (!  (=> (and (= (type w@@80) javaTypeType) (UOrdering2 w@@80 fixed.java.io.IOException)) (or (= fixed.java.io.IOException w@@80) (UOrdering2 w@@80 fixed.java.io.UnsupportedEncodingException)))
 :pattern ( (UOrdering2 w@@80 fixed.java.io.IOException))
)))
(assert (forall ((w@@81 T@U) ) (!  (=> (and (= (type w@@81) javaTypeType) (UOrdering2 w@@81 fixed.java.io.UnsupportedEncodingException)) (= fixed.java.io.UnsupportedEncodingException w@@81))
 :pattern ( (UOrdering2 w@@81 fixed.java.io.UnsupportedEncodingException))
)))
(assert (forall ((w@@82 T@U) ) (!  (=> (and (= (type w@@82) refType) (UOrdering2 w@@82 fixed.$StringConst1)) (= fixed.$StringConst1 w@@82))
 :pattern ( (UOrdering2 w@@82 fixed.$StringConst1))
)))
(assert (forall ((w@@83 T@U) ) (!  (=> (and (= (type w@@83) javaTypeType) (UOrdering2 w@@83 fixed.java.lang.AutoCloseable)) (or (= fixed.java.lang.AutoCloseable w@@83) (UOrdering2 w@@83 fixed.java.io.Closeable)))
 :pattern ( (UOrdering2 w@@83 fixed.java.lang.AutoCloseable))
)))
(assert (forall ((w@@84 T@U) ) (!  (=> (and (= (type w@@84) javaTypeType) (UOrdering2 w@@84 fixed.java.io.Closeable)) (or (or (= fixed.java.io.Closeable w@@84) (UOrdering2 w@@84 fixed.java.io.OutputStream)) (UOrdering2 w@@84 fixed.java.io.PrintStream)))
 :pattern ( (UOrdering2 w@@84 fixed.java.io.Closeable))
)))
(assert (forall ((w@@85 T@U) ) (!  (=> (and (= (type w@@85) javaTypeType) (UOrdering2 w@@85 fixed.java.io.Flushable)) (or (= fixed.java.io.Flushable w@@85) (UOrdering2 w@@85 fixed.java.io.OutputStream)))
 :pattern ( (UOrdering2 w@@85 fixed.java.io.Flushable))
)))
(assert (forall ((w@@86 T@U) ) (!  (=> (and (= (type w@@86) javaTypeType) (UOrdering2 w@@86 fixed.java.io.OutputStream)) (or (= fixed.java.io.OutputStream w@@86) (UOrdering2 w@@86 fixed.java.io.FilterOutputStream)))
 :pattern ( (UOrdering2 w@@86 fixed.java.io.OutputStream))
)))
(assert (forall ((w@@87 T@U) ) (!  (=> (and (= (type w@@87) javaTypeType) (UOrdering2 w@@87 fixed.java.io.FilterOutputStream)) (or (= fixed.java.io.FilterOutputStream w@@87) (UOrdering2 w@@87 fixed.java.io.PrintStream)))
 :pattern ( (UOrdering2 w@@87 fixed.java.io.FilterOutputStream))
)))
(assert (forall ((w@@88 T@U) ) (!  (=> (and (= (type w@@88) javaTypeType) (UOrdering2 w@@88 fixed.java.lang.Appendable)) (or (= fixed.java.lang.Appendable w@@88) (UOrdering2 w@@88 fixed.java.io.PrintStream)))
 :pattern ( (UOrdering2 w@@88 fixed.java.lang.Appendable))
)))
(assert (forall ((w@@89 T@U) ) (!  (=> (and (= (type w@@89) javaTypeType) (UOrdering2 w@@89 fixed.java.io.PrintStream)) (= fixed.java.io.PrintStream w@@89))
 :pattern ( (UOrdering2 w@@89 fixed.java.io.PrintStream))
)))
(assert (forall ((w@@90 T@U) ) (!  (=> (and (= (type w@@90) javaTypeType) (UOrdering2 w@@90 fixed.java.lang.StringBuilder)) (= fixed.java.lang.StringBuilder w@@90))
 :pattern ( (UOrdering2 w@@90 fixed.java.lang.StringBuilder))
)))
(assert (forall ((w@@91 T@U) ) (!  (=> (and (= (type w@@91) javaTypeType) (UOrdering2 w@@91 fixed.java.lang.String)) (= fixed.java.lang.String w@@91))
 :pattern ( (UOrdering2 w@@91 fixed.java.lang.String))
)))
(assert (forall ((w@@92 T@U) ) (!  (=> (and (= (type w@@92) javaTypeType) (UOrdering2 w@@92 fixed.java.lang.Boolean)) (= fixed.java.lang.Boolean w@@92))
 :pattern ( (UOrdering2 w@@92 fixed.java.lang.Boolean))
)))
(assert  (and (and (and (and (forall ((arg0@@6 T@T) ) (! (= (Ctor (FieldType arg0@@6)) 5)
 :qid |ctor:FieldType|
)) (forall ((arg0@@7 T@T) ) (! (= (FieldTypeInv0 (FieldType arg0@@7)) arg0@@7)
 :qid |typeInv:FieldTypeInv0|
 :pattern ( (FieldType arg0@@7))
))) (= (type fixed.$type) (FieldType javaTypeType))) (= (type fixed.$alloc) (FieldType boolType))) (= (type fixed.$null) refType)))
(assert (distinct fixed.$type fixed.$alloc fixed.$null fixed.java.lang.Object fixed.PasswordEncoderUtils fixed.java.io.Serializable fixed.java.lang.Comparable fixed.java.lang.CharSequence fixed.java.lang.Throwable fixed.java.lang.Exception fixed.java.lang.RuntimeException fixed.java.lang.NullPointerException fixed.sg.edu.nus.comp.tsunami.safe.Safe fixed.java.lang.ClassCastException fixed.java.lang.IndexOutOfBoundsException fixed.java.lang.ArrayIndexOutOfBoundsException fixed.$StringConst0 fixed.java.io.IOException fixed.java.io.UnsupportedEncodingException fixed.$StringConst1 fixed.java.lang.AutoCloseable fixed.java.io.Closeable fixed.java.io.Flushable fixed.java.io.OutputStream fixed.java.io.FilterOutputStream fixed.java.lang.Appendable fixed.java.io.PrintStream fixed.java.lang.StringBuilder fixed.java.lang.String fixed.java.lang.Boolean)
)
(assert (forall ((x@@5 Int) ) (!  (and (=> (fixed.$intToBool x@@5) (ite (= x@@5 0) false true)) (=> (ite (= x@@5 0) false true) (fixed.$intToBool x@@5)))
 :qid |RSPROCja.133:15|
 :skolemid |2059|
 :pattern ( (fixed.$intToBool x@@5))
)))
(assert (forall ((x@@6 T@U) ) (!  (=> (= (type x@@6) refType) (and (=> (fixed.$refToBool x@@6) (ite (= x@@6 fixed.$null) false true)) (=> (ite (= x@@6 fixed.$null) false true) (fixed.$refToBool x@@6))))
 :qid |RSPROCja.137:15|
 :skolemid |2060|
 :pattern ( (fixed.$refToBool x@@6))
)))
(assert (forall ((x@@7 Bool) ) (! (= (fixed.$boolToInt x@@7) (ite  (and (=> x@@7 true) (=> true x@@7)) 1 0))
 :qid |RSPROCja.141:15|
 :skolemid |2061|
 :pattern ( (fixed.$boolToInt x@@7))
)))
(assert (forall ((x@@8 Real) (y@@1 Real) ) (! (= (fixed.$cmpReal x@@8 y@@1) (ite (> x@@8 y@@1) 1 (ite (< x@@8 y@@1) (- 0 1) 0)))
 :qid |RSPROCja.145:15|
 :skolemid |2062|
 :pattern ( (fixed.$cmpReal x@@8 y@@1))
)))
(assert (forall ((x@@9 Int) (y@@2 Int) ) (! (= (fixed.$cmpInt x@@9 y@@2) (ite (> x@@9 y@@2) 1 (ite (< x@@9 y@@2) (- 0 1) 0)))
 :qid |RSPROCja.149:15|
 :skolemid |2063|
 :pattern ( (fixed.$cmpInt x@@9 y@@2))
)))
(assert (forall ((arg0@@8 Int) ) (! (= (type (fixed.$intToRef arg0@@8)) refType)
 :qid |funType:fixed.$intToRef|
 :pattern ( (fixed.$intToRef arg0@@8))
)))
(assert (forall ((index Int) ) (! (not (= (fixed.$intToRef index) fixed.$null))
 :qid |RSPROCja.153:15|
 :skolemid |2064|
)))
(assert (forall ((i1 Int) (i2 Int) ) (!  (and (=> (= i1 i2) (= (fixed.$intToRef i1) (fixed.$intToRef i2))) (=> (= (fixed.$intToRef i1) (fixed.$intToRef i2)) (= i1 i2)))
 :qid |RSPROCja.155:15|
 :skolemid |2065|
)))
(assert (forall ((x@@10 Int) ) (!  (and (=> (fixed.$intToBool x@@10) (ite (= x@@10 0) false true)) (=> (ite (= x@@10 0) false true) (fixed.$intToBool x@@10)))
 :qid |RSPROCja.9757:15|
 :skolemid |2267|
 :pattern ( (fixed.$intToBool x@@10))
)))
(assert (forall ((x@@11 T@U) ) (!  (=> (= (type x@@11) refType) (and (=> (fixed.$refToBool x@@11) (ite (= x@@11 fixed.$null) false true)) (=> (ite (= x@@11 fixed.$null) false true) (fixed.$refToBool x@@11))))
 :qid |RSPROCja.9761:15|
 :skolemid |2268|
 :pattern ( (fixed.$refToBool x@@11))
)))
(assert (forall ((x@@12 Bool) ) (! (= (fixed.$boolToInt x@@12) (ite  (and (=> x@@12 true) (=> true x@@12)) 1 0))
 :qid |RSPROCja.9765:15|
 :skolemid |2269|
 :pattern ( (fixed.$boolToInt x@@12))
)))
(assert (forall ((x@@13 Real) (y@@3 Real) ) (! (= (fixed.$cmpReal x@@13 y@@3) (ite (> x@@13 y@@3) 1 (ite (< x@@13 y@@3) (- 0 1) 0)))
 :qid |RSPROCja.9769:15|
 :skolemid |2270|
 :pattern ( (fixed.$cmpReal x@@13 y@@3))
)))
(assert (forall ((x@@14 Int) (y@@4 Int) ) (! (= (fixed.$cmpInt x@@14 y@@4) (ite (> x@@14 y@@4) 1 (ite (< x@@14 y@@4) (- 0 1) 0)))
 :qid |RSPROCja.9773:15|
 :skolemid |2271|
 :pattern ( (fixed.$cmpInt x@@14 y@@4))
)))
(assert (forall ((index@@0 Int) ) (! (not (= (fixed.$intToRef index@@0) fixed.$null))
 :qid |RSPROCja.9777:15|
 :skolemid |2272|
)))
(assert (forall ((i1@@0 Int) (i2@@0 Int) ) (!  (and (=> (= i1@@0 i2@@0) (= (fixed.$intToRef i1@@0) (fixed.$intToRef i2@@0))) (=> (= (fixed.$intToRef i1@@0) (fixed.$intToRef i2@@0)) (= i1@@0 i2@@0)))
 :qid |RSPROCja.9779:15|
 :skolemid |2273|
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type call3formal@$obj@0) refType) (= (type call3formal@$obj@0@@0) refType)) (= (type inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2) refType)) (= (type inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2) refType)) (forall ((arg0@@9 T@T) ) (! (= (Ctor (MapType0Type arg0@@9)) 6)
 :qid |ctor:MapType0Type|
))) (forall ((arg0@@10 T@T) ) (! (= (MapType0TypeInv0 (MapType0Type arg0@@10)) arg0@@10)
 :qid |typeInv:MapType0TypeInv0|
 :pattern ( (MapType0Type arg0@@10))
))) (forall ((arg0@@11 T@U) (arg1@@0 T@U) (arg2 T@U) ) (! (let (($GenericType__0 (FieldTypeInv0 (type arg2))))
(= (type (MapType0Select arg0@@11 arg1@@0 arg2)) $GenericType__0))
 :qid |funType:MapType0Select|
 :pattern ( (MapType0Select arg0@@11 arg1@@0 arg2))
))) (forall ((arg0@@12 T@U) (arg1@@1 T@U) (arg2@@0 T@U) (arg3 T@U) ) (! (let ((aVar0 (type arg1@@1)))
(= (type (MapType0Store arg0@@12 arg1@@1 arg2@@0 arg3)) (MapType0Type aVar0)))
 :qid |funType:MapType0Store|
 :pattern ( (MapType0Store arg0@@12 arg1@@1 arg2@@0 arg3))
))) (forall ((m T@U) (x0 T@U) (x1 T@U) (val T@U) ) (! (let (($GenericType__0@@0 (FieldTypeInv0 (type x1))))
 (=> (= (type val) $GenericType__0@@0) (= (MapType0Select (MapType0Store m x0 x1 val) x0 x1) val)))
 :qid |mapAx0:MapType0Select|
 :weight 0
))) (and (and (forall ((val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (x1@@0 T@U) (y0 T@U) (y1 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select (MapType0Store m@@0 x0@@0 x1@@0 val@@0) y0 y1) (MapType0Select m@@0 y0 y1)))
 :qid |mapAx1:MapType0Select:0|
 :weight 0
)) (forall ((val@@1 T@U) (m@@1 T@U) (x0@@1 T@U) (x1@@1 T@U) (y0@@0 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType0Select (MapType0Store m@@1 x0@@1 x1@@1 val@@1) y0@@0 y1@@0) (MapType0Select m@@1 y0@@0 y1@@0)))
 :qid |mapAx1:MapType0Select:1|
 :weight 0
))) (forall ((val@@2 T@U) (m@@2 T@U) (x0@@2 T@U) (x1@@2 T@U) (y0@@1 T@U) (y1@@1 T@U) ) (!  (or true (= (MapType0Select (MapType0Store m@@2 x0@@2 x1@@2 val@@2) y0@@1 y1@@1) (MapType0Select m@@2 y0@@1 y1@@1)))
 :qid |mapAx2:MapType0Select|
 :weight 0
)))) (= (type fixed.$heap@21) (MapType0Type refType))) (= (type fixed.$heap@10) (MapType0Type refType))) (= (type fixed.$heap) (MapType0Type refType))) (forall ((arg0@@13 T@T) (arg1@@2 T@T) ) (! (= (Ctor (MapType1Type arg0@@13 arg1@@2)) 7)
 :qid |ctor:MapType1Type|
))) (forall ((arg0@@14 T@T) (arg1@@3 T@T) ) (! (= (MapType1TypeInv0 (MapType1Type arg0@@14 arg1@@3)) arg0@@14)
 :qid |typeInv:MapType1TypeInv0|
 :pattern ( (MapType1Type arg0@@14 arg1@@3))
))) (forall ((arg0@@15 T@T) (arg1@@4 T@T) ) (! (= (MapType1TypeInv1 (MapType1Type arg0@@15 arg1@@4)) arg1@@4)
 :qid |typeInv:MapType1TypeInv1|
 :pattern ( (MapType1Type arg0@@15 arg1@@4))
))) (forall ((arg0@@16 T@U) (arg1@@5 T@U) ) (! (let ((aVar1 (MapType1TypeInv1 (type arg0@@16))))
(= (type (MapType1Select arg0@@16 arg1@@5)) aVar1))
 :qid |funType:MapType1Select|
 :pattern ( (MapType1Select arg0@@16 arg1@@5))
))) (forall ((arg0@@17 T@U) (arg1@@6 T@U) (arg2@@1 T@U) ) (! (let ((aVar1@@0 (type arg2@@1)))
(let ((aVar0@@0 (type arg1@@6)))
(= (type (MapType1Store arg0@@17 arg1@@6 arg2@@1)) (MapType1Type aVar0@@0 aVar1@@0))))
 :qid |funType:MapType1Store|
 :pattern ( (MapType1Store arg0@@17 arg1@@6 arg2@@1))
))) (forall ((m@@3 T@U) (x0@@3 T@U) (val@@3 T@U) ) (! (let ((aVar1@@1 (MapType1TypeInv1 (type m@@3))))
 (=> (= (type val@@3) aVar1@@1) (= (MapType1Select (MapType1Store m@@3 x0@@3 val@@3) x0@@3) val@@3)))
 :qid |mapAx0:MapType1Select|
 :weight 0
))) (and (forall ((val@@4 T@U) (m@@4 T@U) (x0@@4 T@U) (y0@@2 T@U) ) (!  (or (= x0@@4 y0@@2) (= (MapType1Select (MapType1Store m@@4 x0@@4 val@@4) y0@@2) (MapType1Select m@@4 y0@@2)))
 :qid |mapAx1:MapType1Select:0|
 :weight 0
)) (forall ((val@@5 T@U) (m@@5 T@U) (x0@@5 T@U) (y0@@3 T@U) ) (!  (or true (= (MapType1Select (MapType1Store m@@5 x0@@5 val@@5) y0@@3) (MapType1Select m@@5 y0@@3)))
 :qid |mapAx2:MapType1Select|
 :weight 0
)))) (= (type fixed.$arrSizeHeap@1) (MapType1Type refType intType))) (= (type fixed.$arrSizeHeap@3) (MapType1Type refType intType))) (= (type fixed.$intArrHeap@1) (MapType1Type refType (MapType1Type intType intType)))) (= (type fixed.$intArrHeap) (MapType1Type refType (MapType1Type intType intType)))) (= (type inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1) refType)) (= (type fixed.$heap@12) (MapType0Type refType))) (= (type fixed.$heap@11) (MapType0Type refType))) (= (type call3formal@$obj@0@@1) refType)) (= (type fixed.$arrSizeHeap) (MapType1Type refType intType))) (= (type fixed.$heap@18) (MapType0Type refType))) (= (type fixed.$heap@14) (MapType0Type refType))) (= (type call3formal@$obj@0@@2) refType)) (= (type fixed.$arrSizeHeap@2) (MapType1Type refType intType))) (= (type fixed.$heap@19) (MapType0Type refType))) (= (type call3formal@$obj@0@@3) refType)) (= (type inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2) refType)) (= (type fixed.$heap@20) (MapType0Type refType))) (= (type call3formal@$obj@0@@4) refType)) (= (type fixed.$intArrHeap@2) (MapType1Type refType (MapType1Type intType intType)))) (= (type fixed.char$lp$$rp$$java.lang.String$chars348) (FieldType refType))) (= (type fixed.$heap@15) (MapType0Type refType))) (= (type call3formal@$obj@0@@5) refType)) (= (type fixed.$heap@16) (MapType0Type refType))) (= (type call3formal@$obj@0@@6) refType)) (= (type inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$r3@2) refType)) (= (type fixed.$heap@17) (MapType0Type refType))) (= (type call3formal@$obj@0@@7) refType)) (= (type fixed.$intArrHeap@3) (MapType1Type refType (MapType1Type intType intType)))) (= (type fixed.$heap@13) (MapType0Type refType))) (= (type call3formal@$obj@0@@8) refType)) (= (type fixed.$intArrayType) javaTypeType)) (= (type fixed.$stringSizeHeap) (MapType1Type refType intType))) (= (type $this) refType)) (= (type inline$fixed.java.lang.StringBuilder$toString$$0$$return@0) refType)) (= (type fixed.char$lp$$rp$$java.lang.StringBuilder$chars347) (FieldType refType))) (= (type inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1) refType)) (= (type fixed.$heap@1) (MapType0Type refType))) (= (type fixed.$heap@0) (MapType0Type refType))) (= (type call3formal@$obj@0@@9) refType)) (= (type fixed.$heap@7) (MapType0Type refType))) (= (type fixed.$heap@3) (MapType0Type refType))) (= (type call3formal@$obj@0@@10) refType)) (= (type fixed.$arrSizeHeap@0) (MapType1Type refType intType))) (= (type fixed.$heap@8) (MapType0Type refType))) (= (type call3formal@$obj@0@@11) refType)) (= (type inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2) refType)) (= (type fixed.$heap@9) (MapType0Type refType))) (= (type call3formal@$obj@0@@12) refType)) (= (type fixed.$intArrHeap@0) (MapType1Type refType (MapType1Type intType intType)))) (= (type fixed.$heap@4) (MapType0Type refType))) (= (type call3formal@$obj@0@@13) refType)) (= (type fixed.$heap@5) (MapType0Type refType))) (= (type call3formal@$obj@0@@14) refType)) (= (type inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$r3@2) refType)) (= (type fixed.$heap@6) (MapType0Type refType))) (= (type call3formal@$obj@0@@15) refType)) (= (type fixed.$intArrHeap@4) (MapType1Type refType (MapType1Type intType intType)))) (= (type fixed.$heap@2) (MapType0Type refType))) (= (type call3formal@$obj@0@@16) refType)) (= (type inline$unsafe.java.lang.StringBuilder$toString$$0$$return@0) refType)))
(push 1)
(set-info :boogie-vc-id PROC_.java.lang.StringBuilder$toString$_EQ_unsafe__xx__fixed)
(assert (not
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon15_dummy_correct  (=> (! (and %lbl%+741534 true) :lblpos +741534) true)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon15_correct  (=> (! (and %lbl%+741523 true) :lblpos +741523) (=> (and (= fixed.$intArrHeap@4 (MapType1Store fixed.$intArrHeap inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$r3@2 (MapType1Store (MapType1Select fixed.$intArrHeap inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$r3@2) (int_2_U 0) (int_2_U inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$c2@2)))) (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_i3@2 (+ 0 1))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon15_dummy_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon20_Then_correct  (=> (! (and %lbl%+741524 true) :lblpos +741524) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@0 inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$r3@2))) (>= 0 0)) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon15_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon15_dummy_correct  (=> (! (and %lbl%+741552 true) :lblpos +741552) true)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon15_correct  (=> (! (and %lbl%+741548 true) :lblpos +741548) (=> (and (= fixed.$intArrHeap@0 (MapType1Store fixed.$intArrHeap inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2 (MapType1Store (MapType1Select fixed.$intArrHeap inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2) (int_2_U 0) (int_2_U inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$c2@2)))) (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$i3@2 (+ 0 1))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon15_dummy_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon20_Then_correct  (=> (! (and %lbl%+741547 true) :lblpos +741547) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@0 inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2))) (>= 0 0)) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon15_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon15_dummy_correct  (=> (! (and %lbl%+741586 true) :lblpos +741586) true)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon15_correct  (=> (! (and %lbl%+741575 true) :lblpos +741575) (=> (and (= fixed.$intArrHeap@3 (MapType1Store fixed.$intArrHeap inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$r3@2 (MapType1Store (MapType1Select fixed.$intArrHeap inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$r3@2) (int_2_U 0) (int_2_U inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$c2@2)))) (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_i3@2 (+ 0 1))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon15_dummy_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon20_Then_correct  (=> (! (and %lbl%+741576 true) :lblpos +741576) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@2 inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$r3@2))) (>= 0 0)) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon15_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon15_dummy_correct  (=> (! (and %lbl%+741604 true) :lblpos +741604) true)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon15_correct  (=> (! (and %lbl%+741600 true) :lblpos +741600) (=> (and (= fixed.$intArrHeap@2 (MapType1Store fixed.$intArrHeap inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2 (MapType1Store (MapType1Select fixed.$intArrHeap inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2) (int_2_U 0) (int_2_U inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$c2@2)))) (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$i3@2 (+ 0 1))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon15_dummy_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon20_Then_correct  (=> (! (and %lbl%+741599 true) :lblpos +741599) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@2 inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2))) (>= 0 0)) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon15_correct))))
(let ((GeneratedUnifiedExit_correct  (=> (! (and %lbl%+751626 true) :lblpos +751626) (! (or %lbl%@757027  (and (and (and (and (and AA_TEMP235@2 AA_TEMP234@2) AA_TEMP233@2) AA_TEMP232@2) AA_TEMP231@2) AA_TEMP230@2)) :lblneg @757027))))
(let ((AA_INSTR_EQ_BODY$2_correct  (=> (! (and %lbl%+741610 true) :lblpos +741610) (=> (and (and (and (and (and (and (and (and (=> AA_TEMP230@1 (or AA_TEMP230@0 (= call3formal@$obj@0 call3formal@$obj@0@@0))) (=> (or AA_TEMP230@0 (= call3formal@$obj@0 call3formal@$obj@0@@0)) AA_TEMP230@1)) (and (=> AA_TEMP231@1 (or AA_TEMP231@0 (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2))) (=> (or AA_TEMP231@0 (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2)) AA_TEMP231@1))) (and (=> AA_TEMP232@1 (or AA_TEMP232@0 (= fixed.$objIndex@18 fixed.$objIndex@18))) (=> (or AA_TEMP232@0 (= fixed.$objIndex@18 fixed.$objIndex@18)) AA_TEMP232@1))) (and (=> AA_TEMP233@1 (or AA_TEMP233@0 (forall ((r T@U) (f T@U) ) (! (let ((_ty (FieldTypeInv0 (type f))))
 (=> (and (= (type r) refType) (= (type f) (FieldType _ty))) (or (= (MapType0Select fixed.$heap@21 r f) (MapType0Select fixed.$heap@10 r f)) (not (U_2_bool (MapType0Select fixed.$heap r fixed.$alloc))))))
 :qid |RSPROCja.18269:20|
 :skolemid |2364|
 :no-pattern (type r)
 :no-pattern (type f)
 :no-pattern (U_2_int r)
 :no-pattern (U_2_bool r)
 :no-pattern (U_2_int f)
 :no-pattern (U_2_bool f)
)))) (=> (or AA_TEMP233@0 (forall ((r@@0 T@U) (f@@0 T@U) ) (! (let ((_ty@@0 (FieldTypeInv0 (type f@@0))))
 (=> (and (= (type r@@0) refType) (= (type f@@0) (FieldType _ty@@0))) (or (= (MapType0Select fixed.$heap@21 r@@0 f@@0) (MapType0Select fixed.$heap@10 r@@0 f@@0)) (not (U_2_bool (MapType0Select fixed.$heap r@@0 fixed.$alloc))))))
 :qid |RSPROCja.18269:20|
 :skolemid |2364|
 :no-pattern (type r@@0)
 :no-pattern (type f@@0)
 :no-pattern (U_2_int r@@0)
 :no-pattern (U_2_bool r@@0)
 :no-pattern (U_2_int f@@0)
 :no-pattern (U_2_bool f@@0)
))) AA_TEMP233@1))) (and (=> AA_TEMP234@1 (or (or AA_TEMP234@0 (= fixed.$arrSizeHeap@1 fixed.$arrSizeHeap@3)) (forall ((_x0 T@U) ) (!  (=> (= (type _x0) refType) (= (U_2_int (MapType1Select fixed.$arrSizeHeap@1 _x0)) (U_2_int (MapType1Select fixed.$arrSizeHeap@3 _x0))))
 :qid |RSPROCja.18273:15|
 :skolemid |2365|
 :no-pattern (type _x0)
 :no-pattern (U_2_int _x0)
 :no-pattern (U_2_bool _x0)
)))) (=> (or (or AA_TEMP234@0 (= fixed.$arrSizeHeap@1 fixed.$arrSizeHeap@3)) (forall ((_x0@@0 T@U) ) (!  (=> (= (type _x0@@0) refType) (= (U_2_int (MapType1Select fixed.$arrSizeHeap@1 _x0@@0)) (U_2_int (MapType1Select fixed.$arrSizeHeap@3 _x0@@0))))
 :qid |RSPROCja.18273:15|
 :skolemid |2365|
 :no-pattern (type _x0@@0)
 :no-pattern (U_2_int _x0@@0)
 :no-pattern (U_2_bool _x0@@0)
))) AA_TEMP234@1))) (and (=> AA_TEMP235@1 (or AA_TEMP235@0 (= fixed.$intArrHeap@1 fixed.$intArrHeap))) (=> (or AA_TEMP235@0 (= fixed.$intArrHeap@1 fixed.$intArrHeap)) AA_TEMP235@1))) (and (and (=> AA_TEMP230@2 AA_TEMP230@1) (=> AA_TEMP230@1 AA_TEMP230@2)) (and (=> AA_TEMP231@2 AA_TEMP231@1) (=> AA_TEMP231@1 AA_TEMP231@2)))) (and (and (and (=> AA_TEMP232@2 AA_TEMP232@1) (=> AA_TEMP232@1 AA_TEMP232@2)) (and (=> AA_TEMP233@2 AA_TEMP233@1) (=> AA_TEMP233@1 AA_TEMP233@2))) (and (and (=> AA_TEMP234@2 AA_TEMP234@1) (=> AA_TEMP234@1 AA_TEMP234@2)) (and (=> AA_TEMP235@2 AA_TEMP235@1) (=> AA_TEMP235@1 AA_TEMP235@2))))) GeneratedUnifiedExit_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$Return_correct  (=> (! (and %lbl%+741609 true) :lblpos +741609) AA_INSTR_EQ_BODY$2_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$block23_correct  (=> (! (and %lbl%+741608 true) :lblpos +741608) inline$fixed.java.lang.StringBuilder$toString$$0$Return_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$anon0$1_correct  (=> (! (and %lbl%+741607 true) :lblpos +741607) inline$fixed.java.lang.StringBuilder$toString$$0$block23_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct  (=> (! (and %lbl%+741606 true) :lblpos +741606) inline$fixed.java.lang.StringBuilder$toString$$0$anon0$1_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block26_correct  (=> (! (and %lbl%+741603 true) :lblpos +741603) (=> (and (and (= fixed.$heap@21 fixed.$heap@14) (= fixed.$arrSizeHeap@3 fixed.$arrSizeHeap@2)) (and (= fixed.$objIndex@18 fixed.$objIndex@11) (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 fixed.$null))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block25_correct  (=> (! (and %lbl%+741602 true) :lblpos +741602) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block26_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon18_Then_correct  (=> (! (and %lbl%+741601 true) :lblpos +741601) (=> (>= 0 inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i1@2) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block25_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon20_Else_correct  (=> (! (and %lbl%+741598 true) :lblpos +741598) (=> (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@2 inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2))) (>= 0 0))) (= fixed.$heap@20 (MapType0Store (MapType0Store fixed.$heap@14 call3formal@$obj@0@@4 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@4 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (=> (and (and (and (= call3formal@$obj@0@@4 (fixed.$intToRef fixed.$objIndex@11)) (= fixed.$objIndex@17 (+ fixed.$objIndex@11 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@14 call3formal@$obj@0@@4 fixed.$alloc))) (not (= call3formal@$obj@0@@4 fixed.$null)))) (and (and (= fixed.$heap@21 fixed.$heap@20) (= fixed.$arrSizeHeap@3 fixed.$arrSizeHeap@2)) (and (= fixed.$objIndex@18 fixed.$objIndex@17) (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 call3formal@$obj@0@@4)))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon12_correct  (=> (! (and %lbl%+741597 true) :lblpos +741597) (=> (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$c2@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1) (int_2_U 0)))) (and inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon20_Then_correct inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon20_Else_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon19_Then_correct  (=> (! (and %lbl%+741596 true) :lblpos +741596) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@2 inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1))) (>= 0 0)) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon12_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon19_Else_correct  (=> (! (and %lbl%+741595 true) :lblpos +741595) (=> (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@2 inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1))) (>= 0 0))) (= fixed.$heap@19 (MapType0Store (MapType0Store fixed.$heap@14 call3formal@$obj@0@@3 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@3 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (=> (and (and (and (= call3formal@$obj@0@@3 (fixed.$intToRef fixed.$objIndex@11)) (= fixed.$objIndex@16 (+ fixed.$objIndex@11 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@14 call3formal@$obj@0@@3 fixed.$alloc))) (not (= call3formal@$obj@0@@3 fixed.$null)))) (and (and (= fixed.$heap@21 fixed.$heap@19) (= fixed.$arrSizeHeap@3 fixed.$arrSizeHeap@2)) (and (= fixed.$objIndex@18 fixed.$objIndex@16) (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 call3formal@$obj@0@@3)))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon9_correct  (=> (! (and %lbl%+741594 true) :lblpos +741594) (=> (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2 (MapType0Select fixed.$heap@14 call3formal@$obj@0@@0 fixed.char$lp$$rp$$java.lang.String$chars348)) (and inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon19_Then_correct inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon19_Else_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon18_Else_correct  (=> (! (and %lbl%+741593 true) :lblpos +741593) (=> (> inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i1@2 0) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon9_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon6_correct  (=> (! (and %lbl%+741592 true) :lblpos +741592) (=> (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i1@2 (U_2_int (MapType1Select fixed.$arrSizeHeap@2 inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1))) (and inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon18_Then_correct inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon18_Else_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon17_Then_correct  (=> (! (and %lbl%+741591 true) :lblpos +741591) (=> (not (= inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null)) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon6_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon17_Else_correct  (=> (! (and %lbl%+741590 true) :lblpos +741590) (=> (and (= inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null) (= fixed.$heap@18 (MapType0Store (MapType0Store fixed.$heap@14 call3formal@$obj@0@@2 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@2 fixed.$type fixed.java.lang.NullPointerException))) (=> (and (and (and (= call3formal@$obj@0@@2 (fixed.$intToRef fixed.$objIndex@11)) (= fixed.$objIndex@15 (+ fixed.$objIndex@11 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@14 call3formal@$obj@0@@2 fixed.$alloc))) (not (= call3formal@$obj@0@@2 fixed.$null)))) (and (and (= fixed.$heap@21 fixed.$heap@18) (= fixed.$arrSizeHeap@3 fixed.$arrSizeHeap@2)) (and (= fixed.$objIndex@18 fixed.$objIndex@15) (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 call3formal@$obj@0@@2)))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block24_last_correct  (=> (! (and %lbl%+741605 true) :lblpos +741605) (and inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon17_Then_correct inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon17_Else_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block24$1_correct  (=> (! (and %lbl%+741589 true) :lblpos +741589) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block24_last_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$Return_correct  (=> (! (and %lbl%+741588 true) :lblpos +741588) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block24$1_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon20_Else_correct  (=> (! (and %lbl%+741578 true) :lblpos +741578) (=> (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@2 inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$r3@2))) (>= 0 0))) (= fixed.$heap@17 (MapType0Store (MapType0Store fixed.$heap@14 call3formal@$obj@0@@7 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@7 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (=> (and (and (= call3formal@$obj@0@@7 (fixed.$intToRef fixed.$objIndex@11)) (= fixed.$objIndex@14 (+ fixed.$objIndex@11 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@14 call3formal@$obj@0@@7 fixed.$alloc))) (not (= call3formal@$obj@0@@7 fixed.$null)))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$Return_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon12_correct  (=> (! (and %lbl%+741577 true) :lblpos +741577) (=> (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$c2@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1) (int_2_U 0)))) (and inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon20_Then_correct inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon20_Else_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon19_Then_correct  (=> (! (and %lbl%+741579 true) :lblpos +741579) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@2 inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1))) (>= 0 0)) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon12_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon19_Else_correct  (=> (! (and %lbl%+741581 true) :lblpos +741581) (=> (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@2 inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1))) (>= 0 0))) (= fixed.$heap@16 (MapType0Store (MapType0Store fixed.$heap@14 call3formal@$obj@0@@6 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@6 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (=> (and (and (= call3formal@$obj@0@@6 (fixed.$intToRef fixed.$objIndex@11)) (= fixed.$objIndex@13 (+ fixed.$objIndex@11 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@14 call3formal@$obj@0@@6 fixed.$alloc))) (not (= call3formal@$obj@0@@6 fixed.$null)))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$Return_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon9_correct  (=> (! (and %lbl%+741580 true) :lblpos +741580) (=> (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$r3@2 (MapType0Select fixed.$heap@14 call3formal@$obj@0@@0 fixed.char$lp$$rp$$java.lang.String$chars348)) (and inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon19_Then_correct inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon19_Else_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon18_Else_correct  (=> (! (and %lbl%+741582 true) :lblpos +741582) (=> (> inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$i1@2 0) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon9_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon18_Then_correct  (=> (! (and %lbl%+741584 true) :lblpos +741584) (=> (>= 0 inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$i1@2) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$Return_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon6_correct  (=> (! (and %lbl%+741583 true) :lblpos +741583) (=> (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$out_$i1@2 (U_2_int (MapType1Select fixed.$arrSizeHeap@2 inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1))) (and inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon18_Then_correct inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon18_Else_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon17_Then_correct  (=> (! (and %lbl%+741585 true) :lblpos +741585) (=> (not (= inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null)) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon6_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon17_Else_correct  (=> (! (and %lbl%+741574 true) :lblpos +741574) (=> (and (= inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null) (= fixed.$heap@15 (MapType0Store (MapType0Store fixed.$heap@14 call3formal@$obj@0@@5 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@5 fixed.$type fixed.java.lang.NullPointerException))) (=> (and (and (= call3formal@$obj@0@@5 (fixed.$intToRef fixed.$objIndex@11)) (= fixed.$objIndex@12 (+ fixed.$objIndex@11 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@14 call3formal@$obj@0@@5 fixed.$alloc))) (not (= call3formal@$obj@0@@5 fixed.$null)))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$Return_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$block24_correct  (=> (! (and %lbl%+741573 true) :lblpos +741573) (and inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon17_Then_correct inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$anon17_Else_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$entry_correct  (=> (! (and %lbl%+741572 true) :lblpos +741572) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$block24_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$Entry_correct  (=> (! (and %lbl%+741571 true) :lblpos +741571) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$entry_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block24_correct  (=> (! (and %lbl%+741570 true) :lblpos +741570) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block24$0$Entry_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon3_correct  (=> (! (and %lbl%+741569 true) :lblpos +741569) (=> (and (and (and (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i0@2 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1))) (= fixed.$heap@13 (MapType0Store (MapType0Store fixed.$heap@11 call3formal@$obj@0@@8 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@8 fixed.$type fixed.$intArrayType))) (and (= call3formal@$obj@0@@8 (fixed.$intToRef fixed.$objIndex@9)) (= fixed.$objIndex@11 (+ fixed.$objIndex@9 1)))) (and (and (not (U_2_bool (MapType0Select fixed.$heap@11 call3formal@$obj@0@@8 fixed.$alloc))) (not (= call3formal@$obj@0@@8 fixed.$null))) (and (= fixed.$arrSizeHeap@2 (MapType1Store fixed.$arrSizeHeap call3formal@$obj@0@@8 (int_2_U inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i0@2))) (= fixed.$heap@14 (MapType0Store fixed.$heap@13 call3formal@$obj@0@@0 fixed.char$lp$$rp$$java.lang.String$chars348 call3formal@$obj@0@@8))))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block24_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon16_Then_correct  (=> (! (and %lbl%+741568 true) :lblpos +741568) (=> (not (= inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null)) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon3_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon16_Else_correct  (=> (! (and %lbl%+741567 true) :lblpos +741567) (=> (and (= inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null) (= fixed.$heap@12 (MapType0Store (MapType0Store fixed.$heap@11 call3formal@$obj@0@@1 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@1 fixed.$type fixed.java.lang.NullPointerException))) (=> (and (and (and (= call3formal@$obj@0@@1 (fixed.$intToRef fixed.$objIndex@9)) (= fixed.$objIndex@10 (+ fixed.$objIndex@9 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@11 call3formal@$obj@0@@1 fixed.$alloc))) (not (= call3formal@$obj@0@@1 fixed.$null)))) (and (and (= fixed.$heap@21 fixed.$heap@12) (= fixed.$arrSizeHeap@3 fixed.$arrSizeHeap)) (and (= fixed.$objIndex@18 fixed.$objIndex@10) (= inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 call3formal@$obj@0@@1)))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0$1_correct  (=> (! (and %lbl%+741566 true) :lblpos +741566) (and inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon16_Then_correct inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon16_Else_correct))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$Return_correct  (=> (! (and %lbl%+741565 true) :lblpos +741565) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0$1_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$anon0_correct  (=> (! (and %lbl%+741564 true) :lblpos +741564) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$Return_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$Entry_correct  (=> (! (and %lbl%+741563 true) :lblpos +741563) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$anon0_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0_correct  (=> (! (and %lbl%+741562 true) :lblpos +741562) (=> (forall ((T T@U) ) (!  (=> (= (type T) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@11 fixed.$null fixed.$type) T))
 :qid |RSPROCja.17936:20|
 :skolemid |2361|
 :no-pattern (type T)
 :no-pattern (U_2_int T)
 :no-pattern (U_2_bool T)
)) (=> (and (and (forall ((_r T@U) ) (!  (=> (= (type _r) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r)) 0))
 :qid |RSPROCja.17937:20|
 :skolemid |2362|
 :no-pattern (type _r)
 :no-pattern (U_2_int _r)
 :no-pattern (U_2_bool _r)
)) (forall ((_r@@0 T@U) ) (!  (=> (= (type _r@@0) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@0)) 0))
 :qid |RSPROCja.17938:20|
 :skolemid |2363|
 :no-pattern (type _r@@0)
 :no-pattern (U_2_int _r@@0)
 :no-pattern (U_2_bool _r@@0)
))) (and (UOrdering2 (MapType0Select fixed.$heap@11 call3formal@$obj@0@@0 fixed.$type) fixed.java.lang.String) (not (= call3formal@$obj@0@@0 fixed.$null)))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$Entry_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Entry_correct  (=> (! (and %lbl%+741561 true) :lblpos +741561) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0_correct)))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$anon0_correct  (=> (! (and %lbl%+741560 true) :lblpos +741560) (=> (and (and (forall ((T@@0 T@U) ) (!  (=> (= (type T@@0) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@0))
 :qid |RSPROCja.17906:20|
 :skolemid |2358|
 :no-pattern (type T@@0)
 :no-pattern (U_2_int T@@0)
 :no-pattern (U_2_bool T@@0)
)) (forall ((_r@@1 T@U) ) (!  (=> (= (type _r@@1) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@1)) 0))
 :qid |RSPROCja.17907:20|
 :skolemid |2359|
 :no-pattern (type _r@@1)
 :no-pattern (U_2_int _r@@1)
 :no-pattern (U_2_bool _r@@1)
))) (and (forall ((_r@@2 T@U) ) (!  (=> (= (type _r@@2) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@2)) 0))
 :qid |RSPROCja.17908:20|
 :skolemid |2360|
 :no-pattern (type _r@@2)
 :no-pattern (U_2_int _r@@2)
 :no-pattern (U_2_bool _r@@2)
)) (UOrdering2 (MapType0Select fixed.$heap $this fixed.$type) fixed.java.lang.StringBuilder))) (=> (and (and (and (not (= $this fixed.$null)) (UOrdering2 (MapType0Select fixed.$heap inline$fixed.java.lang.StringBuilder$toString$$0$$return@0 fixed.$type) fixed.java.lang.String)) (and (= fixed.$heap@11 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@0 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@0 fixed.$type fixed.java.lang.String)) (= call3formal@$obj@0@@0 (fixed.$intToRef fixed.$objIndex)))) (and (and (= fixed.$objIndex@9 (+ fixed.$objIndex 1)) (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@0 fixed.$alloc)))) (and (not (= call3formal@$obj@0@@0 fixed.$null)) (= inline$fixed.java.lang.StringBuilder$toString$$0$$r2@1 (MapType0Select fixed.$heap@11 $this fixed.char$lp$$rp$$java.lang.StringBuilder$chars347))))) inline$fixed.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Entry_correct)))))
(let ((inline$fixed.java.lang.StringBuilder$toString$$0$Entry_correct  (=> (! (and %lbl%+741559 true) :lblpos +741559) inline$fixed.java.lang.StringBuilder$toString$$0$anon0_correct)))
(let ((AA_INSTR_EQ_BODY$1_correct  (=> (! (and %lbl%+741558 true) :lblpos +741558) inline$fixed.java.lang.StringBuilder$toString$$0$Entry_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$Return_correct  (=> (! (and %lbl%+741557 true) :lblpos +741557) AA_INSTR_EQ_BODY$1_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$block24_correct  (=> (! (and %lbl%+741556 true) :lblpos +741556) inline$unsafe.java.lang.StringBuilder$toString$$0$Return_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$anon0$1_correct  (=> (! (and %lbl%+741555 true) :lblpos +741555) inline$unsafe.java.lang.StringBuilder$toString$$0$block24_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct  (=> (! (and %lbl%+741554 true) :lblpos +741554) inline$unsafe.java.lang.StringBuilder$toString$$0$anon0$1_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block27_correct  (=> (! (and %lbl%+741551 true) :lblpos +741551) (=> (and (and (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 fixed.$null) (= fixed.$heap@10 fixed.$heap@3)) (and (= fixed.$arrSizeHeap@1 fixed.$arrSizeHeap@0) (= fixed.$intArrHeap@1 fixed.$intArrHeap))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block26_correct  (=> (! (and %lbl%+741550 true) :lblpos +741550) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block27_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon18_Then_correct  (=> (! (and %lbl%+741549 true) :lblpos +741549) (=> (>= 0 inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i1@2) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block26_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon20_Else_correct  (=> (! (and %lbl%+741546 true) :lblpos +741546) (=> (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@0 inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2))) (>= 0 0))) (= fixed.$heap@9 (MapType0Store (MapType0Store fixed.$heap@3 call3formal@$obj@0@@12 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@12 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (=> (and (and (and (= call3formal@$obj@0@@12 (fixed.$intToRef fixed.$objIndex@2)) (= fixed.$objIndex@8 (+ fixed.$objIndex@2 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@3 call3formal@$obj@0@@12 fixed.$alloc))) (not (= call3formal@$obj@0@@12 fixed.$null)))) (and (and (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 call3formal@$obj@0@@12) (= fixed.$heap@10 fixed.$heap@9)) (and (= fixed.$arrSizeHeap@1 fixed.$arrSizeHeap@0) (= fixed.$intArrHeap@1 fixed.$intArrHeap)))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon12_correct  (=> (! (and %lbl%+741545 true) :lblpos +741545) (=> (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$c2@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1) (int_2_U 0)))) (and inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon20_Then_correct inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon20_Else_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon19_Then_correct  (=> (! (and %lbl%+741544 true) :lblpos +741544) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@0 inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1))) (>= 0 0)) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon12_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon19_Else_correct  (=> (! (and %lbl%+741543 true) :lblpos +741543) (=> (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@0 inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1))) (>= 0 0))) (= fixed.$heap@8 (MapType0Store (MapType0Store fixed.$heap@3 call3formal@$obj@0@@11 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@11 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (=> (and (and (and (= call3formal@$obj@0@@11 (fixed.$intToRef fixed.$objIndex@2)) (= fixed.$objIndex@7 (+ fixed.$objIndex@2 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@3 call3formal@$obj@0@@11 fixed.$alloc))) (not (= call3formal@$obj@0@@11 fixed.$null)))) (and (and (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 call3formal@$obj@0@@11) (= fixed.$heap@10 fixed.$heap@8)) (and (= fixed.$arrSizeHeap@1 fixed.$arrSizeHeap@0) (= fixed.$intArrHeap@1 fixed.$intArrHeap)))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon9_correct  (=> (! (and %lbl%+741542 true) :lblpos +741542) (=> (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$r3@2 (MapType0Select fixed.$heap@3 call3formal@$obj@0 fixed.char$lp$$rp$$java.lang.String$chars348)) (and inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon19_Then_correct inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon19_Else_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon18_Else_correct  (=> (! (and %lbl%+741541 true) :lblpos +741541) (=> (> inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i1@2 0) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon9_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon6_correct  (=> (! (and %lbl%+741540 true) :lblpos +741540) (=> (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i1@2 (U_2_int (MapType1Select fixed.$arrSizeHeap@0 inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1))) (and inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon18_Then_correct inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon18_Else_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon17_Then_correct  (=> (! (and %lbl%+741539 true) :lblpos +741539) (=> (not (= inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null)) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon6_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon17_Else_correct  (=> (! (and %lbl%+741538 true) :lblpos +741538) (=> (and (= inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null) (= fixed.$heap@7 (MapType0Store (MapType0Store fixed.$heap@3 call3formal@$obj@0@@10 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@10 fixed.$type fixed.java.lang.NullPointerException))) (=> (and (and (and (= call3formal@$obj@0@@10 (fixed.$intToRef fixed.$objIndex@2)) (= fixed.$objIndex@6 (+ fixed.$objIndex@2 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@3 call3formal@$obj@0@@10 fixed.$alloc))) (not (= call3formal@$obj@0@@10 fixed.$null)))) (and (and (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 call3formal@$obj@0@@10) (= fixed.$heap@10 fixed.$heap@7)) (and (= fixed.$arrSizeHeap@1 fixed.$arrSizeHeap@0) (= fixed.$intArrHeap@1 fixed.$intArrHeap)))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block25_last_correct  (=> (! (and %lbl%+741553 true) :lblpos +741553) (and inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon17_Then_correct inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon17_Else_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block25$1_correct  (=> (! (and %lbl%+741537 true) :lblpos +741537) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block25_last_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$Return_correct  (=> (! (and %lbl%+741536 true) :lblpos +741536) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block25$1_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon20_Else_correct  (=> (! (and %lbl%+741526 true) :lblpos +741526) (=> (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@0 inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$r3@2))) (>= 0 0))) (= fixed.$heap@6 (MapType0Store (MapType0Store fixed.$heap@3 call3formal@$obj@0@@15 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@15 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (=> (and (and (= call3formal@$obj@0@@15 (fixed.$intToRef fixed.$objIndex@2)) (= fixed.$objIndex@5 (+ fixed.$objIndex@2 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@3 call3formal@$obj@0@@15 fixed.$alloc))) (not (= call3formal@$obj@0@@15 fixed.$null)))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$Return_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon12_correct  (=> (! (and %lbl%+741525 true) :lblpos +741525) (=> (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$c2@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1) (int_2_U 0)))) (and inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon20_Then_correct inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon20_Else_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon19_Then_correct  (=> (! (and %lbl%+741527 true) :lblpos +741527) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@0 inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1))) (>= 0 0)) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon12_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon19_Else_correct  (=> (! (and %lbl%+741529 true) :lblpos +741529) (=> (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap@0 inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1))) (>= 0 0))) (= fixed.$heap@5 (MapType0Store (MapType0Store fixed.$heap@3 call3formal@$obj@0@@14 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@14 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (=> (and (and (= call3formal@$obj@0@@14 (fixed.$intToRef fixed.$objIndex@2)) (= fixed.$objIndex@4 (+ fixed.$objIndex@2 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@3 call3formal@$obj@0@@14 fixed.$alloc))) (not (= call3formal@$obj@0@@14 fixed.$null)))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$Return_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon9_correct  (=> (! (and %lbl%+741528 true) :lblpos +741528) (=> (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$r3@2 (MapType0Select fixed.$heap@3 call3formal@$obj@0 fixed.char$lp$$rp$$java.lang.String$chars348)) (and inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon19_Then_correct inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon19_Else_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon18_Else_correct  (=> (! (and %lbl%+741530 true) :lblpos +741530) (=> (> inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$i1@2 0) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon9_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon18_Then_correct  (=> (! (and %lbl%+741532 true) :lblpos +741532) (=> (>= 0 inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$i1@2) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$Return_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon6_correct  (=> (! (and %lbl%+741531 true) :lblpos +741531) (=> (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$out_$i1@2 (U_2_int (MapType1Select fixed.$arrSizeHeap@0 inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1))) (and inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon18_Then_correct inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon18_Else_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon17_Then_correct  (=> (! (and %lbl%+741533 true) :lblpos +741533) (=> (not (= inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null)) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon6_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon17_Else_correct  (=> (! (and %lbl%+741522 true) :lblpos +741522) (=> (and (= inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null) (= fixed.$heap@4 (MapType0Store (MapType0Store fixed.$heap@3 call3formal@$obj@0@@13 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@13 fixed.$type fixed.java.lang.NullPointerException))) (=> (and (and (= call3formal@$obj@0@@13 (fixed.$intToRef fixed.$objIndex@2)) (= fixed.$objIndex@3 (+ fixed.$objIndex@2 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@3 call3formal@$obj@0@@13 fixed.$alloc))) (not (= call3formal@$obj@0@@13 fixed.$null)))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$Return_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$block25_correct  (=> (! (and %lbl%+741521 true) :lblpos +741521) (and inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon17_Then_correct inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$anon17_Else_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$entry_correct  (=> (! (and %lbl%+741520 true) :lblpos +741520) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$block25_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$Entry_correct  (=> (! (and %lbl%+741519 true) :lblpos +741519) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$entry_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block25_correct  (=> (! (and %lbl%+741518 true) :lblpos +741518) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$_loop_block25$0$Entry_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon3_correct  (=> (! (and %lbl%+741517 true) :lblpos +741517) (=> (and (and (and (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i0@2 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1))) (= fixed.$heap@2 (MapType0Store (MapType0Store fixed.$heap@0 call3formal@$obj@0@@16 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@16 fixed.$type fixed.$intArrayType))) (and (= call3formal@$obj@0@@16 (fixed.$intToRef fixed.$objIndex@0)) (= fixed.$objIndex@2 (+ fixed.$objIndex@0 1)))) (and (and (not (U_2_bool (MapType0Select fixed.$heap@0 call3formal@$obj@0@@16 fixed.$alloc))) (not (= call3formal@$obj@0@@16 fixed.$null))) (and (= fixed.$arrSizeHeap@0 (MapType1Store fixed.$arrSizeHeap call3formal@$obj@0@@16 (int_2_U inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$i0@2))) (= fixed.$heap@3 (MapType0Store fixed.$heap@2 call3formal@$obj@0 fixed.char$lp$$rp$$java.lang.String$chars348 call3formal@$obj@0@@16))))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$block25_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon16_Then_correct  (=> (! (and %lbl%+741516 true) :lblpos +741516) (=> (not (= inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null)) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon3_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon16_Else_correct  (=> (! (and %lbl%+741515 true) :lblpos +741515) (=> (and (= inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1 fixed.$null) (= fixed.$heap@1 (MapType0Store (MapType0Store fixed.$heap@0 call3formal@$obj@0@@9 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@9 fixed.$type fixed.java.lang.NullPointerException))) (=> (and (and (and (= call3formal@$obj@0@@9 (fixed.$intToRef fixed.$objIndex@0)) (= fixed.$objIndex@1 (+ fixed.$objIndex@0 1))) (and (not (U_2_bool (MapType0Select fixed.$heap@0 call3formal@$obj@0@@9 fixed.$alloc))) (not (= call3formal@$obj@0@@9 fixed.$null)))) (and (and (= inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$$exception@2 call3formal@$obj@0@@9) (= fixed.$heap@10 fixed.$heap@1)) (and (= fixed.$arrSizeHeap@1 fixed.$arrSizeHeap) (= fixed.$intArrHeap@1 fixed.$intArrHeap)))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Return_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0$1_correct  (=> (! (and %lbl%+741514 true) :lblpos +741514) (and inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon16_Then_correct inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon16_Else_correct))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$Return_correct  (=> (! (and %lbl%+741513 true) :lblpos +741513) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0$1_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$anon0_correct  (=> (! (and %lbl%+741512 true) :lblpos +741512) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$Return_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$Entry_correct  (=> (! (and %lbl%+741511 true) :lblpos +741511) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$anon0_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0_correct  (=> (! (and %lbl%+741510 true) :lblpos +741510) (=> (forall ((T@@1 T@U) ) (!  (=> (= (type T@@1) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@0 fixed.$null fixed.$type) T@@1))
 :qid |RSPROCja.17565:20|
 :skolemid |2355|
 :no-pattern (type T@@1)
 :no-pattern (U_2_int T@@1)
 :no-pattern (U_2_bool T@@1)
)) (=> (and (and (forall ((_r@@3 T@U) ) (!  (=> (= (type _r@@3) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@3)) 0))
 :qid |RSPROCja.17566:20|
 :skolemid |2356|
 :no-pattern (type _r@@3)
 :no-pattern (U_2_int _r@@3)
 :no-pattern (U_2_bool _r@@3)
)) (forall ((_r@@4 T@U) ) (!  (=> (= (type _r@@4) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@4)) 0))
 :qid |RSPROCja.17567:20|
 :skolemid |2357|
 :no-pattern (type _r@@4)
 :no-pattern (U_2_int _r@@4)
 :no-pattern (U_2_bool _r@@4)
))) (and (UOrdering2 (MapType0Select fixed.$heap@0 call3formal@$obj@0 fixed.$type) fixed.java.lang.String) (not (= call3formal@$obj@0 fixed.$null)))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.Object$$la$init$ra$$$0$Entry_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Entry_correct  (=> (! (and %lbl%+741509 true) :lblpos +741509) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$anon0_correct)))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$anon0_correct  (=> (! (and %lbl%+741508 true) :lblpos +741508) (=> (and (and (forall ((T@@2 T@U) ) (!  (=> (= (type T@@2) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@2))
 :qid |RSPROCja.17535:20|
 :skolemid |2352|
 :no-pattern (type T@@2)
 :no-pattern (U_2_int T@@2)
 :no-pattern (U_2_bool T@@2)
)) (forall ((_r@@5 T@U) ) (!  (=> (= (type _r@@5) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@5)) 0))
 :qid |RSPROCja.17536:20|
 :skolemid |2353|
 :no-pattern (type _r@@5)
 :no-pattern (U_2_int _r@@5)
 :no-pattern (U_2_bool _r@@5)
))) (and (forall ((_r@@6 T@U) ) (!  (=> (= (type _r@@6) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@6)) 0))
 :qid |RSPROCja.17537:20|
 :skolemid |2354|
 :no-pattern (type _r@@6)
 :no-pattern (U_2_int _r@@6)
 :no-pattern (U_2_bool _r@@6)
)) (UOrdering2 (MapType0Select fixed.$heap $this fixed.$type) fixed.java.lang.StringBuilder))) (=> (and (and (and (not (= $this fixed.$null)) (UOrdering2 (MapType0Select fixed.$heap inline$unsafe.java.lang.StringBuilder$toString$$0$$return@0 fixed.$type) fixed.java.lang.String)) (and (= fixed.$heap@0 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0 fixed.$alloc (bool_2_U true)) call3formal@$obj@0 fixed.$type fixed.java.lang.String)) (= call3formal@$obj@0 (fixed.$intToRef fixed.$objIndex)))) (and (and (= fixed.$objIndex@0 (+ fixed.$objIndex 1)) (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0 fixed.$alloc)))) (and (not (= call3formal@$obj@0 fixed.$null)) (= inline$unsafe.java.lang.StringBuilder$toString$$0$$r2@1 (MapType0Select fixed.$heap@0 $this fixed.char$lp$$rp$$java.lang.StringBuilder$chars347))))) inline$unsafe.java.lang.StringBuilder$toString$$0$inline$java.lang.String$$la$init$ra$$char$lp$$rp$$0$Entry_correct)))))
(let ((inline$unsafe.java.lang.StringBuilder$toString$$0$Entry_correct  (=> (! (and %lbl%+741507 true) :lblpos +741507) inline$unsafe.java.lang.StringBuilder$toString$$0$anon0_correct)))
(let ((AA_INSTR_EQ_BODY_correct  (=> (! (and %lbl%+741506 true) :lblpos +741506) inline$unsafe.java.lang.StringBuilder$toString$$0$Entry_correct)))
(let ((q@0_correct  (=> (! (and %lbl%+751624 true) :lblpos +751624) AA_INSTR_EQ_BODY_correct)))
(let ((PreconditionGeneratedEntry_correct  (=> (! (and %lbl%+751640 true) :lblpos +751640) q@0_correct)))
PreconditionGeneratedEntry_correct))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
