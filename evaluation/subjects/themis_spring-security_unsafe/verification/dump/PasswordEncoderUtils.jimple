class PasswordEncoderUtils extends java.lang.Object
{

    void <init>()
    {
        PasswordEncoderUtils r0;

        r0 := @this: PasswordEncoderUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static boolean equals_unsafe(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        byte[] r2, r3;
        int i0, i1, $i7, $i8, i10;
        boolean z0, $z1, z2, z3, z4, z5, $z6;
        long $l2, $l3;
        java.lang.Boolean $r4, $r5, $r7, $r9, $r10, $r11, $r13, $r14, $r15, $r17;
        java.lang.Object $r6, $r8, $r12, $r16;
        byte $b4, $b5, $b6, b9;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        z2 = 0;

        z3 = 0;

        r2 = staticinvoke <PasswordEncoderUtils: byte[] bytesUtf8(java.lang.String)>(r0);

        r3 = staticinvoke <PasswordEncoderUtils: byte[] bytesUtf8(java.lang.String)>(r1);

        if r2 != null goto label1;

        $i7 = -1;

        goto label2;

     label1:
        $i7 = lengthof r2;

     label2:
        i0 = $i7;

        if r3 != null goto label3;

        $i8 = -1;

        goto label4;

     label3:
        $i8 = lengthof r3;

     label4:
        i1 = $i8;

        $l3 = (long) i0;

        $l2 = (long) i1;

        z0 = staticinvoke <sg.edu.nus.comp.tsunami.safe.Safe: boolean neq(long,long)>($l3, $l2);

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r6 = staticinvoke <sg.edu.nus.comp.tsunami.safe.Safe: java.lang.Object cond(boolean,java.lang.Object,java.lang.Object)>(z3, $r4, $r5);

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z2);

        $r8 = staticinvoke <sg.edu.nus.comp.tsunami.safe.Safe: java.lang.Object cond(boolean,java.lang.Object,java.lang.Object)>(z0, $r6, $r7);

        $r9 = (java.lang.Boolean) $r8;

        z4 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z3);

        $r12 = staticinvoke <sg.edu.nus.comp.tsunami.safe.Safe: java.lang.Object cond(boolean,java.lang.Object,java.lang.Object)>(z0, $r10, $r11);

        $r13 = (java.lang.Boolean) $r12;

        z5 = virtualinvoke $r13.<java.lang.Boolean: boolean booleanValue()>();

        b9 = 0;

        i10 = 0;

     label5:
        if i10 >= i0 goto label6;

        $b5 = r2[i10];

        $b4 = r3[i10];

        $b6 = $b5 ^ $b4;

        b9 = b9 | $b6;

        i10 = i10 + 1;

        goto label5;

     label6:
        $r14 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z4);

        if b9 != 0 goto label7;

        $z6 = 1;

        goto label8;

     label7:
        $z6 = 0;

     label8:
        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z6);

        $r16 = staticinvoke <sg.edu.nus.comp.tsunami.safe.Safe: java.lang.Object cond(boolean,java.lang.Object,java.lang.Object)>(z5, $r14, $r15);

        $r17 = (java.lang.Boolean) $r16;

        $z1 = virtualinvoke $r17.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;
    }

    private static byte[] bytesUtf8(java.lang.String)
    {
        java.lang.String r0;
        byte[] $r2;
        java.io.UnsupportedEncodingException $r3;
        java.io.PrintStream $r4;

        r0 := @parameter0: java.lang.String;

     label1:
        if r0 != null goto label3;

     label2:
        return null;

     label3:
        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label4:
        return $r2;

     label5:
        $r3 := @caughtexception;

        $r4 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>("Error in UTF-8...");

        return null;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label5;
        catch java.io.UnsupportedEncodingException from label3 to label4 with label5;
    }
}
