#globals
globals: (unsafe.$heap, fixed.$heap);(unsafe.$intArrayType, fixed.$intArrayType);(unsafe.$charArrayType, fixed.$charArrayType);(unsafe.$boolArrayType, fixed.$boolArrayType);(unsafe.$byteArrayType, fixed.$byteArrayType);(unsafe.$longArrayType, fixed.$longArrayType);(unsafe.$arrSizeHeap, fixed.$arrSizeHeap);(unsafe.$stringSizeHeap, fixed.$stringSizeHeap);(unsafe.$boolArrHeap, fixed.$boolArrHeap);(unsafe.$refArrHeap, fixed.$refArrHeap);(unsafe.$realArrHeap, fixed.$realArrHeap);(unsafe.$intArrHeap, fixed.$intArrHeap);(unsafe.$objIndex, fixed.$objIndex);(unsafe.boolean$java.lang.Boolean$value0, fixed.boolean$java.lang.Boolean$value0);(unsafe.int$java.lang.Integer$value0, fixed.int$java.lang.Integer$value0);
#types
types: (unsafe.ref, fixed.ref);(unsafe.javaType, fixed.javaType);(unsafe.Field, fixed.Field);(unsafe.$heap_type, fixed.$heap_type);(unsafe.boolArrHeap_type, fixed.boolArrHeap_type);(unsafe.refArrHeap_type, fixed.refArrHeap_type);(unsafe.realArrHeap_type, fixed.realArrHeap_type);(unsafe.intArrHeap_type, fixed.intArrHeap_type);
#constants
constants: (unsafe.$type, fixed.$type);(unsafe.$alloc, fixed.$alloc);(unsafe.$null, fixed.$null);(unsafe.java.lang.Object, fixed.java.lang.Object);(unsafe.java.lang.Boolean, fixed.java.lang.Boolean);(unsafe.java.io.Serializable, fixed.java.io.Serializable);(unsafe.java.lang.Comparable, fixed.java.lang.Comparable);(unsafe.java.lang.Integer, fixed.java.lang.Integer);(unsafe.java.lang.Throwable, fixed.java.lang.Throwable);(unsafe.java.lang.Exception, fixed.java.lang.Exception);(unsafe.java.lang.RuntimeException, fixed.java.lang.RuntimeException);(unsafe.java.lang.NullPointerException, fixed.java.lang.NullPointerException);(unsafe.java.lang.ClassCastException, fixed.java.lang.ClassCastException);(unsafe.AesEaxJce, fixed.AesEaxJce);(unsafe.java.lang.IndexOutOfBoundsException, fixed.java.lang.IndexOutOfBoundsException);(unsafe.java.lang.ArrayIndexOutOfBoundsException, fixed.java.lang.ArrayIndexOutOfBoundsException);
#functions
function: (unsafe.$arrayType, fixed.$arrayType) / (t, t);(out_ret, out_ret);
function: (unsafe.$intToReal, fixed.$intToReal) / (x, x);(out_ret, out_ret);
function: (unsafe.$intToBool, fixed.$intToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$refToBool, fixed.$refToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$boolToInt, fixed.$boolToInt) / (x, x);(out_ret, out_ret);
function: (unsafe.$cmpBool, fixed.$cmpBool) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpRef, fixed.$cmpRef) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpReal, fixed.$cmpReal) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpInt, fixed.$cmpInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitOr, fixed.$bitOr) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitAnd, fixed.$bitAnd) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$xorInt, fixed.$xorInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shlInt, fixed.$shlInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$ushrInt, fixed.$ushrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shrInt, fixed.$shrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$mulInt, fixed.$mulInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$divInt, fixed.$divInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$modInt, fixed.$modInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$intToRef, fixed.$intToRef) / (id, id);(out_ret, out_ret);

#procedures
procedure: (unsafe.$new, fixed.$new) / (obj_type, obj_type);($obj, $obj);
procedure: (unsafe.java.lang.Object$java.lang.Object$clone$43, fixed.java.lang.Object$java.lang.Object$clone$43) / ($this, $this);($other, $other);
procedure: (unsafe.int$java.lang.String$compareTo$87, fixed.int$java.lang.String$compareTo$87) / ($this, $this);($other, $other);($return, $return);
procedure: (unsafe.java.lang.Boolean$$la$init$ra$$boolean, fixed.java.lang.Boolean$$la$init$ra$$boolean) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.Object$$la$init$ra$$, fixed.java.lang.Object$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$valueOf$boolean, fixed.java.lang.Boolean$valueOf$boolean) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$booleanValue$, fixed.java.lang.Boolean$booleanValue$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Integer$$la$init$ra$$int, fixed.java.lang.Integer$$la$init$ra$$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.Integer$valueOf$int, fixed.java.lang.Integer$valueOf$int) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Integer$intValue$, fixed.java.lang.Integer$intValue$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Integer$compareTo$java.lang.Integer, fixed.java.lang.Integer$compareTo$java.lang.Integer) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Integer$compareTo$java.lang.Object, fixed.java.lang.Integer$compareTo$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.AesEaxJce$$la$init$ra$$, fixed.AesEaxJce$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.AesEaxJce$multiplyByX_unsafe$byte$lp$$rp$, fixed.AesEaxJce$multiplyByX_unsafe$byte$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.AesEaxJce$multiplyByX_exp_unsafe$byte$lp$$rp$_int, fixed.AesEaxJce$multiplyByX_exp_unsafe$byte$lp$$rp$_int) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.AesEaxJce$multiplyByX_unsafe$byte$lp$$rp$_loop_block12, fixed.AesEaxJce$multiplyByX_unsafe$byte$lp$$rp$_loop_block12) / (in_$return, in_$return);(in_$exception, in_$exception);(in_$fakelocal_3, in_$fakelocal_3);(in_$fakelocal_2, in_$fakelocal_2);(in_$s9, in_$s9);(in_$fakelocal_1, in_$fakelocal_1);(in_r1, in_r1);(in_$i11, in_$i11);(in_r0, in_r0);(in_$i12, in_$i12);(in_$s10, in_$s10);(in_$i13, in_$i13);(in_$b8, in_$b8);(in_$b14, in_$b14);(in_$i7, in_$i7);(in_i15, in_i15);(in_$b6, in_$b6);(out_$return, out_$return);(out_$exception, out_$exception);(out_$fakelocal_3, out_$fakelocal_3);(out_$fakelocal_2, out_$fakelocal_2);(out_$s9, out_$s9);(out_$fakelocal_1, out_$fakelocal_1);(out_$i11, out_$i11);(out_$i12, out_$i12);(out_$s10, out_$s10);(out_$i13, out_$i13);(out_$b8, out_$b8);(out_$b14, out_$b14);(out_$i7, out_$i7);(out_i15, out_i15);(out_$b6, out_$b6);
procedure: (unsafe.AesEaxJce$multiplyByX_exp_unsafe$byte$lp$$rp$_int_loop_block17, fixed.AesEaxJce$multiplyByX_exp_unsafe$byte$lp$$rp$_int_loop_block15) / (in_$exception, in_$exception);(in_r0, in_r0);(in_i1, in_i1);(in_i0, in_i0);(in_r1, in_r1);(out_$exception, out_$exception);(out_i1, out_i1);(out_r1, out_r1);


