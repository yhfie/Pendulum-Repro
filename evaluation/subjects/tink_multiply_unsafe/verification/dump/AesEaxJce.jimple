public class AesEaxJce extends java.lang.Object
{
    static final int BLOCK_SIZE_IN_BYTES;

    public void <init>()
    {
        AesEaxJce r0;

        r0 := @this: AesEaxJce;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] multiplyByX_unsafe(byte[])
    {
        byte[] r0, r1;
        byte $b0, $b1, $b7, $b8, $b10, $b16;
        short $s2, $s11, $s12;
        long $l3;
        int $i4, $i5, $i6, $i9, $i13, $i14, $i15, i17;
        boolean $z0;
        java.lang.Integer $r2, $r3, $r5;
        java.lang.Object $r4;

        r0 := @parameter0: byte[];

        r1 = newarray (byte)[16];

        i17 = 0;

     label1:
        if i17 >= 15 goto label2;

        $b8 = r0[i17];

        $i13 = $b8 << 1;

        $i9 = i17 + 1;

        $b10 = r0[$i9];

        $s11 = $b10 & 255;

        $s12 = $s11 >>> 7;

        $i14 = $i13 ^ $s12;

        $i15 = $i14 & 255;

        $b16 = (byte) $i15;

        r1[i17] = $b16;

        i17 = i17 + 1;

        goto label1;

     label2:
        $b0 = r0[15];

        $i4 = $b0 << 1;

        $b1 = r0[0];

        $s2 = $b1 & 128;

        $l3 = (long) $s2;

        $z0 = staticinvoke <sg.edu.nus.comp.tsunami.safe.Safe: boolean eq(long,long)>($l3, 0L);

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(135);

        $r4 = staticinvoke <sg.edu.nus.comp.tsunami.safe.Safe: java.lang.Object cond(boolean,java.lang.Object,java.lang.Object)>($z0, $r2, $r3);

        $r5 = (java.lang.Integer) $r4;

        $i5 = virtualinvoke $r5.<java.lang.Integer: int intValue()>();

        $i6 = $i4 ^ $i5;

        $b7 = (byte) $i6;

        r1[15] = $b7;

        return r1;
    }

    public static byte[] multiplyByX_exp_unsafe(byte[], int)
    {
        byte[] r0, r1;
        int i0, i1;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        r1 = null;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r1 = staticinvoke <AesEaxJce: byte[] multiplyByX_unsafe(byte[])>(r0);

        i1 = i1 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static void <clinit>()
    {
        <AesEaxJce: int BLOCK_SIZE_IN_BYTES> = 16;

        return;
    }
}
