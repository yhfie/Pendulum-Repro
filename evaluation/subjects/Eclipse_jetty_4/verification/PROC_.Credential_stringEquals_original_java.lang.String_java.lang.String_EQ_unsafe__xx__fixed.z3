(set-option :print-success false)
(set-info :smt-lib-version 2.0)
(set-option :produce-models true)
(set-option :AUTO_CONFIG false)
(set-option :pp.bv_literals false)
(set-option :MODEL.V2 true)
(set-option :smt.PHASE_SELECTION 0)
(set-option :smt.RESTART_STRATEGY 0)
(set-option :smt.RESTART_FACTOR |1.5|)
(set-option :smt.ARITH.RANDOM_INITIAL_VALUE true)
(set-option :smt.CASE_SPLIT 3)
(set-option :smt.DELAY_UNITS true)
(set-option :NNF.SK_HACK true)
(set-option :smt.MBQI false)
(set-option :smt.QI.EAGER_THRESHOLD 100)
(set-option :TYPE_CHECK true)
(set-option :smt.BV.REFLECT true)
(set-option :TIMEOUT 20000000)
; done setting options


(set-info :category "industrial")
(declare-sort |T@U| 0)
(declare-sort |T@T| 0)
(declare-fun real_pow (Real Real) Real)
(declare-fun UOrdering2 (|T@U| |T@U|) Bool)
(declare-fun UOrdering3 (|T@T| |T@U| |T@U|) Bool)
(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-fun Ctor (T@T) Int)
(declare-fun intType () T@T)
(declare-fun realType () T@T)
(declare-fun boolType () T@T)
(declare-fun int_2_U (Int) T@U)
(declare-fun U_2_int (T@U) Int)
(declare-fun type (T@U) T@T)
(declare-fun real_2_U (Real) T@U)
(declare-fun U_2_real (T@U) Real)
(declare-fun bool_2_U (Bool) T@U)
(declare-fun U_2_bool (T@U) Bool)
(declare-fun javaTypeType () T@T)
(declare-fun fixed.java.lang.Object () T@U)
(declare-fun fixed.java.lang.String () T@U)
(declare-fun oneStep (T@U T@U) T@U)
(declare-fun fixed.java.io.Serializable () T@U)
(declare-fun fixed.java.lang.Throwable () T@U)
(declare-fun fixed.java.lang.Exception () T@U)
(declare-fun fixed.java.lang.RuntimeException () T@U)
(declare-fun fixed.java.lang.IndexOutOfBoundsException () T@U)
(declare-fun fixed.java.lang.ArrayIndexOutOfBoundsException () T@U)
(declare-fun fixed.java.lang.Boolean () T@U)
(declare-fun fixed.java.lang.Comparable () T@U)
(declare-fun fixed.java.lang.Integer () T@U)
(declare-fun fixed.java.lang.NullPointerException () T@U)
(declare-fun fixed.java.lang.ClassCastException () T@U)
(declare-fun fixed.sg.edu.nus.comp.tsunami.safe.Safe () T@U)
(declare-fun fixed.Credential () T@U)
(declare-fun fixed.java.lang.CharSequence () T@U)
(declare-fun fixed.java.lang.ArithmeticException () T@U)
(declare-fun FieldType (T@T) T@T)
(declare-fun FieldTypeInv0 (T@T) T@T)
(declare-fun fixed.$type () T@U)
(declare-fun fixed.$alloc () T@U)
(declare-fun refType () T@T)
(declare-fun fixed.$null () T@U)
(declare-fun fixed.$intToBool (Int) Bool)
(declare-fun fixed.$refToBool (T@U) Bool)
(declare-fun fixed.$boolToInt (Bool) Int)
(declare-fun fixed.$cmpReal (Real Real) Int)
(declare-fun fixed.$cmpInt (Int Int) Int)
(declare-fun fixed.$intToRef (Int) T@U)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1 () T@U)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@2 () T@U)
(declare-fun MapType0Type (T@T) T@T)
(declare-fun MapType0TypeInv0 (T@T) T@T)
(declare-fun MapType0Select (T@U T@U T@U) T@U)
(declare-fun MapType0Store (T@U T@U T@U T@U) T@U)
(declare-fun fixed.$heap@13 () T@U)
(declare-fun fixed.$heap@6 () T@U)
(declare-fun fixed.$heap () T@U)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1 () T@U)
(declare-fun $in_parameter__0 () T@U)
(declare-fun $in_parameter__1 () T@U)
(declare-fun call3formal@$obj@0 () T@U)
(declare-fun fixed.$heap@8 () T@U)
(declare-fun fixed.$heap@12 () T@U)
(declare-fun MapType1Type (T@T T@T) T@T)
(declare-fun MapType1TypeInv0 (T@T) T@T)
(declare-fun MapType1TypeInv1 (T@T) T@T)
(declare-fun MapType1Select (T@U T@U) T@U)
(declare-fun MapType1Store (T@U T@U T@U) T@U)
(declare-fun fixed.$arrSizeHeap () T@U)
(declare-fun fixed.$stringSizeHeap () T@U)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2 () T@U)
(declare-fun call3formal@$obj@0@@0 () T@U)
(declare-fun fixed.$heap@10 () T@U)
(declare-fun fixed.$heap@11 () T@U)
(declare-fun fixed.$intArrHeap () T@U)
(declare-fun fixed.char$lp$$rp$$java.lang.String$chars259 () T@U)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2 () T@U)
(declare-fun call3formal@$obj@0@@1 () T@U)
(declare-fun fixed.$heap@9 () T@U)
(declare-fun call3formal@$obj@0@@2 () T@U)
(declare-fun fixed.$heap@7 () T@U)
(declare-fun fixed.$heap@17 () T@U)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2 () T@U)
(declare-fun call3formal@$obj@0@@3 () T@U)
(declare-fun fixed.$heap@15 () T@U)
(declare-fun fixed.$heap@16 () T@U)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2 () T@U)
(declare-fun call3formal@$obj@0@@4 () T@U)
(declare-fun fixed.$heap@14 () T@U)
(declare-fun fixed.$heap@5 () T@U)
(declare-fun call3formal@$obj@0@@5 () T@U)
(declare-fun fixed.$heap@1 () T@U)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2 () T@U)
(declare-fun call3formal@$obj@0@@6 () T@U)
(declare-fun fixed.$heap@3 () T@U)
(declare-fun fixed.$heap@4 () T@U)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2 () T@U)
(declare-fun call3formal@$obj@0@@7 () T@U)
(declare-fun fixed.$heap@2 () T@U)
(declare-fun call3formal@$obj@0@@8 () T@U)
(declare-fun fixed.$heap@0 () T@U)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2 () T@U)
(declare-fun call3formal@$obj@0@@9 () T@U)
(declare-fun fixed.$heap@19 () T@U)
(declare-fun fixed.$heap@20 () T@U)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2 () T@U)
(declare-fun call3formal@$obj@0@@10 () T@U)
(declare-fun fixed.$heap@18 () T@U)
(declare-fun %lbl%+348730 () Bool)
(declare-fun %lbl%+348704 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_z0@2 () Int)
(declare-fun fixed.$bitAnd (Int Int) Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$z1 () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_i5@2 () Int)
(declare-fun %lbl%+348706 () Bool)
(declare-fun %lbl%+348707 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 () Int)
(declare-fun %lbl%+348705 () Bool)
(declare-fun %lbl%+348729 () Bool)
(declare-fun %lbl%+348724 () Bool)
(declare-fun %lbl%+348723 () Bool)
(declare-fun %lbl%+348722 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2 () Int)
(declare-fun %lbl%+348721 () Bool)
(declare-fun %lbl%+348720 () Bool)
(declare-fun %lbl%+348719 () Bool)
(declare-fun fixed.$objIndex@16 () Int)
(declare-fun fixed.$objIndex@15 () Int)
(declare-fun %lbl%+348718 () Bool)
(declare-fun %lbl%+348717 () Bool)
(declare-fun %lbl%+348716 () Bool)
(declare-fun %lbl%+348715 () Bool)
(declare-fun %lbl%+348714 () Bool)
(declare-fun fixed.$objIndex () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2 () Int)
(declare-fun %lbl%+348713 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$i2@2 () Int)
(declare-fun %lbl%+348712 () Bool)
(declare-fun %lbl%+348711 () Bool)
(declare-fun fixed.$objIndex@14 () Int)
(declare-fun %lbl%+348710 () Bool)
(declare-fun %lbl%+348709 () Bool)
(declare-fun %lbl%+348708 () Bool)
(declare-fun fixed.$modInt (Int Int) Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 () Int)
(declare-fun %lbl%+348725 () Bool)
(declare-fun %lbl%+348771 () Bool)
(declare-fun %lbl%+348757 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$z0@1 () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z1 () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i5@1 () Int)
(declare-fun %lbl%+348759 () Bool)
(declare-fun %lbl%+348758 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 () Int)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 () Int)
(declare-fun %lbl%+348756 () Bool)
(declare-fun %lbl%+348755 () Bool)
(declare-fun %lbl%+348754 () Bool)
(declare-fun %lbl%+348753 () Bool)
(declare-fun %lbl%+348752 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2 () Int)
(declare-fun %lbl%+348751 () Bool)
(declare-fun %lbl%+348750 () Bool)
(declare-fun %lbl%+348749 () Bool)
(declare-fun fixed.$objIndex@4 () Int)
(declare-fun fixed.$objIndex@3 () Int)
(declare-fun %lbl%+348748 () Bool)
(declare-fun %lbl%+348747 () Bool)
(declare-fun %lbl%+348746 () Bool)
(declare-fun %lbl%+348745 () Bool)
(declare-fun %lbl%+348744 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2 () Int)
(declare-fun %lbl%+348743 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 () Int)
(declare-fun %lbl%+348742 () Bool)
(declare-fun %lbl%+348741 () Bool)
(declare-fun fixed.$objIndex@2 () Int)
(declare-fun %lbl%+348740 () Bool)
(declare-fun %lbl%+348739 () Bool)
(declare-fun %lbl%+348738 () Bool)
(declare-fun %lbl%+348737 () Bool)
(declare-fun %lbl%+348827 () Bool)
(declare-fun %lbl%+348822 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_z2@2 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$z0 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_i7@2 () Int)
(declare-fun %lbl%+348821 () Bool)
(declare-fun %lbl%+348818 () Bool)
(declare-fun %lbl%+348817 () Bool)
(declare-fun %lbl%+348816 () Bool)
(declare-fun %lbl%+348815 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b3@2 () Int)
(declare-fun %lbl%+348819 () Bool)
(declare-fun %lbl%+348814 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 () Int)
(declare-fun %lbl%+348813 () Bool)
(declare-fun %lbl%+348812 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b2@2 () Int)
(declare-fun %lbl%+348820 () Bool)
(declare-fun %lbl%+348811 () Bool)
(declare-fun %lbl%+348810 () Bool)
(declare-fun %lbl%+348809 () Bool)
(declare-fun %lbl%+348808 () Bool)
(declare-fun %lbl%+348807 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2 () Int)
(declare-fun %lbl%+348806 () Bool)
(declare-fun %lbl%+348805 () Bool)
(declare-fun %lbl%+348804 () Bool)
(declare-fun fixed.$objIndex@13 () Int)
(declare-fun fixed.$objIndex@12 () Int)
(declare-fun %lbl%+348803 () Bool)
(declare-fun %lbl%+348802 () Bool)
(declare-fun %lbl%+348801 () Bool)
(declare-fun %lbl%+348800 () Bool)
(declare-fun %lbl%+348799 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2 () Int)
(declare-fun %lbl%+348798 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_$i2@2 () Int)
(declare-fun %lbl%+348797 () Bool)
(declare-fun %lbl%+348796 () Bool)
(declare-fun fixed.$objIndex@11 () Int)
(declare-fun %lbl%+348795 () Bool)
(declare-fun %lbl%+348794 () Bool)
(declare-fun %lbl%+348793 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 () Int)
(declare-fun %lbl%+348823 () Bool)
(declare-fun %lbl%+348878 () Bool)
(declare-fun %lbl%+348864 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$z2@1 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$z0 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i7@1 () Int)
(declare-fun %lbl%+348863 () Bool)
(declare-fun %lbl%+348860 () Bool)
(declare-fun %lbl%+348859 () Bool)
(declare-fun %lbl%+348858 () Bool)
(declare-fun %lbl%+348857 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b3@2 () Int)
(declare-fun %lbl%+348861 () Bool)
(declare-fun %lbl%+348856 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 () Int)
(declare-fun %lbl%+348855 () Bool)
(declare-fun %lbl%+348854 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b2@2 () Int)
(declare-fun %lbl%+348862 () Bool)
(declare-fun %lbl%+348853 () Bool)
(declare-fun %lbl%+348852 () Bool)
(declare-fun %lbl%+348851 () Bool)
(declare-fun %lbl%+348850 () Bool)
(declare-fun %lbl%+348849 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2 () Int)
(declare-fun %lbl%+348848 () Bool)
(declare-fun %lbl%+348847 () Bool)
(declare-fun %lbl%+348846 () Bool)
(declare-fun fixed.$objIndex@9 () Int)
(declare-fun fixed.$objIndex@8 () Int)
(declare-fun %lbl%+348845 () Bool)
(declare-fun %lbl%+348844 () Bool)
(declare-fun %lbl%+348843 () Bool)
(declare-fun %lbl%+348842 () Bool)
(declare-fun %lbl%+348841 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2 () Int)
(declare-fun %lbl%+348840 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 () Int)
(declare-fun %lbl%+348839 () Bool)
(declare-fun %lbl%+348838 () Bool)
(declare-fun fixed.$objIndex@7 () Int)
(declare-fun %lbl%+348837 () Bool)
(declare-fun %lbl%+348836 () Bool)
(declare-fun %lbl%+348835 () Bool)
(declare-fun %lbl%+348834 () Bool)
(declare-fun %lbl%+356634 () Bool)
(declare-fun %lbl%@363015 () Bool)
(declare-fun AA_TEMP383@2 () Bool)
(declare-fun AA_TEMP382@2 () Bool)
(declare-fun AA_TEMP381@2 () Bool)
(declare-fun AA_TEMP380@2 () Bool)
(declare-fun %lbl%+348881 () Bool)
(declare-fun AA_TEMP380@1 () Bool)
(declare-fun AA_TEMP380@0 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@2 () Int)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@2 () Int)
(declare-fun AA_TEMP381@1 () Bool)
(declare-fun AA_TEMP381@0 () Bool)
(declare-fun AA_TEMP382@1 () Bool)
(declare-fun AA_TEMP382@0 () Bool)
(declare-fun fixed.$objIndex@10 () Int)
(declare-fun AA_TEMP383@1 () Bool)
(declare-fun AA_TEMP383@0 () Bool)
(declare-fun %lbl%+348880 () Bool)
(declare-fun %lbl%+348833 () Bool)
(declare-fun fixed.$objIndex@6 () Int)
(declare-fun %lbl%+348832 () Bool)
(declare-fun %lbl%+348831 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1 () Int)
(declare-fun %lbl%+348779 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 () Int)
(declare-fun %lbl%+348874 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$and$boolean_boolean$0$$z2@2 () Int)
(declare-fun %lbl%+348873 () Bool)
(declare-fun %lbl%+348872 () Bool)
(declare-fun %lbl%+348871 () Bool)
(declare-fun inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z3@1 () Int)
(declare-fun %lbl%+348870 () Bool)
(declare-fun %lbl%+348869 () Bool)
(declare-fun %lbl%+348876 () Bool)
(declare-fun %lbl%+348875 () Bool)
(declare-fun %lbl%+348868 () Bool)
(declare-fun %lbl%+348867 () Bool)
(declare-fun %lbl%+348866 () Bool)
(declare-fun %lbl%+348865 () Bool)
(declare-fun %lbl%+348879 () Bool)
(declare-fun %lbl%+348830 () Bool)
(declare-fun %lbl%+348829 () Bool)
(declare-fun %lbl%+348825 () Bool)
(declare-fun fixed.$objIndex@5 () Int)
(declare-fun %lbl%+348824 () Bool)
(declare-fun %lbl%+348826 () Bool)
(declare-fun %lbl%+348792 () Bool)
(declare-fun %lbl%+348791 () Bool)
(declare-fun %lbl%+348790 () Bool)
(declare-fun %lbl%+348789 () Bool)
(declare-fun %lbl%+348788 () Bool)
(declare-fun %lbl%+348787 () Bool)
(declare-fun %lbl%+348786 () Bool)
(declare-fun %lbl%+348785 () Bool)
(declare-fun %lbl%+348784 () Bool)
(declare-fun %lbl%+348783 () Bool)
(declare-fun %lbl%+348782 () Bool)
(declare-fun %lbl%+348877 () Bool)
(declare-fun %lbl%+348781 () Bool)
(declare-fun %lbl%+348780 () Bool)
(declare-fun %lbl%+348778 () Bool)
(declare-fun %lbl%+348777 () Bool)
(declare-fun %lbl%+348776 () Bool)
(declare-fun %lbl%+348775 () Bool)
(declare-fun %lbl%+348774 () Bool)
(declare-fun %lbl%+348773 () Bool)
(declare-fun %lbl%+348736 () Bool)
(declare-fun fixed.$objIndex@1 () Int)
(declare-fun %lbl%+348735 () Bool)
(declare-fun %lbl%+348734 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1 () Int)
(declare-fun %lbl%+348690 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 () Int)
(declare-fun %lbl%+348766 () Bool)
(declare-fun inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z2@1 () Int)
(declare-fun %lbl%+348768 () Bool)
(declare-fun %lbl%+348767 () Bool)
(declare-fun %lbl%+348769 () Bool)
(declare-fun %lbl%+348765 () Bool)
(declare-fun %lbl%+348764 () Bool)
(declare-fun %lbl%+348763 () Bool)
(declare-fun %lbl%+348762 () Bool)
(declare-fun %lbl%+348761 () Bool)
(declare-fun %lbl%+348760 () Bool)
(declare-fun %lbl%+348772 () Bool)
(declare-fun %lbl%+348733 () Bool)
(declare-fun %lbl%+348732 () Bool)
(declare-fun %lbl%+348727 () Bool)
(declare-fun fixed.$objIndex@0 () Int)
(declare-fun %lbl%+348726 () Bool)
(declare-fun %lbl%+348728 () Bool)
(declare-fun %lbl%+348703 () Bool)
(declare-fun %lbl%+348702 () Bool)
(declare-fun %lbl%+348701 () Bool)
(declare-fun %lbl%+348700 () Bool)
(declare-fun %lbl%+348699 () Bool)
(declare-fun %lbl%+348698 () Bool)
(declare-fun %lbl%+348697 () Bool)
(declare-fun %lbl%+348696 () Bool)
(declare-fun %lbl%+348695 () Bool)
(declare-fun %lbl%+348694 () Bool)
(declare-fun %lbl%+348693 () Bool)
(declare-fun %lbl%+348770 () Bool)
(declare-fun %lbl%+348692 () Bool)
(declare-fun %lbl%+348691 () Bool)
(declare-fun %lbl%+348689 () Bool)
(declare-fun %lbl%+348688 () Bool)
(declare-fun %lbl%+348687 () Bool)
(declare-fun %lbl%+348686 () Bool)
(declare-fun %lbl%+348685 () Bool)
(declare-fun %lbl%+356632 () Bool)
(declare-fun %lbl%+356647 () Bool)
(assert  (and (and (and (and (and (and (and (and (and (and (and (= (Ctor intType) 0) (= (Ctor realType) 1)) (= (Ctor boolType) 2)) (forall ((arg0 Int) ) (! (= (U_2_int (int_2_U arg0)) arg0)
 :qid |typeInv:U_2_int|
 :pattern ( (int_2_U arg0))
))) (forall ((x T@U) ) (!  (=> (= (type x) intType) (= (int_2_U (U_2_int x)) x))
 :qid |cast:U_2_int|
 :pattern ( (U_2_int x))
))) (forall ((arg0@@0 Int) ) (! (= (type (int_2_U arg0@@0)) intType)
 :qid |funType:int_2_U|
 :pattern ( (int_2_U arg0@@0))
))) (forall ((arg0@@1 Real) ) (! (= (U_2_real (real_2_U arg0@@1)) arg0@@1)
 :qid |typeInv:U_2_real|
 :pattern ( (real_2_U arg0@@1))
))) (forall ((x@@0 T@U) ) (!  (=> (= (type x@@0) realType) (= (real_2_U (U_2_real x@@0)) x@@0))
 :qid |cast:U_2_real|
 :pattern ( (U_2_real x@@0))
))) (forall ((arg0@@2 Real) ) (! (= (type (real_2_U arg0@@2)) realType)
 :qid |funType:real_2_U|
 :pattern ( (real_2_U arg0@@2))
))) (forall ((arg0@@3 Bool) ) (! (= (U_2_bool (bool_2_U arg0@@3)) arg0@@3)
 :qid |typeInv:U_2_bool|
 :pattern ( (bool_2_U arg0@@3))
))) (forall ((x@@1 T@U) ) (!  (=> (= (type x@@1) boolType) (= (bool_2_U (U_2_bool x@@1)) x@@1))
 :qid |cast:U_2_bool|
 :pattern ( (U_2_bool x@@1))
))) (forall ((arg0@@4 Bool) ) (! (= (type (bool_2_U arg0@@4)) boolType)
 :qid |funType:bool_2_U|
 :pattern ( (bool_2_U arg0@@4))
))))
(assert (forall ((x@@2 T@U) ) (! (UOrdering2 x@@2 x@@2)
 :qid |bg:subtype-refl|
 :no-pattern (U_2_int x@@2)
 :no-pattern (U_2_bool x@@2)
)))
(assert (forall ((x@@3 T@U) (y T@U) (z T@U) ) (! (let ((alpha (type x@@3)))
 (=> (and (and (= (type y) alpha) (= (type z) alpha)) (and (UOrdering2 x@@3 y) (UOrdering2 y z))) (UOrdering2 x@@3 z)))
 :qid |bg:subtype-trans|
 :pattern ( (UOrdering2 x@@3 y) (UOrdering2 y z))
)))
(assert (forall ((x@@4 T@U) (y@@0 T@U) ) (! (let ((alpha@@0 (type x@@4)))
 (=> (= (type y@@0) alpha@@0) (=> (and (UOrdering2 x@@4 y@@0) (UOrdering2 y@@0 x@@4)) (= x@@4 y@@0))))
 :qid |bg:subtype-antisymm|
 :pattern ( (UOrdering2 x@@4 y@@0) (UOrdering2 y@@0 x@@4))
)))
(assert  (and (= (Ctor javaTypeType) 3) (= (type fixed.java.lang.Object) javaTypeType)))
(assert (forall ((w T@U) ) (!  (=> (and (= (type w) javaTypeType) (UOrdering2 fixed.java.lang.Object w)) (= fixed.java.lang.Object w))
 :pattern ( (UOrdering2 fixed.java.lang.Object w))
)))
(assert (= (type fixed.java.lang.String) javaTypeType))
(assert (not (= fixed.java.lang.String fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.String fixed.java.lang.Object))
(assert (forall ((w@@0 T@U) ) (!  (=> (= (type w@@0) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.String w@@0) (UOrdering2 w@@0 fixed.java.lang.Object)) (or (= fixed.java.lang.String w@@0) (= fixed.java.lang.Object w@@0))))
 :pattern ( (UOrdering2 fixed.java.lang.String w@@0) (UOrdering2 w@@0 fixed.java.lang.Object))
)))
(assert (forall ((w@@1 T@U) ) (!  (=> (and (= (type w@@1) javaTypeType) (UOrdering2 fixed.java.lang.String w@@1)) (or (= fixed.java.lang.String w@@1) (UOrdering2 fixed.java.lang.Object w@@1)))
 :pattern ( (UOrdering2 fixed.java.lang.String w@@1))
)))
(assert (forall ((arg0@@5 T@U) (arg1 T@U) ) (! (= (type (oneStep arg0@@5 arg1)) javaTypeType)
 :qid |funType:oneStep|
 :pattern ( (oneStep arg0@@5 arg1))
)))
(assert (forall ((w@@2 T@U) ) (!  (=> (and (= (type w@@2) javaTypeType) (UOrdering2 w@@2 fixed.java.lang.String)) (= (oneStep fixed.java.lang.Object w@@2) fixed.java.lang.String))
 :pattern ( (UOrdering2 w@@2 fixed.java.lang.String))
)))
(assert (= (type fixed.java.io.Serializable) javaTypeType))
(assert (forall ((w@@3 T@U) ) (!  (=> (and (= (type w@@3) javaTypeType) (UOrdering2 fixed.java.io.Serializable w@@3)) (= fixed.java.io.Serializable w@@3))
 :pattern ( (UOrdering2 fixed.java.io.Serializable w@@3))
)))
(assert (= (type fixed.java.lang.Throwable) javaTypeType))
(assert (not (= fixed.java.lang.Throwable fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.Throwable fixed.java.lang.Object))
(assert (not (= fixed.java.lang.Throwable fixed.java.io.Serializable)))
(assert (UOrdering2 fixed.java.lang.Throwable fixed.java.io.Serializable))
(assert (forall ((w@@4 T@U) ) (!  (=> (= (type w@@4) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Throwable w@@4) (UOrdering2 w@@4 fixed.java.lang.Object)) (or (= fixed.java.lang.Throwable w@@4) (= fixed.java.lang.Object w@@4))))
 :pattern ( (UOrdering2 fixed.java.lang.Throwable w@@4) (UOrdering2 w@@4 fixed.java.lang.Object))
)))
(assert (forall ((w@@5 T@U) ) (!  (=> (= (type w@@5) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Throwable w@@5) (UOrdering2 w@@5 fixed.java.io.Serializable)) (or (= fixed.java.lang.Throwable w@@5) (= fixed.java.io.Serializable w@@5))))
 :pattern ( (UOrdering2 fixed.java.lang.Throwable w@@5) (UOrdering2 w@@5 fixed.java.io.Serializable))
)))
(assert (forall ((w@@6 T@U) ) (!  (=> (and (= (type w@@6) javaTypeType) (UOrdering2 fixed.java.lang.Throwable w@@6)) (or (or (= fixed.java.lang.Throwable w@@6) (UOrdering2 fixed.java.lang.Object w@@6)) (UOrdering2 fixed.java.io.Serializable w@@6)))
 :pattern ( (UOrdering2 fixed.java.lang.Throwable w@@6))
)))
(assert (forall ((w@@7 T@U) ) (!  (=> (and (= (type w@@7) javaTypeType) (UOrdering2 w@@7 fixed.java.lang.Throwable)) (= (oneStep fixed.java.lang.Object w@@7) fixed.java.lang.Throwable))
 :pattern ( (UOrdering2 w@@7 fixed.java.lang.Throwable))
)))
(assert (= (type fixed.java.lang.Exception) javaTypeType))
(assert (not (= fixed.java.lang.Exception fixed.java.lang.Throwable)))
(assert (UOrdering2 fixed.java.lang.Exception fixed.java.lang.Throwable))
(assert (forall ((w@@8 T@U) ) (!  (=> (= (type w@@8) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Exception w@@8) (UOrdering2 w@@8 fixed.java.lang.Throwable)) (or (= fixed.java.lang.Exception w@@8) (= fixed.java.lang.Throwable w@@8))))
 :pattern ( (UOrdering2 fixed.java.lang.Exception w@@8) (UOrdering2 w@@8 fixed.java.lang.Throwable))
)))
(assert (forall ((w@@9 T@U) ) (!  (=> (and (= (type w@@9) javaTypeType) (UOrdering2 fixed.java.lang.Exception w@@9)) (or (= fixed.java.lang.Exception w@@9) (UOrdering2 fixed.java.lang.Throwable w@@9)))
 :pattern ( (UOrdering2 fixed.java.lang.Exception w@@9))
)))
(assert (forall ((w@@10 T@U) ) (!  (=> (and (= (type w@@10) javaTypeType) (UOrdering2 w@@10 fixed.java.lang.Exception)) (= (oneStep fixed.java.lang.Throwable w@@10) fixed.java.lang.Exception))
 :pattern ( (UOrdering2 w@@10 fixed.java.lang.Exception))
)))
(assert (= (type fixed.java.lang.RuntimeException) javaTypeType))
(assert (not (= fixed.java.lang.RuntimeException fixed.java.lang.Exception)))
(assert (UOrdering2 fixed.java.lang.RuntimeException fixed.java.lang.Exception))
(assert (forall ((w@@11 T@U) ) (!  (=> (= (type w@@11) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.RuntimeException w@@11) (UOrdering2 w@@11 fixed.java.lang.Exception)) (or (= fixed.java.lang.RuntimeException w@@11) (= fixed.java.lang.Exception w@@11))))
 :pattern ( (UOrdering2 fixed.java.lang.RuntimeException w@@11) (UOrdering2 w@@11 fixed.java.lang.Exception))
)))
(assert (forall ((w@@12 T@U) ) (!  (=> (and (= (type w@@12) javaTypeType) (UOrdering2 fixed.java.lang.RuntimeException w@@12)) (or (= fixed.java.lang.RuntimeException w@@12) (UOrdering2 fixed.java.lang.Exception w@@12)))
 :pattern ( (UOrdering2 fixed.java.lang.RuntimeException w@@12))
)))
(assert (forall ((w@@13 T@U) ) (!  (=> (and (= (type w@@13) javaTypeType) (UOrdering2 w@@13 fixed.java.lang.RuntimeException)) (= (oneStep fixed.java.lang.Exception w@@13) fixed.java.lang.RuntimeException))
 :pattern ( (UOrdering2 w@@13 fixed.java.lang.RuntimeException))
)))
(assert (= (type fixed.java.lang.IndexOutOfBoundsException) javaTypeType))
(assert (not (= fixed.java.lang.IndexOutOfBoundsException fixed.java.lang.RuntimeException)))
(assert (UOrdering2 fixed.java.lang.IndexOutOfBoundsException fixed.java.lang.RuntimeException))
(assert (forall ((w@@14 T@U) ) (!  (=> (= (type w@@14) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@14) (UOrdering2 w@@14 fixed.java.lang.RuntimeException)) (or (= fixed.java.lang.IndexOutOfBoundsException w@@14) (= fixed.java.lang.RuntimeException w@@14))))
 :pattern ( (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@14) (UOrdering2 w@@14 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@15 T@U) ) (!  (=> (and (= (type w@@15) javaTypeType) (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@15)) (or (= fixed.java.lang.IndexOutOfBoundsException w@@15) (UOrdering2 fixed.java.lang.RuntimeException w@@15)))
 :pattern ( (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@15))
)))
(assert (forall ((w@@16 T@U) ) (!  (=> (and (= (type w@@16) javaTypeType) (UOrdering2 w@@16 fixed.java.lang.IndexOutOfBoundsException)) (= (oneStep fixed.java.lang.RuntimeException w@@16) fixed.java.lang.IndexOutOfBoundsException))
 :pattern ( (UOrdering2 w@@16 fixed.java.lang.IndexOutOfBoundsException))
)))
(assert (= (type fixed.java.lang.ArrayIndexOutOfBoundsException) javaTypeType))
(assert (not (= fixed.java.lang.ArrayIndexOutOfBoundsException fixed.java.lang.IndexOutOfBoundsException)))
(assert (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException fixed.java.lang.IndexOutOfBoundsException))
(assert (forall ((w@@17 T@U) ) (!  (=> (= (type w@@17) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@17) (UOrdering2 w@@17 fixed.java.lang.IndexOutOfBoundsException)) (or (= fixed.java.lang.ArrayIndexOutOfBoundsException w@@17) (= fixed.java.lang.IndexOutOfBoundsException w@@17))))
 :pattern ( (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@17) (UOrdering2 w@@17 fixed.java.lang.IndexOutOfBoundsException))
)))
(assert (forall ((w@@18 T@U) ) (!  (=> (and (= (type w@@18) javaTypeType) (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@18)) (or (= fixed.java.lang.ArrayIndexOutOfBoundsException w@@18) (UOrdering2 fixed.java.lang.IndexOutOfBoundsException w@@18)))
 :pattern ( (UOrdering2 fixed.java.lang.ArrayIndexOutOfBoundsException w@@18))
)))
(assert (forall ((w@@19 T@U) ) (!  (=> (and (= (type w@@19) javaTypeType) (UOrdering2 w@@19 fixed.java.lang.ArrayIndexOutOfBoundsException)) (= (oneStep fixed.java.lang.IndexOutOfBoundsException w@@19) fixed.java.lang.ArrayIndexOutOfBoundsException))
 :pattern ( (UOrdering2 w@@19 fixed.java.lang.ArrayIndexOutOfBoundsException))
)))
(assert (= (type fixed.java.lang.Boolean) javaTypeType))
(assert (not (= fixed.java.lang.Boolean fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.Boolean fixed.java.lang.Object))
(assert (forall ((w@@20 T@U) ) (!  (=> (= (type w@@20) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Boolean w@@20) (UOrdering2 w@@20 fixed.java.lang.Object)) (or (= fixed.java.lang.Boolean w@@20) (= fixed.java.lang.Object w@@20))))
 :pattern ( (UOrdering2 fixed.java.lang.Boolean w@@20) (UOrdering2 w@@20 fixed.java.lang.Object))
)))
(assert (forall ((w@@21 T@U) ) (!  (=> (and (= (type w@@21) javaTypeType) (UOrdering2 fixed.java.lang.Boolean w@@21)) (or (= fixed.java.lang.Boolean w@@21) (UOrdering2 fixed.java.lang.Object w@@21)))
 :pattern ( (UOrdering2 fixed.java.lang.Boolean w@@21))
)))
(assert (forall ((w@@22 T@U) ) (!  (=> (and (= (type w@@22) javaTypeType) (UOrdering2 w@@22 fixed.java.lang.Boolean)) (= (oneStep fixed.java.lang.Object w@@22) fixed.java.lang.Boolean))
 :pattern ( (UOrdering2 w@@22 fixed.java.lang.Boolean))
)))
(assert (= (type fixed.java.lang.Comparable) javaTypeType))
(assert (forall ((w@@23 T@U) ) (!  (=> (and (= (type w@@23) javaTypeType) (UOrdering2 fixed.java.lang.Comparable w@@23)) (= fixed.java.lang.Comparable w@@23))
 :pattern ( (UOrdering2 fixed.java.lang.Comparable w@@23))
)))
(assert (= (type fixed.java.lang.Integer) javaTypeType))
(assert (not (= fixed.java.lang.Integer fixed.java.lang.Object)))
(assert (UOrdering2 fixed.java.lang.Integer fixed.java.lang.Object))
(assert (not (= fixed.java.lang.Integer fixed.java.io.Serializable)))
(assert (UOrdering2 fixed.java.lang.Integer fixed.java.io.Serializable))
(assert (not (= fixed.java.lang.Integer fixed.java.lang.Comparable)))
(assert (UOrdering2 fixed.java.lang.Integer fixed.java.lang.Comparable))
(assert (forall ((w@@24 T@U) ) (!  (=> (= (type w@@24) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Integer w@@24) (UOrdering2 w@@24 fixed.java.lang.Object)) (or (= fixed.java.lang.Integer w@@24) (= fixed.java.lang.Object w@@24))))
 :pattern ( (UOrdering2 fixed.java.lang.Integer w@@24) (UOrdering2 w@@24 fixed.java.lang.Object))
)))
(assert (forall ((w@@25 T@U) ) (!  (=> (= (type w@@25) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Integer w@@25) (UOrdering2 w@@25 fixed.java.io.Serializable)) (or (= fixed.java.lang.Integer w@@25) (= fixed.java.io.Serializable w@@25))))
 :pattern ( (UOrdering2 fixed.java.lang.Integer w@@25) (UOrdering2 w@@25 fixed.java.io.Serializable))
)))
(assert (forall ((w@@26 T@U) ) (!  (=> (= (type w@@26) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.Integer w@@26) (UOrdering2 w@@26 fixed.java.lang.Comparable)) (or (= fixed.java.lang.Integer w@@26) (= fixed.java.lang.Comparable w@@26))))
 :pattern ( (UOrdering2 fixed.java.lang.Integer w@@26) (UOrdering2 w@@26 fixed.java.lang.Comparable))
)))
(assert (forall ((w@@27 T@U) ) (!  (=> (and (= (type w@@27) javaTypeType) (UOrdering2 fixed.java.lang.Integer w@@27)) (or (or (or (= fixed.java.lang.Integer w@@27) (UOrdering2 fixed.java.lang.Object w@@27)) (UOrdering2 fixed.java.io.Serializable w@@27)) (UOrdering2 fixed.java.lang.Comparable w@@27)))
 :pattern ( (UOrdering2 fixed.java.lang.Integer w@@27))
)))
(assert (forall ((w@@28 T@U) ) (!  (=> (and (= (type w@@28) javaTypeType) (UOrdering2 w@@28 fixed.java.lang.Integer)) (= (oneStep fixed.java.lang.Object w@@28) fixed.java.lang.Integer))
 :pattern ( (UOrdering2 w@@28 fixed.java.lang.Integer))
)))
(assert (= (type fixed.java.lang.NullPointerException) javaTypeType))
(assert (not (= fixed.java.lang.NullPointerException fixed.java.lang.RuntimeException)))
(assert (UOrdering2 fixed.java.lang.NullPointerException fixed.java.lang.RuntimeException))
(assert (forall ((w@@29 T@U) ) (!  (=> (= (type w@@29) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.NullPointerException w@@29) (UOrdering2 w@@29 fixed.java.lang.RuntimeException)) (or (= fixed.java.lang.NullPointerException w@@29) (= fixed.java.lang.RuntimeException w@@29))))
 :pattern ( (UOrdering2 fixed.java.lang.NullPointerException w@@29) (UOrdering2 w@@29 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@30 T@U) ) (!  (=> (and (= (type w@@30) javaTypeType) (UOrdering2 fixed.java.lang.NullPointerException w@@30)) (or (= fixed.java.lang.NullPointerException w@@30) (UOrdering2 fixed.java.lang.RuntimeException w@@30)))
 :pattern ( (UOrdering2 fixed.java.lang.NullPointerException w@@30))
)))
(assert (forall ((w@@31 T@U) ) (!  (=> (and (= (type w@@31) javaTypeType) (UOrdering2 w@@31 fixed.java.lang.NullPointerException)) (= (oneStep fixed.java.lang.RuntimeException w@@31) fixed.java.lang.NullPointerException))
 :pattern ( (UOrdering2 w@@31 fixed.java.lang.NullPointerException))
)))
(assert (= (type fixed.java.lang.ClassCastException) javaTypeType))
(assert (not (= fixed.java.lang.ClassCastException fixed.java.lang.RuntimeException)))
(assert (UOrdering2 fixed.java.lang.ClassCastException fixed.java.lang.RuntimeException))
(assert (forall ((w@@32 T@U) ) (!  (=> (= (type w@@32) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.ClassCastException w@@32) (UOrdering2 w@@32 fixed.java.lang.RuntimeException)) (or (= fixed.java.lang.ClassCastException w@@32) (= fixed.java.lang.RuntimeException w@@32))))
 :pattern ( (UOrdering2 fixed.java.lang.ClassCastException w@@32) (UOrdering2 w@@32 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@33 T@U) ) (!  (=> (and (= (type w@@33) javaTypeType) (UOrdering2 fixed.java.lang.ClassCastException w@@33)) (or (= fixed.java.lang.ClassCastException w@@33) (UOrdering2 fixed.java.lang.RuntimeException w@@33)))
 :pattern ( (UOrdering2 fixed.java.lang.ClassCastException w@@33))
)))
(assert (forall ((w@@34 T@U) ) (!  (=> (and (= (type w@@34) javaTypeType) (UOrdering2 w@@34 fixed.java.lang.ClassCastException)) (= (oneStep fixed.java.lang.RuntimeException w@@34) fixed.java.lang.ClassCastException))
 :pattern ( (UOrdering2 w@@34 fixed.java.lang.ClassCastException))
)))
(assert (= (type fixed.sg.edu.nus.comp.tsunami.safe.Safe) javaTypeType))
(assert (not (= fixed.sg.edu.nus.comp.tsunami.safe.Safe fixed.java.lang.Object)))
(assert (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe fixed.java.lang.Object))
(assert (forall ((w@@35 T@U) ) (!  (=> (= (type w@@35) javaTypeType) (=> (and (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@35) (UOrdering2 w@@35 fixed.java.lang.Object)) (or (= fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@35) (= fixed.java.lang.Object w@@35))))
 :pattern ( (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@35) (UOrdering2 w@@35 fixed.java.lang.Object))
)))
(assert (forall ((w@@36 T@U) ) (!  (=> (and (= (type w@@36) javaTypeType) (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@36)) (or (= fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@36) (UOrdering2 fixed.java.lang.Object w@@36)))
 :pattern ( (UOrdering2 fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@36))
)))
(assert (forall ((w@@37 T@U) ) (!  (=> (and (= (type w@@37) javaTypeType) (UOrdering2 w@@37 fixed.sg.edu.nus.comp.tsunami.safe.Safe)) (= (oneStep fixed.java.lang.Object w@@37) fixed.sg.edu.nus.comp.tsunami.safe.Safe))
 :pattern ( (UOrdering2 w@@37 fixed.sg.edu.nus.comp.tsunami.safe.Safe))
)))
(assert (= (type fixed.Credential) javaTypeType))
(assert (not (= fixed.Credential fixed.java.lang.Object)))
(assert (UOrdering2 fixed.Credential fixed.java.lang.Object))
(assert (forall ((w@@38 T@U) ) (!  (=> (= (type w@@38) javaTypeType) (=> (and (UOrdering2 fixed.Credential w@@38) (UOrdering2 w@@38 fixed.java.lang.Object)) (or (= fixed.Credential w@@38) (= fixed.java.lang.Object w@@38))))
 :pattern ( (UOrdering2 fixed.Credential w@@38) (UOrdering2 w@@38 fixed.java.lang.Object))
)))
(assert (forall ((w@@39 T@U) ) (!  (=> (and (= (type w@@39) javaTypeType) (UOrdering2 fixed.Credential w@@39)) (or (= fixed.Credential w@@39) (UOrdering2 fixed.java.lang.Object w@@39)))
 :pattern ( (UOrdering2 fixed.Credential w@@39))
)))
(assert (forall ((w@@40 T@U) ) (!  (=> (and (= (type w@@40) javaTypeType) (UOrdering2 w@@40 fixed.Credential)) (= (oneStep fixed.java.lang.Object w@@40) fixed.Credential))
 :pattern ( (UOrdering2 w@@40 fixed.Credential))
)))
(assert (= (type fixed.java.lang.CharSequence) javaTypeType))
(assert (forall ((w@@41 T@U) ) (!  (=> (and (= (type w@@41) javaTypeType) (UOrdering2 fixed.java.lang.CharSequence w@@41)) (= fixed.java.lang.CharSequence w@@41))
 :pattern ( (UOrdering2 fixed.java.lang.CharSequence w@@41))
)))
(assert (= (type fixed.java.lang.ArithmeticException) javaTypeType))
(assert (not (= fixed.java.lang.ArithmeticException fixed.java.lang.RuntimeException)))
(assert (UOrdering2 fixed.java.lang.ArithmeticException fixed.java.lang.RuntimeException))
(assert (forall ((w@@42 T@U) ) (!  (=> (= (type w@@42) javaTypeType) (=> (and (UOrdering2 fixed.java.lang.ArithmeticException w@@42) (UOrdering2 w@@42 fixed.java.lang.RuntimeException)) (or (= fixed.java.lang.ArithmeticException w@@42) (= fixed.java.lang.RuntimeException w@@42))))
 :pattern ( (UOrdering2 fixed.java.lang.ArithmeticException w@@42) (UOrdering2 w@@42 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@43 T@U) ) (!  (=> (and (= (type w@@43) javaTypeType) (UOrdering2 fixed.java.lang.ArithmeticException w@@43)) (or (= fixed.java.lang.ArithmeticException w@@43) (UOrdering2 fixed.java.lang.RuntimeException w@@43)))
 :pattern ( (UOrdering2 fixed.java.lang.ArithmeticException w@@43))
)))
(assert (forall ((w@@44 T@U) ) (!  (=> (and (= (type w@@44) javaTypeType) (UOrdering2 w@@44 fixed.java.lang.ArithmeticException)) (= (oneStep fixed.java.lang.RuntimeException w@@44) fixed.java.lang.ArithmeticException))
 :pattern ( (UOrdering2 w@@44 fixed.java.lang.ArithmeticException))
)))
(assert (forall ((w@@45 T@U) ) (!  (=> (and (= (type w@@45) javaTypeType) (UOrdering2 w@@45 fixed.java.lang.Object)) (or (or (or (or (or (or (= fixed.java.lang.Object w@@45) (UOrdering2 w@@45 fixed.java.lang.String)) (UOrdering2 w@@45 fixed.java.lang.Throwable)) (UOrdering2 w@@45 fixed.java.lang.Boolean)) (UOrdering2 w@@45 fixed.java.lang.Integer)) (UOrdering2 w@@45 fixed.sg.edu.nus.comp.tsunami.safe.Safe)) (UOrdering2 w@@45 fixed.Credential)))
 :pattern ( (UOrdering2 w@@45 fixed.java.lang.Object))
)))
(assert (forall ((w@@46 T@U) ) (!  (=> (and (= (type w@@46) javaTypeType) (UOrdering2 w@@46 fixed.java.lang.String)) (= fixed.java.lang.String w@@46))
 :pattern ( (UOrdering2 w@@46 fixed.java.lang.String))
)))
(assert (forall ((w@@47 T@U) ) (!  (=> (and (= (type w@@47) javaTypeType) (UOrdering2 w@@47 fixed.java.io.Serializable)) (or (or (= fixed.java.io.Serializable w@@47) (UOrdering2 w@@47 fixed.java.lang.Throwable)) (UOrdering2 w@@47 fixed.java.lang.Integer)))
 :pattern ( (UOrdering2 w@@47 fixed.java.io.Serializable))
)))
(assert (forall ((w@@48 T@U) ) (!  (=> (and (= (type w@@48) javaTypeType) (UOrdering2 w@@48 fixed.java.lang.Throwable)) (or (= fixed.java.lang.Throwable w@@48) (UOrdering2 w@@48 fixed.java.lang.Exception)))
 :pattern ( (UOrdering2 w@@48 fixed.java.lang.Throwable))
)))
(assert (forall ((w@@49 T@U) ) (!  (=> (and (= (type w@@49) javaTypeType) (UOrdering2 w@@49 fixed.java.lang.Exception)) (or (= fixed.java.lang.Exception w@@49) (UOrdering2 w@@49 fixed.java.lang.RuntimeException)))
 :pattern ( (UOrdering2 w@@49 fixed.java.lang.Exception))
)))
(assert (forall ((w@@50 T@U) ) (!  (=> (and (= (type w@@50) javaTypeType) (UOrdering2 w@@50 fixed.java.lang.RuntimeException)) (or (or (or (or (= fixed.java.lang.RuntimeException w@@50) (UOrdering2 w@@50 fixed.java.lang.IndexOutOfBoundsException)) (UOrdering2 w@@50 fixed.java.lang.NullPointerException)) (UOrdering2 w@@50 fixed.java.lang.ClassCastException)) (UOrdering2 w@@50 fixed.java.lang.ArithmeticException)))
 :pattern ( (UOrdering2 w@@50 fixed.java.lang.RuntimeException))
)))
(assert (forall ((w@@51 T@U) ) (!  (=> (and (= (type w@@51) javaTypeType) (UOrdering2 w@@51 fixed.java.lang.IndexOutOfBoundsException)) (or (= fixed.java.lang.IndexOutOfBoundsException w@@51) (UOrdering2 w@@51 fixed.java.lang.ArrayIndexOutOfBoundsException)))
 :pattern ( (UOrdering2 w@@51 fixed.java.lang.IndexOutOfBoundsException))
)))
(assert (forall ((w@@52 T@U) ) (!  (=> (and (= (type w@@52) javaTypeType) (UOrdering2 w@@52 fixed.java.lang.ArrayIndexOutOfBoundsException)) (= fixed.java.lang.ArrayIndexOutOfBoundsException w@@52))
 :pattern ( (UOrdering2 w@@52 fixed.java.lang.ArrayIndexOutOfBoundsException))
)))
(assert (forall ((w@@53 T@U) ) (!  (=> (and (= (type w@@53) javaTypeType) (UOrdering2 w@@53 fixed.java.lang.Boolean)) (= fixed.java.lang.Boolean w@@53))
 :pattern ( (UOrdering2 w@@53 fixed.java.lang.Boolean))
)))
(assert (forall ((w@@54 T@U) ) (!  (=> (and (= (type w@@54) javaTypeType) (UOrdering2 w@@54 fixed.java.lang.Comparable)) (or (= fixed.java.lang.Comparable w@@54) (UOrdering2 w@@54 fixed.java.lang.Integer)))
 :pattern ( (UOrdering2 w@@54 fixed.java.lang.Comparable))
)))
(assert (forall ((w@@55 T@U) ) (!  (=> (and (= (type w@@55) javaTypeType) (UOrdering2 w@@55 fixed.java.lang.Integer)) (= fixed.java.lang.Integer w@@55))
 :pattern ( (UOrdering2 w@@55 fixed.java.lang.Integer))
)))
(assert (forall ((w@@56 T@U) ) (!  (=> (and (= (type w@@56) javaTypeType) (UOrdering2 w@@56 fixed.java.lang.NullPointerException)) (= fixed.java.lang.NullPointerException w@@56))
 :pattern ( (UOrdering2 w@@56 fixed.java.lang.NullPointerException))
)))
(assert (forall ((w@@57 T@U) ) (!  (=> (and (= (type w@@57) javaTypeType) (UOrdering2 w@@57 fixed.java.lang.ClassCastException)) (= fixed.java.lang.ClassCastException w@@57))
 :pattern ( (UOrdering2 w@@57 fixed.java.lang.ClassCastException))
)))
(assert (forall ((w@@58 T@U) ) (!  (=> (and (= (type w@@58) javaTypeType) (UOrdering2 w@@58 fixed.sg.edu.nus.comp.tsunami.safe.Safe)) (= fixed.sg.edu.nus.comp.tsunami.safe.Safe w@@58))
 :pattern ( (UOrdering2 w@@58 fixed.sg.edu.nus.comp.tsunami.safe.Safe))
)))
(assert (forall ((w@@59 T@U) ) (!  (=> (and (= (type w@@59) javaTypeType) (UOrdering2 w@@59 fixed.Credential)) (= fixed.Credential w@@59))
 :pattern ( (UOrdering2 w@@59 fixed.Credential))
)))
(assert (forall ((w@@60 T@U) ) (!  (=> (and (= (type w@@60) javaTypeType) (UOrdering2 w@@60 fixed.java.lang.CharSequence)) (= fixed.java.lang.CharSequence w@@60))
 :pattern ( (UOrdering2 w@@60 fixed.java.lang.CharSequence))
)))
(assert (forall ((w@@61 T@U) ) (!  (=> (and (= (type w@@61) javaTypeType) (UOrdering2 w@@61 fixed.java.lang.ArithmeticException)) (= fixed.java.lang.ArithmeticException w@@61))
 :pattern ( (UOrdering2 w@@61 fixed.java.lang.ArithmeticException))
)))
(assert  (and (and (and (and (and (forall ((arg0@@6 T@T) ) (! (= (Ctor (FieldType arg0@@6)) 4)
 :qid |ctor:FieldType|
)) (forall ((arg0@@7 T@T) ) (! (= (FieldTypeInv0 (FieldType arg0@@7)) arg0@@7)
 :qid |typeInv:FieldTypeInv0|
 :pattern ( (FieldType arg0@@7))
))) (= (type fixed.$type) (FieldType javaTypeType))) (= (type fixed.$alloc) (FieldType boolType))) (= (Ctor refType) 5)) (= (type fixed.$null) refType)))
(assert (distinct fixed.$type fixed.$alloc fixed.$null fixed.java.lang.Object fixed.java.lang.String fixed.java.io.Serializable fixed.java.lang.Throwable fixed.java.lang.Exception fixed.java.lang.RuntimeException fixed.java.lang.IndexOutOfBoundsException fixed.java.lang.ArrayIndexOutOfBoundsException fixed.java.lang.Boolean fixed.java.lang.Comparable fixed.java.lang.Integer fixed.java.lang.NullPointerException fixed.java.lang.ClassCastException fixed.sg.edu.nus.comp.tsunami.safe.Safe fixed.Credential fixed.java.lang.CharSequence fixed.java.lang.ArithmeticException)
)
(assert (forall ((x@@5 Int) ) (!  (and (=> (fixed.$intToBool x@@5) (ite (= x@@5 0) false true)) (=> (ite (= x@@5 0) false true) (fixed.$intToBool x@@5)))
 :qid |RSPROCCr.111:15|
 :skolemid |2226|
 :pattern ( (fixed.$intToBool x@@5))
)))
(assert (forall ((x@@6 T@U) ) (!  (=> (= (type x@@6) refType) (and (=> (fixed.$refToBool x@@6) (ite (= x@@6 fixed.$null) false true)) (=> (ite (= x@@6 fixed.$null) false true) (fixed.$refToBool x@@6))))
 :qid |RSPROCCr.115:15|
 :skolemid |2227|
 :pattern ( (fixed.$refToBool x@@6))
)))
(assert (forall ((x@@7 Bool) ) (! (= (fixed.$boolToInt x@@7) (ite  (and (=> x@@7 true) (=> true x@@7)) 1 0))
 :qid |RSPROCCr.119:15|
 :skolemid |2228|
 :pattern ( (fixed.$boolToInt x@@7))
)))
(assert (forall ((x@@8 Real) (y@@1 Real) ) (! (= (fixed.$cmpReal x@@8 y@@1) (ite (> x@@8 y@@1) 1 (ite (< x@@8 y@@1) (- 0 1) 0)))
 :qid |RSPROCCr.123:15|
 :skolemid |2229|
 :pattern ( (fixed.$cmpReal x@@8 y@@1))
)))
(assert (forall ((x@@9 Int) (y@@2 Int) ) (! (= (fixed.$cmpInt x@@9 y@@2) (ite (> x@@9 y@@2) 1 (ite (< x@@9 y@@2) (- 0 1) 0)))
 :qid |RSPROCCr.127:15|
 :skolemid |2230|
 :pattern ( (fixed.$cmpInt x@@9 y@@2))
)))
(assert (forall ((arg0@@8 Int) ) (! (= (type (fixed.$intToRef arg0@@8)) refType)
 :qid |funType:fixed.$intToRef|
 :pattern ( (fixed.$intToRef arg0@@8))
)))
(assert (forall ((index Int) ) (! (not (= (fixed.$intToRef index) fixed.$null))
 :qid |RSPROCCr.131:15|
 :skolemid |2231|
)))
(assert (forall ((i1 Int) (i2 Int) ) (!  (and (=> (= i1 i2) (= (fixed.$intToRef i1) (fixed.$intToRef i2))) (=> (= (fixed.$intToRef i1) (fixed.$intToRef i2)) (= i1 i2)))
 :qid |RSPROCCr.133:15|
 :skolemid |2232|
)))
(assert (forall ((x@@10 Int) ) (!  (and (=> (fixed.$intToBool x@@10) (ite (= x@@10 0) false true)) (=> (ite (= x@@10 0) false true) (fixed.$intToBool x@@10)))
 :qid |RSPROCCr.4013:15|
 :skolemid |2374|
 :pattern ( (fixed.$intToBool x@@10))
)))
(assert (forall ((x@@11 T@U) ) (!  (=> (= (type x@@11) refType) (and (=> (fixed.$refToBool x@@11) (ite (= x@@11 fixed.$null) false true)) (=> (ite (= x@@11 fixed.$null) false true) (fixed.$refToBool x@@11))))
 :qid |RSPROCCr.4017:15|
 :skolemid |2375|
 :pattern ( (fixed.$refToBool x@@11))
)))
(assert (forall ((x@@12 Bool) ) (! (= (fixed.$boolToInt x@@12) (ite  (and (=> x@@12 true) (=> true x@@12)) 1 0))
 :qid |RSPROCCr.4021:15|
 :skolemid |2376|
 :pattern ( (fixed.$boolToInt x@@12))
)))
(assert (forall ((x@@13 Real) (y@@3 Real) ) (! (= (fixed.$cmpReal x@@13 y@@3) (ite (> x@@13 y@@3) 1 (ite (< x@@13 y@@3) (- 0 1) 0)))
 :qid |RSPROCCr.4025:15|
 :skolemid |2377|
 :pattern ( (fixed.$cmpReal x@@13 y@@3))
)))
(assert (forall ((x@@14 Int) (y@@4 Int) ) (! (= (fixed.$cmpInt x@@14 y@@4) (ite (> x@@14 y@@4) 1 (ite (< x@@14 y@@4) (- 0 1) 0)))
 :qid |RSPROCCr.4029:15|
 :skolemid |2378|
 :pattern ( (fixed.$cmpInt x@@14 y@@4))
)))
(assert (forall ((index@@0 Int) ) (! (not (= (fixed.$intToRef index@@0) fixed.$null))
 :qid |RSPROCCr.4033:15|
 :skolemid |2379|
)))
(assert (forall ((i1@@0 Int) (i2@@0 Int) ) (!  (and (=> (= i1@@0 i2@@0) (= (fixed.$intToRef i1@@0) (fixed.$intToRef i2@@0))) (=> (= (fixed.$intToRef i1@@0) (fixed.$intToRef i2@@0)) (= i1@@0 i2@@0)))
 :qid |RSPROCCr.4035:15|
 :skolemid |2380|
)))
(assert  (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (and (= (type inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1) refType) (= (type inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@2) refType)) (forall ((arg0@@9 T@T) ) (! (= (Ctor (MapType0Type arg0@@9)) 6)
 :qid |ctor:MapType0Type|
))) (forall ((arg0@@10 T@T) ) (! (= (MapType0TypeInv0 (MapType0Type arg0@@10)) arg0@@10)
 :qid |typeInv:MapType0TypeInv0|
 :pattern ( (MapType0Type arg0@@10))
))) (forall ((arg0@@11 T@U) (arg1@@0 T@U) (arg2 T@U) ) (! (let (($GenericType__0 (FieldTypeInv0 (type arg2))))
(= (type (MapType0Select arg0@@11 arg1@@0 arg2)) $GenericType__0))
 :qid |funType:MapType0Select|
 :pattern ( (MapType0Select arg0@@11 arg1@@0 arg2))
))) (forall ((arg0@@12 T@U) (arg1@@1 T@U) (arg2@@0 T@U) (arg3 T@U) ) (! (let ((aVar0 (type arg1@@1)))
(= (type (MapType0Store arg0@@12 arg1@@1 arg2@@0 arg3)) (MapType0Type aVar0)))
 :qid |funType:MapType0Store|
 :pattern ( (MapType0Store arg0@@12 arg1@@1 arg2@@0 arg3))
))) (forall ((m T@U) (x0 T@U) (x1 T@U) (val T@U) ) (! (let (($GenericType__0@@0 (FieldTypeInv0 (type x1))))
 (=> (= (type val) $GenericType__0@@0) (= (MapType0Select (MapType0Store m x0 x1 val) x0 x1) val)))
 :qid |mapAx0:MapType0Select|
 :weight 0
))) (and (and (forall ((val@@0 T@U) (m@@0 T@U) (x0@@0 T@U) (x1@@0 T@U) (y0 T@U) (y1 T@U) ) (!  (or (= x0@@0 y0) (= (MapType0Select (MapType0Store m@@0 x0@@0 x1@@0 val@@0) y0 y1) (MapType0Select m@@0 y0 y1)))
 :qid |mapAx1:MapType0Select:0|
 :weight 0
)) (forall ((val@@1 T@U) (m@@1 T@U) (x0@@1 T@U) (x1@@1 T@U) (y0@@0 T@U) (y1@@0 T@U) ) (!  (or (= x1@@1 y1@@0) (= (MapType0Select (MapType0Store m@@1 x0@@1 x1@@1 val@@1) y0@@0 y1@@0) (MapType0Select m@@1 y0@@0 y1@@0)))
 :qid |mapAx1:MapType0Select:1|
 :weight 0
))) (forall ((val@@2 T@U) (m@@2 T@U) (x0@@2 T@U) (x1@@2 T@U) (y0@@1 T@U) (y1@@1 T@U) ) (!  (or true (= (MapType0Select (MapType0Store m@@2 x0@@2 x1@@2 val@@2) y0@@1 y1@@1) (MapType0Select m@@2 y0@@1 y1@@1)))
 :qid |mapAx2:MapType0Select|
 :weight 0
)))) (= (type fixed.$heap@13) (MapType0Type refType))) (= (type fixed.$heap@6) (MapType0Type refType))) (= (type fixed.$heap) (MapType0Type refType))) (= (type inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1) refType)) (= (type $in_parameter__0) refType)) (= (type $in_parameter__1) refType)) (= (type call3formal@$obj@0) refType)) (= (type fixed.$heap@8) (MapType0Type refType))) (= (type fixed.$heap@12) (MapType0Type refType))) (forall ((arg0@@13 T@T) (arg1@@2 T@T) ) (! (= (Ctor (MapType1Type arg0@@13 arg1@@2)) 7)
 :qid |ctor:MapType1Type|
))) (forall ((arg0@@14 T@T) (arg1@@3 T@T) ) (! (= (MapType1TypeInv0 (MapType1Type arg0@@14 arg1@@3)) arg0@@14)
 :qid |typeInv:MapType1TypeInv0|
 :pattern ( (MapType1Type arg0@@14 arg1@@3))
))) (forall ((arg0@@15 T@T) (arg1@@4 T@T) ) (! (= (MapType1TypeInv1 (MapType1Type arg0@@15 arg1@@4)) arg1@@4)
 :qid |typeInv:MapType1TypeInv1|
 :pattern ( (MapType1Type arg0@@15 arg1@@4))
))) (forall ((arg0@@16 T@U) (arg1@@5 T@U) ) (! (let ((aVar1 (MapType1TypeInv1 (type arg0@@16))))
(= (type (MapType1Select arg0@@16 arg1@@5)) aVar1))
 :qid |funType:MapType1Select|
 :pattern ( (MapType1Select arg0@@16 arg1@@5))
))) (forall ((arg0@@17 T@U) (arg1@@6 T@U) (arg2@@1 T@U) ) (! (let ((aVar1@@0 (type arg2@@1)))
(let ((aVar0@@0 (type arg1@@6)))
(= (type (MapType1Store arg0@@17 arg1@@6 arg2@@1)) (MapType1Type aVar0@@0 aVar1@@0))))
 :qid |funType:MapType1Store|
 :pattern ( (MapType1Store arg0@@17 arg1@@6 arg2@@1))
))) (forall ((m@@3 T@U) (x0@@3 T@U) (val@@3 T@U) ) (! (let ((aVar1@@1 (MapType1TypeInv1 (type m@@3))))
 (=> (= (type val@@3) aVar1@@1) (= (MapType1Select (MapType1Store m@@3 x0@@3 val@@3) x0@@3) val@@3)))
 :qid |mapAx0:MapType1Select|
 :weight 0
))) (and (forall ((val@@4 T@U) (m@@4 T@U) (x0@@4 T@U) (y0@@2 T@U) ) (!  (or (= x0@@4 y0@@2) (= (MapType1Select (MapType1Store m@@4 x0@@4 val@@4) y0@@2) (MapType1Select m@@4 y0@@2)))
 :qid |mapAx1:MapType1Select:0|
 :weight 0
)) (forall ((val@@5 T@U) (m@@5 T@U) (x0@@5 T@U) (y0@@3 T@U) ) (!  (or true (= (MapType1Select (MapType1Store m@@5 x0@@5 val@@5) y0@@3) (MapType1Select m@@5 y0@@3)))
 :qid |mapAx2:MapType1Select|
 :weight 0
)))) (= (type fixed.$arrSizeHeap) (MapType1Type refType intType))) (= (type fixed.$stringSizeHeap) (MapType1Type refType intType))) (= (type inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2) refType)) (= (type call3formal@$obj@0@@0) refType)) (= (type fixed.$heap@10) (MapType0Type refType))) (= (type fixed.$heap@11) (MapType0Type refType))) (= (type fixed.$intArrHeap) (MapType1Type refType (MapType1Type intType intType)))) (= (type fixed.char$lp$$rp$$java.lang.String$chars259) (FieldType refType))) (= (type inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2) refType)) (= (type call3formal@$obj@0@@1) refType)) (= (type fixed.$heap@9) (MapType0Type refType))) (= (type call3formal@$obj@0@@2) refType)) (= (type fixed.$heap@7) (MapType0Type refType))) (= (type fixed.$heap@17) (MapType0Type refType))) (= (type inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2) refType)) (= (type call3formal@$obj@0@@3) refType)) (= (type fixed.$heap@15) (MapType0Type refType))) (= (type fixed.$heap@16) (MapType0Type refType))) (= (type inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2) refType)) (= (type call3formal@$obj@0@@4) refType)) (= (type fixed.$heap@14) (MapType0Type refType))) (= (type fixed.$heap@5) (MapType0Type refType))) (= (type call3formal@$obj@0@@5) refType)) (= (type fixed.$heap@1) (MapType0Type refType))) (= (type inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2) refType)) (= (type call3formal@$obj@0@@6) refType)) (= (type fixed.$heap@3) (MapType0Type refType))) (= (type fixed.$heap@4) (MapType0Type refType))) (= (type inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2) refType)) (= (type call3formal@$obj@0@@7) refType)) (= (type fixed.$heap@2) (MapType0Type refType))) (= (type call3formal@$obj@0@@8) refType)) (= (type fixed.$heap@0) (MapType0Type refType))) (= (type inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2) refType)) (= (type call3formal@$obj@0@@9) refType)) (= (type fixed.$heap@19) (MapType0Type refType))) (= (type fixed.$heap@20) (MapType0Type refType))) (= (type inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2) refType)) (= (type call3formal@$obj@0@@10) refType)) (= (type fixed.$heap@18) (MapType0Type refType))))
(push 1)
(set-info :boogie-vc-id PROC_.Credential$stringEquals_original$java.lang.String_java.lang.String_EQ_unsafe__xx__fixed)
(assert (not
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block20_dummy_correct  (=> (! (and %lbl%+348730 true) :lblpos +348730) true)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block20_correct  (=> (! (and %lbl%+348704 true) :lblpos +348704) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_z0@2 (fixed.$bitAnd 1 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$z1)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_i5@2 (+ 0 1))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block20_dummy_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block19_correct  (=> (! (and %lbl%+348706 true) :lblpos +348706) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block20_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon29_Then_correct  (=> (! (and %lbl%+348707 true) :lblpos +348707) (=> (not (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block19_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon17_correct  (=> (! (and %lbl%+348705 true) :lblpos +348705) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block20_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon29_Else_correct  (=> (! (and %lbl%+348729 true) :lblpos +348729) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon17_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14$2_correct  (=> (! (and %lbl%+348724 true) :lblpos +348724) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon29_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon29_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct  (=> (! (and %lbl%+348723 true) :lblpos +348723) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14$2_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$block2_correct  (=> (! (and %lbl%+348722 true) :lblpos +348722) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon3_correct  (=> (! (and %lbl%+348721 true) :lblpos +348721) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2) (int_2_U 0)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$block2_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Then_correct  (=> (! (and %lbl%+348720 true) :lblpos +348720) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2))) (>= 0 0)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon3_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Else_correct  (=> (! (and %lbl%+348719 true) :lblpos +348719) (=> (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2))) (>= 0 0))) (=> (and (= fixed.$objIndex@16 (+ fixed.$objIndex@15 1)) (not (= call3formal@$obj@0@@9 fixed.$null))) (=> (and (and (not (U_2_bool (MapType0Select fixed.$heap@19 call3formal@$obj@0@@9 fixed.$alloc))) (= fixed.$heap@20 (MapType0Store (MapType0Store fixed.$heap@19 call3formal@$obj@0@@9 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@9 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (and (= call3formal@$obj@0@@9 (fixed.$intToRef fixed.$objIndex@15)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 0))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon0_correct  (=> (! (and %lbl%+348718 true) :lblpos +348718) (=> (and (forall ((T T@U) ) (!  (=> (= (type T) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@19 fixed.$null fixed.$type) T))
 :qid |RSPROCCr.7389:20|
 :skolemid |2456|
 :no-pattern (type T)
 :no-pattern (U_2_int T)
 :no-pattern (U_2_bool T)
)) (forall ((_r T@U) ) (!  (=> (= (type _r) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r)) 0))
 :qid |RSPROCCr.7390:20|
 :skolemid |2457|
 :no-pattern (type _r)
 :no-pattern (U_2_int _r)
 :no-pattern (U_2_bool _r)
))) (=> (and (and (forall ((_r@@0 T@U) ) (!  (=> (= (type _r@@0) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@0)) 0))
 :qid |RSPROCCr.7391:20|
 :skolemid |2458|
 :no-pattern (type _r@@0)
 :no-pattern (U_2_int _r@@0)
 :no-pattern (U_2_bool _r@@0)
)) (UOrdering2 (MapType0Select fixed.$heap@19 $in_parameter__1 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__1 fixed.$null)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2 (MapType0Select fixed.$heap@19 $in_parameter__1 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Else_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Entry_correct  (=> (! (and %lbl%+348717 true) :lblpos +348717) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon0_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14$1_correct  (=> (! (and %lbl%+348716 true) :lblpos +348716) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct  (=> (! (and %lbl%+348715 true) :lblpos +348715) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14$1_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$block2_correct  (=> (! (and %lbl%+348714 true) :lblpos +348714) (=> (= fixed.$objIndex@15 fixed.$objIndex) (=> (and (= fixed.$heap@19 fixed.$heap) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon3_correct  (=> (! (and %lbl%+348713 true) :lblpos +348713) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2) (int_2_U inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$i2@2)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$block2_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Then_correct  (=> (! (and %lbl%+348712 true) :lblpos +348712) (=> (and (< inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$i2@2 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2))) (>= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$i2@2 0)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon3_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Else_correct  (=> (! (and %lbl%+348711 true) :lblpos +348711) (=> (not (and (< inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$i2@2 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2))) (>= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$i2@2 0))) (=> (and (and (and (= fixed.$objIndex@14 (+ fixed.$objIndex 1)) (not (= call3formal@$obj@0@@10 fixed.$null))) (and (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@10 fixed.$alloc))) (= fixed.$heap@18 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@10 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@10 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)))) (and (and (= call3formal@$obj@0@@10 (fixed.$intToRef fixed.$objIndex)) (= fixed.$objIndex@15 fixed.$objIndex@14)) (and (= fixed.$heap@19 fixed.$heap@18) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 0)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon0_correct  (=> (! (and %lbl%+348710 true) :lblpos +348710) (=> (and (forall ((T@@0 T@U) ) (!  (=> (= (type T@@0) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@0))
 :qid |RSPROCCr.7327:20|
 :skolemid |2453|
 :no-pattern (type T@@0)
 :no-pattern (U_2_int T@@0)
 :no-pattern (U_2_bool T@@0)
)) (forall ((_r@@1 T@U) ) (!  (=> (= (type _r@@1) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@1)) 0))
 :qid |RSPROCCr.7328:20|
 :skolemid |2454|
 :no-pattern (type _r@@1)
 :no-pattern (U_2_int _r@@1)
 :no-pattern (U_2_bool _r@@1)
))) (=> (and (and (forall ((_r@@2 T@U) ) (!  (=> (= (type _r@@2) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@2)) 0))
 :qid |RSPROCCr.7329:20|
 :skolemid |2455|
 :no-pattern (type _r@@2)
 :no-pattern (U_2_int _r@@2)
 :no-pattern (U_2_bool _r@@2)
)) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__0 fixed.$null)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2 (MapType0Select fixed.$heap $in_parameter__0 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Else_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Entry_correct  (=> (! (and %lbl%+348709 true) :lblpos +348709) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon0_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14_correct  (=> (! (and %lbl%+348708 true) :lblpos +348708) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$out_$i2@2 (fixed.$modInt 0 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Entry_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon28_Then_correct  (=> (! (and %lbl%+348725 true) :lblpos +348725) (=> (not (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 0)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon14_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block20_dummy_correct  (=> (! (and %lbl%+348771 true) :lblpos +348771) true)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block20_correct  (=> (! (and %lbl%+348757 true) :lblpos +348757) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$z0@1 (fixed.$bitAnd 1 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z1)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i5@1 (+ 0 1))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block20_dummy_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block19_correct  (=> (! (and %lbl%+348759 true) :lblpos +348759) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block20_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon29_Then_correct  (=> (! (and %lbl%+348758 true) :lblpos +348758) (=> (not (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block19_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon17_correct  (=> (! (and %lbl%+348756 true) :lblpos +348756) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block20_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon29_Else_correct  (=> (! (and %lbl%+348755 true) :lblpos +348755) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon17_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$2_correct  (=> (! (and %lbl%+348754 true) :lblpos +348754) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon29_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon29_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct  (=> (! (and %lbl%+348753 true) :lblpos +348753) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$2_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$block2_correct  (=> (! (and %lbl%+348752 true) :lblpos +348752) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon3_correct  (=> (! (and %lbl%+348751 true) :lblpos +348751) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2) (int_2_U 0)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$block2_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Then_correct  (=> (! (and %lbl%+348750 true) :lblpos +348750) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2))) (>= 0 0)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon3_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Else_correct  (=> (! (and %lbl%+348749 true) :lblpos +348749) (=> (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2))) (>= 0 0))) (=> (and (= fixed.$objIndex@4 (+ fixed.$objIndex@3 1)) (not (= call3formal@$obj@0@@6 fixed.$null))) (=> (and (and (not (U_2_bool (MapType0Select fixed.$heap@3 call3formal@$obj@0@@6 fixed.$alloc))) (= fixed.$heap@4 (MapType0Store (MapType0Store fixed.$heap@3 call3formal@$obj@0@@6 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@6 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException))) (and (= call3formal@$obj@0@@6 (fixed.$intToRef fixed.$objIndex@3)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 0))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon0_correct  (=> (! (and %lbl%+348748 true) :lblpos +348748) (=> (and (forall ((T@@1 T@U) ) (!  (=> (= (type T@@1) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@3 fixed.$null fixed.$type) T@@1))
 :qid |RSPROCCr.7597:20|
 :skolemid |2462|
 :no-pattern (type T@@1)
 :no-pattern (U_2_int T@@1)
 :no-pattern (U_2_bool T@@1)
)) (forall ((_r@@3 T@U) ) (!  (=> (= (type _r@@3) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@3)) 0))
 :qid |RSPROCCr.7598:20|
 :skolemid |2463|
 :no-pattern (type _r@@3)
 :no-pattern (U_2_int _r@@3)
 :no-pattern (U_2_bool _r@@3)
))) (=> (and (and (forall ((_r@@4 T@U) ) (!  (=> (= (type _r@@4) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@4)) 0))
 :qid |RSPROCCr.7599:20|
 :skolemid |2464|
 :no-pattern (type _r@@4)
 :no-pattern (U_2_int _r@@4)
 :no-pattern (U_2_bool _r@@4)
)) (UOrdering2 (MapType0Select fixed.$heap@3 $in_parameter__1 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__1 fixed.$null)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2 (MapType0Select fixed.$heap@3 $in_parameter__1 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Else_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Entry_correct  (=> (! (and %lbl%+348747 true) :lblpos +348747) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon0_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$1_correct  (=> (! (and %lbl%+348746 true) :lblpos +348746) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct  (=> (! (and %lbl%+348745 true) :lblpos +348745) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$1_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$block2_correct  (=> (! (and %lbl%+348744 true) :lblpos +348744) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2) (=> (and (= fixed.$objIndex@3 fixed.$objIndex) (= fixed.$heap@3 fixed.$heap)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon3_correct  (=> (! (and %lbl%+348743 true) :lblpos +348743) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2) (int_2_U inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$block2_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Then_correct  (=> (! (and %lbl%+348742 true) :lblpos +348742) (=> (and (< inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2))) (>= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 0)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon3_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Else_correct  (=> (! (and %lbl%+348741 true) :lblpos +348741) (=> (not (and (< inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2))) (>= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 0))) (=> (and (and (and (= fixed.$objIndex@2 (+ fixed.$objIndex 1)) (not (= call3formal@$obj@0@@7 fixed.$null))) (and (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@7 fixed.$alloc))) (= fixed.$heap@2 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@7 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@7 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)))) (and (and (= call3formal@$obj@0@@7 (fixed.$intToRef fixed.$objIndex)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 0)) (and (= fixed.$objIndex@3 fixed.$objIndex@2) (= fixed.$heap@3 fixed.$heap@2)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon0_correct  (=> (! (and %lbl%+348740 true) :lblpos +348740) (=> (and (forall ((T@@2 T@U) ) (!  (=> (= (type T@@2) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@2))
 :qid |RSPROCCr.7535:20|
 :skolemid |2459|
 :no-pattern (type T@@2)
 :no-pattern (U_2_int T@@2)
 :no-pattern (U_2_bool T@@2)
)) (forall ((_r@@5 T@U) ) (!  (=> (= (type _r@@5) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@5)) 0))
 :qid |RSPROCCr.7536:20|
 :skolemid |2460|
 :no-pattern (type _r@@5)
 :no-pattern (U_2_int _r@@5)
 :no-pattern (U_2_bool _r@@5)
))) (=> (and (and (forall ((_r@@6 T@U) ) (!  (=> (= (type _r@@6) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@6)) 0))
 :qid |RSPROCCr.7537:20|
 :skolemid |2461|
 :no-pattern (type _r@@6)
 :no-pattern (U_2_int _r@@6)
 :no-pattern (U_2_bool _r@@6)
)) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__0 fixed.$null)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2 (MapType0Select fixed.$heap $in_parameter__0 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Else_correct))))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Entry_correct  (=> (! (and %lbl%+348739 true) :lblpos +348739) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon0_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_correct  (=> (! (and %lbl%+348738 true) :lblpos +348738) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 (fixed.$modInt 0 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Entry_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon28_Then_correct  (=> (! (and %lbl%+348737 true) :lblpos +348737) (=> (not (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 0)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14_dummy_correct  (=> (! (and %lbl%+348827 true) :lblpos +348827) true)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$3_correct  (=> (! (and %lbl%+348822 true) :lblpos +348822) (=> (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_z2@2 (fixed.$bitAnd 1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$z0)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_i7@2 (+ 0 1))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14_dummy_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$Return_correct  (=> (! (and %lbl%+348821 true) :lblpos +348821) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$3_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block33_correct  (=> (! (and %lbl%+348818 true) :lblpos +348818) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$Return_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block32_correct  (=> (! (and %lbl%+348817 true) :lblpos +348817) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block33_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon6_correct  (=> (! (and %lbl%+348816 true) :lblpos +348816) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block32_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon8_Else_correct  (=> (! (and %lbl%+348815 true) :lblpos +348815) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b3@2 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon6_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon8_Then_correct  (=> (! (and %lbl%+348819 true) :lblpos +348819) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b3@2 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block32_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block31_correct  (=> (! (and %lbl%+348814 true) :lblpos +348814) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b3@2 (fixed.$cmpInt inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2)) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon8_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon8_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon3_correct  (=> (! (and %lbl%+348813 true) :lblpos +348813) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block31_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon7_Else_correct  (=> (! (and %lbl%+348812 true) :lblpos +348812) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b2@2 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon7_Then_correct  (=> (! (and %lbl%+348820 true) :lblpos +348820) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b2@2 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$block31_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon0_correct  (=> (! (and %lbl%+348811 true) :lblpos +348811) (=> (and (and (forall ((T@@3 T@U) ) (!  (=> (= (type T@@3) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@17 fixed.$null fixed.$type) T@@3))
 :qid |RSPROCCr.8042:20|
 :skolemid |2474|
 :no-pattern (type T@@3)
 :no-pattern (U_2_int T@@3)
 :no-pattern (U_2_bool T@@3)
)) (forall ((_r@@7 T@U) ) (!  (=> (= (type _r@@7) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@7)) 0))
 :qid |RSPROCCr.8043:20|
 :skolemid |2475|
 :no-pattern (type _r@@7)
 :no-pattern (U_2_int _r@@7)
 :no-pattern (U_2_bool _r@@7)
))) (and (forall ((_r@@8 T@U) ) (!  (=> (= (type _r@@8) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@8)) 0))
 :qid |RSPROCCr.8044:20|
 :skolemid |2476|
 :no-pattern (type _r@@8)
 :no-pattern (U_2_int _r@@8)
 :no-pattern (U_2_bool _r@@8)
)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$$b2@2 (fixed.$cmpInt inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon7_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon7_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$Entry_correct  (=> (! (and %lbl%+348810 true) :lblpos +348810) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$2_correct  (=> (! (and %lbl%+348809 true) :lblpos +348809) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$0$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct  (=> (! (and %lbl%+348808 true) :lblpos +348808) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$2_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$block2_correct  (=> (! (and %lbl%+348807 true) :lblpos +348807) (=> (and (= fixed.$heap@17 fixed.$heap@15) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon3_correct  (=> (! (and %lbl%+348806 true) :lblpos +348806) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2) (int_2_U 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$block2_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Then_correct  (=> (! (and %lbl%+348805 true) :lblpos +348805) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2))) (>= 0 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Else_correct  (=> (! (and %lbl%+348804 true) :lblpos +348804) (=> (and (and (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2))) (>= 0 0))) (= fixed.$objIndex@13 (+ fixed.$objIndex@12 1))) (and (not (= call3formal@$obj@0@@3 fixed.$null)) (not (U_2_bool (MapType0Select fixed.$heap@15 call3formal@$obj@0@@3 fixed.$alloc))))) (and (and (= fixed.$heap@16 (MapType0Store (MapType0Store fixed.$heap@15 call3formal@$obj@0@@3 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@3 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)) (= call3formal@$obj@0@@3 (fixed.$intToRef fixed.$objIndex@12))) (and (= fixed.$heap@17 fixed.$heap@16) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$return@2 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Return_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon0_correct  (=> (! (and %lbl%+348803 true) :lblpos +348803) (=> (and (forall ((T@@4 T@U) ) (!  (=> (= (type T@@4) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@15 fixed.$null fixed.$type) T@@4))
 :qid |RSPROCCr.7980:20|
 :skolemid |2471|
 :no-pattern (type T@@4)
 :no-pattern (U_2_int T@@4)
 :no-pattern (U_2_bool T@@4)
)) (forall ((_r@@9 T@U) ) (!  (=> (= (type _r@@9) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@9)) 0))
 :qid |RSPROCCr.7981:20|
 :skolemid |2472|
 :no-pattern (type _r@@9)
 :no-pattern (U_2_int _r@@9)
 :no-pattern (U_2_bool _r@@9)
))) (=> (and (and (forall ((_r@@10 T@U) ) (!  (=> (= (type _r@@10) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@10)) 0))
 :qid |RSPROCCr.7982:20|
 :skolemid |2473|
 :no-pattern (type _r@@10)
 :no-pattern (U_2_int _r@@10)
 :no-pattern (U_2_bool _r@@10)
)) (UOrdering2 (MapType0Select fixed.$heap@15 $in_parameter__1 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__1 fixed.$null)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$$r1@2 (MapType0Select fixed.$heap@15 $in_parameter__1 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon4_Else_correct))))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Entry_correct  (=> (! (and %lbl%+348802 true) :lblpos +348802) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$1_correct  (=> (! (and %lbl%+348801 true) :lblpos +348801) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$1$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct  (=> (! (and %lbl%+348800 true) :lblpos +348800) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14$1_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$block2_correct  (=> (! (and %lbl%+348799 true) :lblpos +348799) (=> (= fixed.$heap@15 fixed.$heap) (=> (and (= fixed.$objIndex@12 fixed.$objIndex) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon3_correct  (=> (! (and %lbl%+348798 true) :lblpos +348798) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2) (int_2_U inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_$i2@2)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$block2_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Then_correct  (=> (! (and %lbl%+348797 true) :lblpos +348797) (=> (and (< inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_$i2@2 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2))) (>= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_$i2@2 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Else_correct  (=> (! (and %lbl%+348796 true) :lblpos +348796) (=> (not (and (< inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_$i2@2 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2))) (>= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_$i2@2 0))) (=> (and (and (and (= fixed.$objIndex@11 (+ fixed.$objIndex 1)) (not (= call3formal@$obj@0@@4 fixed.$null))) (and (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@4 fixed.$alloc))) (= fixed.$heap@14 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@4 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@4 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)))) (and (and (= call3formal@$obj@0@@4 (fixed.$intToRef fixed.$objIndex)) (= fixed.$heap@15 fixed.$heap@14)) (and (= fixed.$objIndex@12 fixed.$objIndex@11) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$return@2 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Return_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon0_correct  (=> (! (and %lbl%+348795 true) :lblpos +348795) (=> (and (forall ((T@@5 T@U) ) (!  (=> (= (type T@@5) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@5))
 :qid |RSPROCCr.7916:20|
 :skolemid |2468|
 :no-pattern (type T@@5)
 :no-pattern (U_2_int T@@5)
 :no-pattern (U_2_bool T@@5)
)) (forall ((_r@@11 T@U) ) (!  (=> (= (type _r@@11) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@11)) 0))
 :qid |RSPROCCr.7917:20|
 :skolemid |2469|
 :no-pattern (type _r@@11)
 :no-pattern (U_2_int _r@@11)
 :no-pattern (U_2_bool _r@@11)
))) (=> (and (and (forall ((_r@@12 T@U) ) (!  (=> (= (type _r@@12) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@12)) 0))
 :qid |RSPROCCr.7918:20|
 :skolemid |2470|
 :no-pattern (type _r@@12)
 :no-pattern (U_2_int _r@@12)
 :no-pattern (U_2_bool _r@@12)
)) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__0 fixed.$null)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$$r1@2 (MapType0Select fixed.$heap $in_parameter__0 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon4_Else_correct))))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Entry_correct  (=> (! (and %lbl%+348794 true) :lblpos +348794) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14_correct  (=> (! (and %lbl%+348793 true) :lblpos +348793) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$out_$i2@2 (fixed.$modInt 0 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$0$Entry_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon22_Then_correct  (=> (! (and %lbl%+348823 true) :lblpos +348823) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon14_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_dummy_correct  (=> (! (and %lbl%+348878 true) :lblpos +348878) true)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$3_correct  (=> (! (and %lbl%+348864 true) :lblpos +348864) (=> (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$z2@1 (fixed.$bitAnd 1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$z0)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i7@1 (+ 0 1))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_dummy_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$Return_correct  (=> (! (and %lbl%+348863 true) :lblpos +348863) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$3_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block33_correct  (=> (! (and %lbl%+348860 true) :lblpos +348860) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$Return_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block32_correct  (=> (! (and %lbl%+348859 true) :lblpos +348859) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block33_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon6_correct  (=> (! (and %lbl%+348858 true) :lblpos +348858) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block32_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon8_Else_correct  (=> (! (and %lbl%+348857 true) :lblpos +348857) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b3@2 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon6_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon8_Then_correct  (=> (! (and %lbl%+348861 true) :lblpos +348861) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b3@2 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block32_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block31_correct  (=> (! (and %lbl%+348856 true) :lblpos +348856) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b3@2 (fixed.$cmpInt inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2)) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon8_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon8_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon3_correct  (=> (! (and %lbl%+348855 true) :lblpos +348855) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block31_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon7_Else_correct  (=> (! (and %lbl%+348854 true) :lblpos +348854) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b2@2 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon7_Then_correct  (=> (! (and %lbl%+348862 true) :lblpos +348862) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b2@2 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$block31_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon0_correct  (=> (! (and %lbl%+348853 true) :lblpos +348853) (=> (and (and (forall ((T@@6 T@U) ) (!  (=> (= (type T@@6) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@12 fixed.$null fixed.$type) T@@6))
 :qid |RSPROCCr.8337:20|
 :skolemid |2483|
 :no-pattern (type T@@6)
 :no-pattern (U_2_int T@@6)
 :no-pattern (U_2_bool T@@6)
)) (forall ((_r@@13 T@U) ) (!  (=> (= (type _r@@13) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@13)) 0))
 :qid |RSPROCCr.8338:20|
 :skolemid |2484|
 :no-pattern (type _r@@13)
 :no-pattern (U_2_int _r@@13)
 :no-pattern (U_2_bool _r@@13)
))) (and (forall ((_r@@14 T@U) ) (!  (=> (= (type _r@@14) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@14)) 0))
 :qid |RSPROCCr.8339:20|
 :skolemid |2485|
 :no-pattern (type _r@@14)
 :no-pattern (U_2_int _r@@14)
 :no-pattern (U_2_bool _r@@14)
)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$$b2@2 (fixed.$cmpInt inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon7_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon7_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$Entry_correct  (=> (! (and %lbl%+348852 true) :lblpos +348852) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$2_correct  (=> (! (and %lbl%+348851 true) :lblpos +348851) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$eq$long_long$1$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct  (=> (! (and %lbl%+348850 true) :lblpos +348850) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$2_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$block2_correct  (=> (! (and %lbl%+348849 true) :lblpos +348849) (=> (and (= fixed.$heap@12 fixed.$heap@10) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon3_correct  (=> (! (and %lbl%+348848 true) :lblpos +348848) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2) (int_2_U 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$block2_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Then_correct  (=> (! (and %lbl%+348847 true) :lblpos +348847) (=> (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2))) (>= 0 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Else_correct  (=> (! (and %lbl%+348846 true) :lblpos +348846) (=> (and (and (and (not (and (< 0 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2))) (>= 0 0))) (= fixed.$objIndex@9 (+ fixed.$objIndex@8 1))) (and (not (= call3formal@$obj@0@@0 fixed.$null)) (not (U_2_bool (MapType0Select fixed.$heap@10 call3formal@$obj@0@@0 fixed.$alloc))))) (and (and (= fixed.$heap@11 (MapType0Store (MapType0Store fixed.$heap@10 call3formal@$obj@0@@0 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@0 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)) (= call3formal@$obj@0@@0 (fixed.$intToRef fixed.$objIndex@8))) (and (= fixed.$heap@12 fixed.$heap@11) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$return@2 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Return_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon0_correct  (=> (! (and %lbl%+348845 true) :lblpos +348845) (=> (and (forall ((T@@7 T@U) ) (!  (=> (= (type T@@7) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap@10 fixed.$null fixed.$type) T@@7))
 :qid |RSPROCCr.8275:20|
 :skolemid |2480|
 :no-pattern (type T@@7)
 :no-pattern (U_2_int T@@7)
 :no-pattern (U_2_bool T@@7)
)) (forall ((_r@@15 T@U) ) (!  (=> (= (type _r@@15) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@15)) 0))
 :qid |RSPROCCr.8276:20|
 :skolemid |2481|
 :no-pattern (type _r@@15)
 :no-pattern (U_2_int _r@@15)
 :no-pattern (U_2_bool _r@@15)
))) (=> (and (and (forall ((_r@@16 T@U) ) (!  (=> (= (type _r@@16) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@16)) 0))
 :qid |RSPROCCr.8277:20|
 :skolemid |2482|
 :no-pattern (type _r@@16)
 :no-pattern (U_2_int _r@@16)
 :no-pattern (U_2_bool _r@@16)
)) (UOrdering2 (MapType0Select fixed.$heap@10 $in_parameter__1 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__1 fixed.$null)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$$r1@2 (MapType0Select fixed.$heap@10 $in_parameter__1 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon4_Else_correct))))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Entry_correct  (=> (! (and %lbl%+348844 true) :lblpos +348844) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$1_correct  (=> (! (and %lbl%+348843 true) :lblpos +348843) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$3$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct  (=> (! (and %lbl%+348842 true) :lblpos +348842) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14$1_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$block2_correct  (=> (! (and %lbl%+348841 true) :lblpos +348841) (=> (= fixed.$heap@10 fixed.$heap) (=> (and (= fixed.$objIndex@8 fixed.$objIndex) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon3_correct  (=> (! (and %lbl%+348840 true) :lblpos +348840) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$c1@2 (U_2_int (MapType1Select (MapType1Select fixed.$intArrHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2) (int_2_U inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$block2_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Then_correct  (=> (! (and %lbl%+348839 true) :lblpos +348839) (=> (and (< inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2))) (>= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Else_correct  (=> (! (and %lbl%+348838 true) :lblpos +348838) (=> (not (and (< inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 (U_2_int (MapType1Select fixed.$arrSizeHeap inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2))) (>= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 0))) (=> (and (and (and (= fixed.$objIndex@7 (+ fixed.$objIndex 1)) (not (= call3formal@$obj@0@@1 fixed.$null))) (and (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@1 fixed.$alloc))) (= fixed.$heap@9 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@1 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@1 fixed.$type fixed.java.lang.ArrayIndexOutOfBoundsException)))) (and (and (= call3formal@$obj@0@@1 (fixed.$intToRef fixed.$objIndex)) (= fixed.$heap@10 fixed.$heap@9)) (and (= fixed.$objIndex@8 fixed.$objIndex@7) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$return@2 0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Return_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon0_correct  (=> (! (and %lbl%+348837 true) :lblpos +348837) (=> (and (forall ((T@@8 T@U) ) (!  (=> (= (type T@@8) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@8))
 :qid |RSPROCCr.8211:20|
 :skolemid |2477|
 :no-pattern (type T@@8)
 :no-pattern (U_2_int T@@8)
 :no-pattern (U_2_bool T@@8)
)) (forall ((_r@@17 T@U) ) (!  (=> (= (type _r@@17) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@17)) 0))
 :qid |RSPROCCr.8212:20|
 :skolemid |2478|
 :no-pattern (type _r@@17)
 :no-pattern (U_2_int _r@@17)
 :no-pattern (U_2_bool _r@@17)
))) (=> (and (and (forall ((_r@@18 T@U) ) (!  (=> (= (type _r@@18) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@18)) 0))
 :qid |RSPROCCr.8213:20|
 :skolemid |2479|
 :no-pattern (type _r@@18)
 :no-pattern (U_2_int _r@@18)
 :no-pattern (U_2_bool _r@@18)
)) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String)) (and (not (= $in_parameter__0 fixed.$null)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$$r1@2 (MapType0Select fixed.$heap $in_parameter__0 fixed.char$lp$$rp$$java.lang.String$chars259)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon4_Else_correct))))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Entry_correct  (=> (! (and %lbl%+348836 true) :lblpos +348836) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_correct  (=> (! (and %lbl%+348835 true) :lblpos +348835) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$i2@1 (fixed.$modInt 0 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$java.lang.String$charAt$int$2$Entry_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon22_Then_correct  (=> (! (and %lbl%+348834 true) :lblpos +348834) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 0)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon14_correct))))
(let ((GeneratedUnifiedExit_correct  (=> (! (and %lbl%+356634 true) :lblpos +356634) (! (or %lbl%@363015  (and (and (and AA_TEMP383@2 AA_TEMP382@2) AA_TEMP381@2) AA_TEMP380@2)) :lblneg @363015))))
(let ((AA_INSTR_EQ_BODY$2_correct  (=> (! (and %lbl%+348881 true) :lblpos +348881) (=> (and (and (and (and (and (=> AA_TEMP380@1 (or AA_TEMP380@0 (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@2))) (=> (or AA_TEMP380@0 (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@2)) AA_TEMP380@1)) (and (=> AA_TEMP381@1 (or AA_TEMP381@0 (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@2))) (=> (or AA_TEMP381@0 (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@2)) AA_TEMP381@1))) (and (=> AA_TEMP382@1 (or AA_TEMP382@0 (= fixed.$objIndex@10 fixed.$objIndex@10))) (=> (or AA_TEMP382@0 (= fixed.$objIndex@10 fixed.$objIndex@10)) AA_TEMP382@1))) (and (=> AA_TEMP383@1 (or AA_TEMP383@0 (forall ((r T@U) (f T@U) ) (! (let ((_ty (FieldTypeInv0 (type f))))
 (=> (and (= (type r) refType) (= (type f) (FieldType _ty))) (or (= (MapType0Select fixed.$heap@13 r f) (MapType0Select fixed.$heap@6 r f)) (not (U_2_bool (MapType0Select fixed.$heap r fixed.$alloc))))))
 :qid |RSPROCCr.8523:20|
 :skolemid |2489|
 :no-pattern (type r)
 :no-pattern (type f)
 :no-pattern (U_2_int r)
 :no-pattern (U_2_bool r)
 :no-pattern (U_2_int f)
 :no-pattern (U_2_bool f)
)))) (=> (or AA_TEMP383@0 (forall ((r@@0 T@U) (f@@0 T@U) ) (! (let ((_ty@@0 (FieldTypeInv0 (type f@@0))))
 (=> (and (= (type r@@0) refType) (= (type f@@0) (FieldType _ty@@0))) (or (= (MapType0Select fixed.$heap@13 r@@0 f@@0) (MapType0Select fixed.$heap@6 r@@0 f@@0)) (not (U_2_bool (MapType0Select fixed.$heap r@@0 fixed.$alloc))))))
 :qid |RSPROCCr.8523:20|
 :skolemid |2489|
 :no-pattern (type r@@0)
 :no-pattern (type f@@0)
 :no-pattern (U_2_int r@@0)
 :no-pattern (U_2_bool r@@0)
 :no-pattern (U_2_int f@@0)
 :no-pattern (U_2_bool f@@0)
))) AA_TEMP383@1))) (and (and (and (=> AA_TEMP380@2 AA_TEMP380@1) (=> AA_TEMP380@1 AA_TEMP380@2)) (and (=> AA_TEMP381@2 AA_TEMP381@1) (=> AA_TEMP381@1 AA_TEMP381@2))) (and (and (=> AA_TEMP382@2 AA_TEMP382@1) (=> AA_TEMP382@1 AA_TEMP382@2)) (and (=> AA_TEMP383@2 AA_TEMP383@1) (=> AA_TEMP383@1 AA_TEMP383@2))))) GeneratedUnifiedExit_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Return_correct  (=> (! (and %lbl%+348880 true) :lblpos +348880) AA_INSTR_EQ_BODY$2_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon22_Else_correct  (=> (! (and %lbl%+348833 true) :lblpos +348833) (=> (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 0) (= fixed.$objIndex@6 (+ fixed.$objIndex 1))) (=> (and (and (and (not (= call3formal@$obj@0 fixed.$null)) (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0 fixed.$alloc)))) (and (= fixed.$heap@8 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0 fixed.$alloc (bool_2_U true)) call3formal@$obj@0 fixed.$type fixed.java.lang.ArithmeticException)) (= call3formal@$obj@0 (fixed.$intToRef fixed.$objIndex)))) (and (and (= fixed.$heap@13 fixed.$heap@8) (= fixed.$objIndex@10 fixed.$objIndex@6)) (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@2 0) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@2 call3formal@$obj@0)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Return_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon11_correct  (=> (! (and %lbl%+348832 true) :lblpos +348832) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon22_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon22_Else_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon21_Else_correct  (=> (! (and %lbl%+348831 true) :lblpos +348831) (=> (> inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon11_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block72_correct  (=> (! (and %lbl%+348779 true) :lblpos +348779) (=> (and (and (= fixed.$heap@13 fixed.$heap) (= fixed.$objIndex@10 fixed.$objIndex)) (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@2 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Return_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block71$1_correct  (=> (! (and %lbl%+348874 true) :lblpos +348874) (=> (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$and$boolean_boolean$0$$z2@2) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1 fixed.$null)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block72_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$and$boolean_boolean$0$Return_correct  (=> (! (and %lbl%+348873 true) :lblpos +348873) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block71$1_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$and$boolean_boolean$0$block17_correct  (=> (! (and %lbl%+348872 true) :lblpos +348872) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$and$boolean_boolean$0$Return_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$and$boolean_boolean$0$anon0_correct  (=> (! (and %lbl%+348871 true) :lblpos +348871) (=> (and (and (forall ((T@@9 T@U) ) (!  (=> (= (type T@@9) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@9))
 :qid |RSPROCCr.8450:20|
 :skolemid |2486|
 :no-pattern (type T@@9)
 :no-pattern (U_2_int T@@9)
 :no-pattern (U_2_bool T@@9)
)) (forall ((_r@@19 T@U) ) (!  (=> (= (type _r@@19) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@19)) 0))
 :qid |RSPROCCr.8451:20|
 :skolemid |2487|
 :no-pattern (type _r@@19)
 :no-pattern (U_2_int _r@@19)
 :no-pattern (U_2_bool _r@@19)
))) (and (forall ((_r@@20 T@U) ) (!  (=> (= (type _r@@20) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@20)) 0))
 :qid |RSPROCCr.8452:20|
 :skolemid |2488|
 :no-pattern (type _r@@20)
 :no-pattern (U_2_int _r@@20)
 :no-pattern (U_2_bool _r@@20)
)) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$and$boolean_boolean$0$$z2@2 (fixed.$bitAnd 1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z3@1)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$and$boolean_boolean$0$block17_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$and$boolean_boolean$0$Entry_correct  (=> (! (and %lbl%+348870 true) :lblpos +348870) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$and$boolean_boolean$0$anon0_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block71_correct  (=> (! (and %lbl%+348869 true) :lblpos +348869) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$sg.edu.nus.comp.tsunami.safe.Safe$and$boolean_boolean$0$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block70_correct  (=> (! (and %lbl%+348876 true) :lblpos +348876) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z3@1 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block71_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon23_Then_correct  (=> (! (and %lbl%+348875 true) :lblpos +348875) (=> (not (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block70_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon17_correct  (=> (! (and %lbl%+348868 true) :lblpos +348868) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z3@1 1) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block71_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon23_Else_correct  (=> (! (and %lbl%+348867 true) :lblpos +348867) (=> (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon17_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block69_correct  (=> (! (and %lbl%+348866 true) :lblpos +348866) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon23_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon23_Else_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon21_Then_correct  (=> (! (and %lbl%+348865 true) :lblpos +348865) (=> (>= 0 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block69_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68_last_correct  (=> (! (and %lbl%+348879 true) :lblpos +348879) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon21_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon21_Else_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68$1_correct  (=> (! (and %lbl%+348830 true) :lblpos +348830) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68_last_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$Return_correct  (=> (! (and %lbl%+348829 true) :lblpos +348829) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68$1_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon22_Else_correct  (=> (! (and %lbl%+348825 true) :lblpos +348825) (=> (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 0) (= fixed.$objIndex@5 (+ fixed.$objIndex 1))) (=> (and (and (not (= call3formal@$obj@0@@2 fixed.$null)) (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@2 fixed.$alloc)))) (and (= fixed.$heap@7 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@2 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@2 fixed.$type fixed.java.lang.ArithmeticException)) (= call3formal@$obj@0@@2 (fixed.$intToRef fixed.$objIndex)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$Return_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon11_correct  (=> (! (and %lbl%+348824 true) :lblpos +348824) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon22_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon22_Else_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon21_Else_correct  (=> (! (and %lbl%+348826 true) :lblpos +348826) (=> (> inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1 0) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon11_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon21_Then_correct  (=> (! (and %lbl%+348792 true) :lblpos +348792) (=> (>= 0 inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$Return_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$block68_correct  (=> (! (and %lbl%+348791 true) :lblpos +348791) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon21_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$anon21_Else_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$entry_correct  (=> (! (and %lbl%+348790 true) :lblpos +348790) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$block68_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$Entry_correct  (=> (! (and %lbl%+348789 true) :lblpos +348789) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68_correct  (=> (! (and %lbl%+348788 true) :lblpos +348788) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block68$0$Entry_correct)))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block67_correct  (=> (! (and %lbl%+348787 true) :lblpos +348787) (=> (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__0))) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__1)))) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block68_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon20_Then_correct  (=> (! (and %lbl%+348786 true) :lblpos +348786) (=> (not (= $in_parameter__1 fixed.$null)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block67_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block66_correct  (=> (! (and %lbl%+348785 true) :lblpos +348785) (=> (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 0) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1 fixed.$null)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block72_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon20_Else_correct  (=> (! (and %lbl%+348784 true) :lblpos +348784) (=> (= $in_parameter__1 fixed.$null) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block66_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon6_correct  (=> (! (and %lbl%+348783 true) :lblpos +348783) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon20_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon20_Else_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Else_correct  (=> (! (and %lbl%+348782 true) :lblpos +348782) (=> (not (= $in_parameter__0 fixed.$null)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon6_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Then_correct  (=> (! (and %lbl%+348877 true) :lblpos +348877) (=> (= $in_parameter__0 fixed.$null) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block66_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block65_correct  (=> (! (and %lbl%+348781 true) :lblpos +348781) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon19_Else_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Then_correct  (=> (! (and %lbl%+348780 true) :lblpos +348780) (=> (not (= $in_parameter__0 $in_parameter__1)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block65_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon3_correct  (=> (! (and %lbl%+348778 true) :lblpos +348778) (=> (and (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 1) (= inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1 fixed.$null)) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block72_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Else_correct  (=> (! (and %lbl%+348777 true) :lblpos +348777) (=> (= $in_parameter__0 $in_parameter__1) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon3_correct))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon0_correct  (=> (! (and %lbl%+348776 true) :lblpos +348776) (=> (and (and (and (= (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__0)) 16) (= (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__1)) 16)) (forall ((T@@10 T@U) ) (!  (=> (= (type T@@10) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@10))
 :qid |RSPROCCr.7784:20|
 :skolemid |2465|
 :no-pattern (type T@@10)
 :no-pattern (U_2_int T@@10)
 :no-pattern (U_2_bool T@@10)
))) (and (and (forall ((_r@@21 T@U) ) (!  (=> (= (type _r@@21) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@21)) 0))
 :qid |RSPROCCr.7785:20|
 :skolemid |2466|
 :no-pattern (type _r@@21)
 :no-pattern (U_2_int _r@@21)
 :no-pattern (U_2_bool _r@@21)
)) (forall ((_r@@22 T@U) ) (!  (=> (= (type _r@@22) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@22)) 0))
 :qid |RSPROCCr.7786:20|
 :skolemid |2467|
 :no-pattern (type _r@@22)
 :no-pattern (U_2_int _r@@22)
 :no-pattern (U_2_bool _r@@22)
))) (and (UOrdering2 (MapType0Select fixed.$heap $in_parameter__1 fixed.$type) fixed.java.lang.String) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String)))) (and inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Then_correct inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon18_Else_correct)))))
(let ((inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Entry_correct  (=> (! (and %lbl%+348775 true) :lblpos +348775) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon0_correct)))
(let ((AA_INSTR_EQ_BODY$1_correct  (=> (! (and %lbl%+348774 true) :lblpos +348774) inline$fixed.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Return_correct  (=> (! (and %lbl%+348773 true) :lblpos +348773) AA_INSTR_EQ_BODY$1_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon28_Else_correct  (=> (! (and %lbl%+348736 true) :lblpos +348736) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 0) (=> (and (and (and (= fixed.$objIndex@1 (+ fixed.$objIndex 1)) (not (= call3formal@$obj@0@@5 fixed.$null))) (and (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@5 fixed.$alloc))) (= fixed.$heap@1 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@5 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@5 fixed.$type fixed.java.lang.ArithmeticException)))) (and (and (= call3formal@$obj@0@@5 (fixed.$intToRef fixed.$objIndex)) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@2 0)) (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1 call3formal@$obj@0@@5) (= fixed.$heap@6 fixed.$heap@1)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Return_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon11_correct  (=> (! (and %lbl%+348735 true) :lblpos +348735) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon28_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon28_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon27_Else_correct  (=> (! (and %lbl%+348734 true) :lblpos +348734) (=> (> inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1 0) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon11_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block23_correct  (=> (! (and %lbl%+348690 true) :lblpos +348690) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@2 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$exception@1 fixed.$null) (= fixed.$heap@6 fixed.$heap@5)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Return_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block22_correct  (=> (! (and %lbl%+348766 true) :lblpos +348766) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z2@1) (= fixed.$heap@5 fixed.$heap)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block23_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block21_correct  (=> (! (and %lbl%+348768 true) :lblpos +348768) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z2@1 0) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block22_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon31_Then_correct  (=> (! (and %lbl%+348767 true) :lblpos +348767) (=> (not (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block21_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon30_Then_correct  (=> (! (and %lbl%+348769 true) :lblpos +348769) (=> (= 1 0) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block21_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon23_correct  (=> (! (and %lbl%+348765 true) :lblpos +348765) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$z2@1 1) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block22_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon31_Else_correct  (=> (! (and %lbl%+348764 true) :lblpos +348764) (=> (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon23_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon20_correct  (=> (! (and %lbl%+348763 true) :lblpos +348763) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon31_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon31_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon30_Else_correct  (=> (! (and %lbl%+348762 true) :lblpos +348762) (=> (not (= 1 0)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon20_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block18_correct  (=> (! (and %lbl%+348761 true) :lblpos +348761) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon30_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon30_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon27_Then_correct  (=> (! (and %lbl%+348760 true) :lblpos +348760) (=> (>= 0 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block18_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17_last_correct  (=> (! (and %lbl%+348772 true) :lblpos +348772) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon27_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon27_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17$1_correct  (=> (! (and %lbl%+348733 true) :lblpos +348733) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17_last_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$Return_correct  (=> (! (and %lbl%+348732 true) :lblpos +348732) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17$1_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon28_Else_correct  (=> (! (and %lbl%+348727 true) :lblpos +348727) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 0) (= fixed.$objIndex@0 (+ fixed.$objIndex 1))) (=> (and (and (not (= call3formal@$obj@0@@8 fixed.$null)) (not (U_2_bool (MapType0Select fixed.$heap call3formal@$obj@0@@8 fixed.$alloc)))) (and (= fixed.$heap@0 (MapType0Store (MapType0Store fixed.$heap call3formal@$obj@0@@8 fixed.$alloc (bool_2_U true)) call3formal@$obj@0@@8 fixed.$type fixed.java.lang.ArithmeticException)) (= call3formal@$obj@0@@8 (fixed.$intToRef fixed.$objIndex)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$Return_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon11_correct  (=> (! (and %lbl%+348726 true) :lblpos +348726) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon28_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon28_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon27_Else_correct  (=> (! (and %lbl%+348728 true) :lblpos +348728) (=> (> inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1 0) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon11_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon27_Then_correct  (=> (! (and %lbl%+348703 true) :lblpos +348703) (=> (>= 0 inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$Return_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block17_correct  (=> (! (and %lbl%+348702 true) :lblpos +348702) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon27_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$anon27_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$entry_correct  (=> (! (and %lbl%+348701 true) :lblpos +348701) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$block17_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$Entry_correct  (=> (! (and %lbl%+348700 true) :lblpos +348700) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17_correct  (=> (! (and %lbl%+348699 true) :lblpos +348699) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$inline$Credential$stringEquals_original$java.lang.String_java.lang.String_loop_block17$0$Entry_correct)))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block16_correct  (=> (! (and %lbl%+348698 true) :lblpos +348698) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i0@1 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__0))) (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$i1@1 (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__1)))) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block17_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon26_Then_correct  (=> (! (and %lbl%+348697 true) :lblpos +348697) (=> (not (= $in_parameter__1 fixed.$null)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block16_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block15_correct  (=> (! (and %lbl%+348696 true) :lblpos +348696) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 0) (= fixed.$heap@5 fixed.$heap)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block23_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon26_Else_correct  (=> (! (and %lbl%+348695 true) :lblpos +348695) (=> (= $in_parameter__1 fixed.$null) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block15_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon6_correct  (=> (! (and %lbl%+348694 true) :lblpos +348694) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon26_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon26_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon25_Else_correct  (=> (! (and %lbl%+348693 true) :lblpos +348693) (=> (not (= $in_parameter__0 fixed.$null)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon6_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon25_Then_correct  (=> (! (and %lbl%+348770 true) :lblpos +348770) (=> (= $in_parameter__0 fixed.$null) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block15_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block14_correct  (=> (! (and %lbl%+348692 true) :lblpos +348692) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon25_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon25_Else_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon24_Then_correct  (=> (! (and %lbl%+348691 true) :lblpos +348691) (=> (not (= $in_parameter__0 $in_parameter__1)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block14_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon3_correct  (=> (! (and %lbl%+348689 true) :lblpos +348689) (=> (and (= inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$$return@1 1) (= fixed.$heap@5 fixed.$heap)) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$block23_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon24_Else_correct  (=> (! (and %lbl%+348688 true) :lblpos +348688) (=> (= $in_parameter__0 $in_parameter__1) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon3_correct))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon0_correct  (=> (! (and %lbl%+348687 true) :lblpos +348687) (=> (and (and (and (= (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__0)) 16) (= (U_2_int (MapType1Select fixed.$stringSizeHeap $in_parameter__1)) 16)) (forall ((T@@11 T@U) ) (!  (=> (= (type T@@11) javaTypeType) (UOrdering2 (MapType0Select fixed.$heap fixed.$null fixed.$type) T@@11))
 :qid |RSPROCCr.7170:20|
 :skolemid |2450|
 :no-pattern (type T@@11)
 :no-pattern (U_2_int T@@11)
 :no-pattern (U_2_bool T@@11)
))) (and (and (forall ((_r@@23 T@U) ) (!  (=> (= (type _r@@23) refType) (>= (U_2_int (MapType1Select fixed.$arrSizeHeap _r@@23)) 0))
 :qid |RSPROCCr.7171:20|
 :skolemid |2451|
 :no-pattern (type _r@@23)
 :no-pattern (U_2_int _r@@23)
 :no-pattern (U_2_bool _r@@23)
)) (forall ((_r@@24 T@U) ) (!  (=> (= (type _r@@24) refType) (>= (U_2_int (MapType1Select fixed.$stringSizeHeap _r@@24)) 0))
 :qid |RSPROCCr.7172:20|
 :skolemid |2452|
 :no-pattern (type _r@@24)
 :no-pattern (U_2_int _r@@24)
 :no-pattern (U_2_bool _r@@24)
))) (and (UOrdering2 (MapType0Select fixed.$heap $in_parameter__0 fixed.$type) fixed.java.lang.String) (UOrdering2 (MapType0Select fixed.$heap $in_parameter__1 fixed.$type) fixed.java.lang.String)))) (and inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon24_Then_correct inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon24_Else_correct)))))
(let ((inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Entry_correct  (=> (! (and %lbl%+348686 true) :lblpos +348686) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$anon0_correct)))
(let ((AA_INSTR_EQ_BODY_correct  (=> (! (and %lbl%+348685 true) :lblpos +348685) inline$unsafe.Credential$stringEquals_original$java.lang.String_java.lang.String$0$Entry_correct)))
(let ((q@0_correct  (=> (! (and %lbl%+356632 true) :lblpos +356632) AA_INSTR_EQ_BODY_correct)))
(let ((PreconditionGeneratedEntry_correct  (=> (! (and %lbl%+356647 true) :lblpos +356647) q@0_correct)))
PreconditionGeneratedEntry_correct))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
(pop 1)
; Valid
