#globals
globals: (unsafe.$heap, fixed.$heap);(unsafe.$intArrayType, fixed.$intArrayType);(unsafe.$charArrayType, fixed.$charArrayType);(unsafe.$boolArrayType, fixed.$boolArrayType);(unsafe.$byteArrayType, fixed.$byteArrayType);(unsafe.$longArrayType, fixed.$longArrayType);(unsafe.$arrSizeHeap, fixed.$arrSizeHeap);(unsafe.$stringSizeHeap, fixed.$stringSizeHeap);(unsafe.$boolArrHeap, fixed.$boolArrHeap);(unsafe.$refArrHeap, fixed.$refArrHeap);(unsafe.$realArrHeap, fixed.$realArrHeap);(unsafe.$intArrHeap, fixed.$intArrHeap);(unsafe.$objIndex, fixed.$objIndex);(unsafe.java.lang.String$ImageMatcherWorker$errorcode263, fixed.java.lang.String$ImageMatcherWorker$errorcode263);(unsafe.java.lang.StringBuffer$ImageMatcherWorker$error264, fixed.java.lang.StringBuffer$ImageMatcherWorker$error264);(unsafe.boolean$ImageMatcherWorker$success0, fixed.boolean$ImageMatcherWorker$success0);(unsafe.java.io.PrintStream$java.lang.System$out271, fixed.java.io.PrintStream$java.lang.System$out271);
#types
types: (unsafe.ref, fixed.ref);(unsafe.javaType, fixed.javaType);(unsafe.Field, fixed.Field);(unsafe.$heap_type, fixed.$heap_type);(unsafe.boolArrHeap_type, fixed.boolArrHeap_type);(unsafe.refArrHeap_type, fixed.refArrHeap_type);(unsafe.realArrHeap_type, fixed.realArrHeap_type);(unsafe.intArrHeap_type, fixed.intArrHeap_type);
#constants
constants: (unsafe.$type, fixed.$type);(unsafe.$alloc, fixed.$alloc);(unsafe.$null, fixed.$null);(unsafe.java.lang.Object, fixed.java.lang.Object);(unsafe.ImageMatcherWorker, fixed.ImageMatcherWorker);(unsafe.java.io.Serializable, fixed.java.io.Serializable);(unsafe.java.lang.Comparable, fixed.java.lang.Comparable);(unsafe.java.lang.CharSequence, fixed.java.lang.CharSequence);(unsafe.java.lang.String, fixed.java.lang.String);(unsafe.java.lang.Appendable, fixed.java.lang.Appendable);(unsafe.java.lang.AbstractStringBuilder, fixed.java.lang.AbstractStringBuilder);(unsafe.java.lang.StringBuffer, fixed.java.lang.StringBuffer);(unsafe.ScalrApplyTest, fixed.ScalrApplyTest);(unsafe.java.lang.Throwable, fixed.java.lang.Throwable);(unsafe.java.lang.Exception, fixed.java.lang.Exception);(unsafe.java.awt.Image, fixed.java.awt.Image);(unsafe.java.awt.image.RenderedImage, fixed.java.awt.image.RenderedImage);(unsafe.java.awt.image.WritableRenderedImage, fixed.java.awt.image.WritableRenderedImage);(unsafe.java.awt.Transparency, fixed.java.awt.Transparency);(unsafe.java.awt.image.BufferedImage, fixed.java.awt.image.BufferedImage);(unsafe.java.lang.RuntimeException, fixed.java.lang.RuntimeException);(unsafe.java.lang.ClassCastException, fixed.java.lang.ClassCastException);(unsafe.java.lang.NullPointerException, fixed.java.lang.NullPointerException);(unsafe.java.nio.Buffer, fixed.java.nio.Buffer);(unsafe.java.nio.ByteBuffer, fixed.java.nio.ByteBuffer);(unsafe.java.nio.IntBuffer, fixed.java.nio.IntBuffer);(unsafe.java.lang.AutoCloseable, fixed.java.lang.AutoCloseable);(unsafe.java.io.Closeable, fixed.java.io.Closeable);(unsafe.java.io.Flushable, fixed.java.io.Flushable);(unsafe.java.io.OutputStream, fixed.java.io.OutputStream);(unsafe.java.io.ByteArrayOutputStream, fixed.java.io.ByteArrayOutputStream);(unsafe.java.io.IOException, fixed.java.io.IOException);(unsafe.java.lang.ArithmeticException, fixed.java.lang.ArithmeticException);(unsafe.java.lang.IndexOutOfBoundsException, fixed.java.lang.IndexOutOfBoundsException);(unsafe.java.lang.ArrayIndexOutOfBoundsException, fixed.java.lang.ArrayIndexOutOfBoundsException);(unsafe.java.lang.StringBuilder, fixed.java.lang.StringBuilder);(unsafe.$StringConst0, fixed.$StringConst0);(unsafe.java.io.FilterOutputStream, fixed.java.io.FilterOutputStream);(unsafe.java.io.PrintStream, fixed.java.io.PrintStream);(unsafe.java.lang.Math, fixed.java.lang.Math);
#functions
function: (unsafe.$arrayType, fixed.$arrayType) / (t, t);(out_ret, out_ret);
function: (unsafe.$intToReal, fixed.$intToReal) / (x, x);(out_ret, out_ret);
function: (unsafe.$intToBool, fixed.$intToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$refToBool, fixed.$refToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$boolToInt, fixed.$boolToInt) / (x, x);(out_ret, out_ret);
function: (unsafe.$cmpBool, fixed.$cmpBool) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpRef, fixed.$cmpRef) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpReal, fixed.$cmpReal) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpInt, fixed.$cmpInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitOr, fixed.$bitOr) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitAnd, fixed.$bitAnd) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$xorInt, fixed.$xorInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shlInt, fixed.$shlInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$ushrInt, fixed.$ushrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shrInt, fixed.$shrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$mulInt, fixed.$mulInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$divInt, fixed.$divInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$modInt, fixed.$modInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$intToRef, fixed.$intToRef) / (id, id);(out_ret, out_ret);

#procedures
procedure: (unsafe.$new, fixed.$new) / (obj_type, obj_type);($obj, $obj);
procedure: (unsafe.java.lang.Object$java.lang.Object$clone$43, fixed.java.lang.Object$java.lang.Object$clone$43) / ($this, $this);($other, $other);
procedure: (unsafe.int$java.lang.String$compareTo$87, fixed.int$java.lang.String$compareTo$87) / ($this, $this);($other, $other);($return, $return);
procedure: (unsafe.ImageMatcherWorker$$la$init$ra$$, fixed.ImageMatcherWorker$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.Object$$la$init$ra$$, fixed.java.lang.Object$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.StringBuffer$$la$init$ra$$, fixed.java.lang.StringBuffer$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.ImageMatcherWorker$test$byte$lp$$rp$_byte$lp$$rp$, fixed.ImageMatcherWorker$test$byte$lp$$rp$_byte$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.ScalrApplyTest$$la$init$ra$$, fixed.ScalrApplyTest$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.ScalrApplyTest$setup$byte$lp$$rp$, fixed.ScalrApplyTest$setup$byte$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.ScalrApplyTest$testApply1$, fixed.ScalrApplyTest$testApply1$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.awt.image.BufferedImage$getWidth$, fixed.java.awt.image.BufferedImage$getWidth$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.awt.image.BufferedImage$getHeight$, fixed.java.awt.image.BufferedImage$getHeight$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.awt.image.BufferedImage$getRGB$int_int_int_int_int$lp$$rp$_int_int, fixed.java.awt.image.BufferedImage$getRGB$int_int_int_int_int$lp$$rp$_int_int) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($in_parameter__3, $in_parameter__3);($in_parameter__4, $in_parameter__4);($in_parameter__5, $in_parameter__5);($in_parameter__6, $in_parameter__6);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.ByteBuffer$allocate$int, fixed.java.nio.ByteBuffer$allocate$int) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.ByteBuffer$asIntBuffer$, fixed.java.nio.ByteBuffer$asIntBuffer$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.IntBuffer$put$int$lp$$rp$, fixed.java.nio.IntBuffer$put$int$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.io.ByteArrayOutputStream$$la$init$ra$$, fixed.java.io.ByteArrayOutputStream$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.nio.ByteBuffer$array$, fixed.java.nio.ByteBuffer$array$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.io.OutputStream$write$byte$lp$$rp$, fixed.java.io.OutputStream$write$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.io.OutputStream$flush$, fixed.java.io.OutputStream$flush$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.io.ByteArrayOutputStream$close$, fixed.java.io.ByteArrayOutputStream$close$) / ($this, $this);($exception, $exception);
procedure: (unsafe.ScalrApplyTest$tearDown$, fixed.ScalrApplyTest$tearDown$) / ($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$$la$init$ra$$, fixed.java.lang.StringBuilder$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$append$java.lang.String, fixed.java.lang.StringBuilder$append$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Throwable$getMessage$, fixed.java.lang.Throwable$getMessage$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$toString$, fixed.java.lang.StringBuilder$toString$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.io.PrintStream$println$java.lang.String, fixed.java.io.PrintStream$println$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.Math$abs$int, fixed.java.lang.Math$abs$int) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.ImageMatcherWorker$test$byte$lp$$rp$_byte$lp$$rp$_loop_block9, fixed.ImageMatcherWorker$test$byte$lp$$rp$_byte$lp$$rp$_loop_block9) / (in_$return, in_$return);(in_$exception, in_$exception);(in_z4, in_z4);(in_i19, in_i19);(in_$b8, in_$b8);(in_$i10, in_$i10);(in_i20, in_i20);(in_$fakelocal_14, in_$fakelocal_14);(in_$b11, in_$b11);(in_$fakelocal_13, in_$fakelocal_13);(in_$fakelocal_12, in_$fakelocal_12);(in_$fakelocal_8, in_$fakelocal_8);(in_$i9, in_$i9);(in_i21, in_i21);(in_$z3, in_$z3);(in_$i5, in_$i5);(in_$b7, in_$b7);(in_r19, in_r19);(in_$fakelocal_10, in_$fakelocal_10);(in_$i6, in_$i6);(in_r1, in_r1);(in_$z5, in_$z5);(in_$fakelocal_9, in_$fakelocal_9);(in_$fakelocal_11, in_$fakelocal_11);(out_$return, out_$return);(out_$exception, out_$exception);(out_z4, out_z4);(out_i19, out_i19);(out_$b8, out_$b8);(out_$i10, out_$i10);(out_i20, out_i20);(out_$fakelocal_14, out_$fakelocal_14);(out_$b11, out_$b11);(out_$fakelocal_13, out_$fakelocal_13);(out_$fakelocal_12, out_$fakelocal_12);(out_$fakelocal_8, out_$fakelocal_8);(out_$i9, out_$i9);(out_i21, out_i21);(out_$z3, out_$z3);(out_$i5, out_$i5);(out_$b7, out_$b7);(out_$fakelocal_10, out_$fakelocal_10);(out_$i6, out_$i6);(out_$z5, out_$z5);(out_$fakelocal_9, out_$fakelocal_9);(out_$fakelocal_11, out_$fakelocal_11);
procedure: (unsafe.ImageMatcherWorker$test$byte$lp$$rp$_byte$lp$$rp$_loop_block4, fixed.ImageMatcherWorker$test$byte$lp$$rp$_byte$lp$$rp$_loop_block4) / (in_$return, in_$return);(in_$exception, in_$exception);(in_i18, in_i18);(in_i0, in_i0);(in_r2, in_r2);(in_i17, in_i17);(in_r6, in_r6);(in_$b14, in_$b14);(in_$i12, in_$i12);(in_$i4, in_$i4);(in_$i13, in_$i13);(out_$return, out_$return);(out_$exception, out_$exception);(out_i18, out_i18);(out_i17, out_i17);(out_$b14, out_$b14);(out_$i12, out_$i12);(out_$i4, out_$i4);(out_$i13, out_$i13);


