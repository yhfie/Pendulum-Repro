class org.cryptomator.crypto.aes256.Aes256Cryptor$1 extends java.lang.Object implements java.nio.file.DirectoryStream$Filter
{
    final org.cryptomator.crypto.aes256.Aes256Cryptor this$0;

    void <init>(org.cryptomator.crypto.aes256.Aes256Cryptor)
    {
        org.cryptomator.crypto.aes256.Aes256Cryptor$1 r0;
        org.cryptomator.crypto.aes256.Aes256Cryptor r1;

        r0 := @this: org.cryptomator.crypto.aes256.Aes256Cryptor$1;

        r1 := @parameter0: org.cryptomator.crypto.aes256.Aes256Cryptor;

        r0.<org.cryptomator.crypto.aes256.Aes256Cryptor$1: org.cryptomator.crypto.aes256.Aes256Cryptor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean accept(java.nio.file.Path) throws java.io.IOException
    {
        org.cryptomator.crypto.aes256.Aes256Cryptor$1 r0;
        java.nio.file.Path r1;
        java.nio.file.PathMatcher $r2;
        boolean $z0;

        r0 := @this: org.cryptomator.crypto.aes256.Aes256Cryptor$1;

        r1 := @parameter0: java.nio.file.Path;

        $r2 = <org.cryptomator.crypto.aes256.FileNamingConventions: java.nio.file.PathMatcher ENCRYPTED_FILE_GLOB_MATCHER>;

        $z0 = interfaceinvoke $r2.<java.nio.file.PathMatcher: boolean matches(java.nio.file.Path)>(r1);

        return $z0;
    }

    public volatile boolean accept(java.lang.Object) throws java.io.IOException
    {
        org.cryptomator.crypto.aes256.Aes256Cryptor$1 r0;
        java.lang.Object r1;
        java.nio.file.Path $r2;
        boolean $z0;

        r0 := @this: org.cryptomator.crypto.aes256.Aes256Cryptor$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (java.nio.file.Path) r1;

        $z0 = virtualinvoke r0.<org.cryptomator.crypto.aes256.Aes256Cryptor$1: boolean accept(java.nio.file.Path)>($r2);

        return $z0;
    }
}
