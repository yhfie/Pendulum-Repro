#globals
globals: (unsafe.$heap, fixed.$heap);(unsafe.$intArrayType, fixed.$intArrayType);(unsafe.$charArrayType, fixed.$charArrayType);(unsafe.$boolArrayType, fixed.$boolArrayType);(unsafe.$byteArrayType, fixed.$byteArrayType);(unsafe.$longArrayType, fixed.$longArrayType);(unsafe.$arrSizeHeap, fixed.$arrSizeHeap);(unsafe.$stringSizeHeap, fixed.$stringSizeHeap);(unsafe.$boolArrHeap, fixed.$boolArrHeap);(unsafe.$refArrHeap, fixed.$refArrHeap);(unsafe.$realArrHeap, fixed.$realArrHeap);(unsafe.$intArrHeap, fixed.$intArrHeap);(unsafe.$objIndex, fixed.$objIndex);(unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$org.cryptomator.crypto.aes256.Aes256Cryptor$1$this$0259, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$org.cryptomator.crypto.aes256.Aes256Cryptor$1$this$0259);(unsafe.java.nio.file.PathMatcher$org.cryptomator.crypto.aes256.FileNamingConventions$ENCRYPTED_FILE_GLOB_MATCHER463, fixed.java.nio.file.PathMatcher$org.cryptomator.crypto.aes256.FileNamingConventions$ENCRYPTED_FILE_GLOB_MATCHER463);(unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261, fixed.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261);(unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260, fixed.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260);(unsafe.int$org.cryptomator.crypto.aes256.Aes256Cryptor$AES_KEY_LENGTH_IN_BITS0, fixed.int$org.cryptomator.crypto.aes256.Aes256Cryptor$AES_KEY_LENGTH_IN_BITS0);(unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262, fixed.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262);(unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263, fixed.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263);(unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464, fixed.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464);(unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465, fixed.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465);(unsafe.boolean$java.lang.Boolean$value0, fixed.boolean$java.lang.Boolean$value0);
#types
types: (unsafe.ref, fixed.ref);(unsafe.javaType, fixed.javaType);(unsafe.Field, fixed.Field);(unsafe.$heap_type, fixed.$heap_type);(unsafe.boolArrHeap_type, fixed.boolArrHeap_type);(unsafe.refArrHeap_type, fixed.refArrHeap_type);(unsafe.realArrHeap_type, fixed.realArrHeap_type);(unsafe.intArrHeap_type, fixed.intArrHeap_type);
#constants
constants: (unsafe.$type, fixed.$type);(unsafe.$alloc, fixed.$alloc);(unsafe.$null, fixed.$null);(unsafe.java.lang.Object, fixed.java.lang.Object);(unsafe.java.nio.file.DirectoryStream$Filter, fixed.java.nio.file.DirectoryStream$Filter);(unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$1);(unsafe.org.cryptomator.crypto.AbstractCryptor, fixed.org.cryptomator.crypto.AbstractCryptor);(unsafe.org.cryptomator.crypto.aes256.AesCryptographicConfiguration, fixed.org.cryptomator.crypto.aes256.AesCryptographicConfiguration);(unsafe.org.cryptomator.crypto.aes256.FileNamingConventions, fixed.org.cryptomator.crypto.aes256.FileNamingConventions);(unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor);(unsafe.java.lang.Comparable, fixed.java.lang.Comparable);(unsafe.java.lang.Iterable, fixed.java.lang.Iterable);(unsafe.java.nio.file.Watchable, fixed.java.nio.file.Watchable);(unsafe.java.nio.file.Path, fixed.java.nio.file.Path);(unsafe.java.io.Serializable, fixed.java.io.Serializable);(unsafe.java.lang.Throwable, fixed.java.lang.Throwable);(unsafe.java.lang.Exception, fixed.java.lang.Exception);(unsafe.java.lang.RuntimeException, fixed.java.lang.RuntimeException);(unsafe.java.nio.file.PathMatcher, fixed.java.nio.file.PathMatcher);(unsafe.java.lang.ClassCastException, fixed.java.lang.ClassCastException);(unsafe.java.io.IOException, fixed.java.io.IOException);(unsafe.com.fasterxml.jackson.databind.ObjectMapper, fixed.com.fasterxml.jackson.databind.ObjectMapper);(unsafe.java.util.Random, fixed.java.util.Random);(unsafe.java.security.SecureRandom, fixed.java.security.SecureRandom);(unsafe.java.lang.ArithmeticException, fixed.java.lang.ArithmeticException);(unsafe.java.security.spec.KeySpec, fixed.java.security.spec.KeySpec);(unsafe.java.security.Key, fixed.java.security.Key);(unsafe.javax.security.auth.Destroyable, fixed.javax.security.auth.Destroyable);(unsafe.javax.crypto.SecretKey, fixed.javax.crypto.SecretKey);(unsafe.javax.crypto.spec.SecretKeySpec, fixed.javax.crypto.spec.SecretKeySpec);(unsafe.$StringConst0, fixed.$StringConst0);(unsafe.java.lang.CharSequence, fixed.java.lang.CharSequence);(unsafe.java.lang.String, fixed.java.lang.String);(unsafe.$StringConst1, fixed.$StringConst1);(unsafe.java.util.Arrays, fixed.java.util.Arrays);(unsafe.java.lang.AutoCloseable, fixed.java.lang.AutoCloseable);(unsafe.java.io.Closeable, fixed.java.io.Closeable);(unsafe.java.io.Flushable, fixed.java.io.Flushable);(unsafe.java.io.OutputStream, fixed.java.io.OutputStream);(unsafe.javax.crypto.Cipher, fixed.javax.crypto.Cipher);(unsafe.java.security.GeneralSecurityException, fixed.java.security.GeneralSecurityException);(unsafe.java.security.KeyException, fixed.java.security.KeyException);(unsafe.java.security.InvalidKeyException, fixed.java.security.InvalidKeyException);(unsafe.org.cryptomator.crypto.aes256.KeyFile, fixed.org.cryptomator.crypto.aes256.KeyFile);(unsafe.java.lang.IllegalStateException, fixed.java.lang.IllegalStateException);(unsafe.$StringConst2, fixed.$StringConst2);(unsafe.java.io.InputStream, fixed.java.io.InputStream);(unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$KeyFile, fixed.CC$org$_$cryptomator$_$crypto$_$aes256$_$KeyFile);(unsafe.java.lang.reflect.AnnotatedElement, fixed.java.lang.reflect.AnnotatedElement);(unsafe.java.lang.reflect.GenericDeclaration, fixed.java.lang.reflect.GenericDeclaration);(unsafe.java.lang.reflect.Type, fixed.java.lang.reflect.Type);(unsafe.java.security.NoSuchAlgorithmException, fixed.java.security.NoSuchAlgorithmException);(unsafe.org.cryptomator.crypto.exceptions.UnsupportedKeyLengthException, fixed.org.cryptomator.crypto.exceptions.UnsupportedKeyLengthException);(unsafe.$StringConst3, fixed.$StringConst3);(unsafe.org.cryptomator.crypto.exceptions.WrongPasswordException, fixed.org.cryptomator.crypto.exceptions.WrongPasswordException);(unsafe.javax.security.auth.DestroyFailedException, fixed.javax.security.auth.DestroyFailedException);(unsafe.$StringConst4, fixed.$StringConst4);(unsafe.javax.crypto.NoSuchPaddingException, fixed.javax.crypto.NoSuchPaddingException);(unsafe.java.lang.IllegalArgumentException, fixed.java.lang.IllegalArgumentException);(unsafe.$StringConst5, fixed.$StringConst5);(unsafe.$StringConst6, fixed.$StringConst6);(unsafe.$StringConst7, fixed.$StringConst7);(unsafe.java.security.spec.AlgorithmParameterSpec, fixed.java.security.spec.AlgorithmParameterSpec);(unsafe.javax.crypto.spec.IvParameterSpec, fixed.javax.crypto.spec.IvParameterSpec);(unsafe.java.security.InvalidAlgorithmParameterException, fixed.java.security.InvalidAlgorithmParameterException);(unsafe.$StringConst8, fixed.$StringConst8);(unsafe.$StringConst9, fixed.$StringConst9);(unsafe.java.lang.Error, fixed.java.lang.Error);(unsafe.java.lang.AssertionError, fixed.java.lang.AssertionError);(unsafe.$StringConst10, fixed.$StringConst10);(unsafe.java.lang.Cloneable, fixed.java.lang.Cloneable);(unsafe.javax.crypto.Mac, fixed.javax.crypto.Mac);(unsafe.$StringConst11, fixed.$StringConst11);(unsafe.$StringConst12, fixed.$StringConst12);(unsafe.java.lang.Appendable, fixed.java.lang.Appendable);(unsafe.java.lang.AbstractStringBuilder, fixed.java.lang.AbstractStringBuilder);(unsafe.java.lang.StringBuilder, fixed.java.lang.StringBuilder);(unsafe.org.bouncycastle.crypto.generators.SCrypt, fixed.org.bouncycastle.crypto.generators.SCrypt);(unsafe.java.util.zip.Checksum, fixed.java.util.zip.Checksum);(unsafe.java.util.zip.CRC32, fixed.java.util.zip.CRC32);(unsafe.org.cryptomator.crypto.CryptorIOSupport, fixed.org.cryptomator.crypto.CryptorIOSupport);(unsafe.org.apache.commons.lang3.StringUtils, fixed.org.apache.commons.lang3.StringUtils);(unsafe.javax.crypto.IllegalBlockSizeException, fixed.javax.crypto.IllegalBlockSizeException);(unsafe.java.util.Collection, fixed.java.util.Collection);(unsafe.java.util.AbstractCollection, fixed.java.util.AbstractCollection);(unsafe.java.util.List, fixed.java.util.List);(unsafe.java.util.AbstractList, fixed.java.util.AbstractList);(unsafe.java.util.RandomAccess, fixed.java.util.RandomAccess);(unsafe.java.util.ArrayList, fixed.java.util.ArrayList);(unsafe.java.lang.NullPointerException, fixed.java.lang.NullPointerException);(unsafe.java.lang.IndexOutOfBoundsException, fixed.java.lang.IndexOutOfBoundsException);(unsafe.java.lang.ArrayIndexOutOfBoundsException, fixed.java.lang.ArrayIndexOutOfBoundsException);(unsafe.$StringConst13, fixed.$StringConst13);(unsafe.org.apache.commons.lang3.ArrayUtils, fixed.org.apache.commons.lang3.ArrayUtils);(unsafe.java.nio.Buffer, fixed.java.nio.Buffer);(unsafe.java.nio.ByteBuffer, fixed.java.nio.ByteBuffer);(unsafe.java.nio.charset.Charset, fixed.java.nio.charset.Charset);(unsafe.javax.crypto.BadPaddingException, fixed.javax.crypto.BadPaddingException);(unsafe.org.apache.commons.codec.binary.BaseNCodec, fixed.org.apache.commons.codec.binary.BaseNCodec);(unsafe.$StringConst14, fixed.$StringConst14);(unsafe.java.lang.Number, fixed.java.lang.Number);(unsafe.java.lang.Long, fixed.java.lang.Long);(unsafe.$StringConst15, fixed.$StringConst15);(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata, fixed.org.cryptomator.crypto.aes256.LongFilenameMetadata);(unsafe.java.util.UUID, fixed.java.util.UUID);(unsafe.$StringConst16, fixed.$StringConst16);(unsafe.$StringConst17, fixed.$StringConst17);(unsafe.$StringConst18, fixed.$StringConst18);(unsafe.$StringConst19, fixed.$StringConst19);(unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata, fixed.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);(unsafe.java.nio.channels.Channel, fixed.java.nio.channels.Channel);(unsafe.java.nio.channels.ReadableByteChannel, fixed.java.nio.channels.ReadableByteChannel);(unsafe.java.nio.channels.WritableByteChannel, fixed.java.nio.channels.WritableByteChannel);(unsafe.java.nio.channels.ByteChannel, fixed.java.nio.channels.ByteChannel);(unsafe.java.nio.channels.SeekableByteChannel, fixed.java.nio.channels.SeekableByteChannel);(unsafe.$StringConst20, fixed.$StringConst20);(unsafe.org.cryptomator.crypto.io.SeekableByteChannelInputStream, fixed.org.cryptomator.crypto.io.SeekableByteChannelInputStream);(unsafe.org.cryptomator.crypto.aes256.MacInputStream, fixed.org.cryptomator.crypto.aes256.MacInputStream);(unsafe.org.apache.commons.io.output.NullOutputStream, fixed.org.apache.commons.io.output.NullOutputStream);(unsafe.org.apache.commons.io.IOUtils, fixed.org.apache.commons.io.IOUtils);(unsafe.java.io.FilterInputStream, fixed.java.io.FilterInputStream);(unsafe.javax.crypto.CipherInputStream, fixed.javax.crypto.CipherInputStream);(unsafe.org.cryptomator.crypto.io.SeekableByteChannelOutputStream, fixed.org.cryptomator.crypto.io.SeekableByteChannelOutputStream);(unsafe.org.cryptomator.crypto.aes256.MacOutputStream, fixed.org.cryptomator.crypto.aes256.MacOutputStream);(unsafe.java.io.FilterOutputStream, fixed.java.io.FilterOutputStream);(unsafe.javax.crypto.CipherOutputStream, fixed.javax.crypto.CipherOutputStream);(unsafe.java.lang.Math, fixed.java.lang.Math);(unsafe.$DoubleConst0, fixed.$DoubleConst0);(unsafe.$DoubleConst1, fixed.$DoubleConst1);(unsafe.$StringConst21, fixed.$StringConst21);(unsafe.java.lang.Boolean, fixed.java.lang.Boolean);
#functions
function: (unsafe.$arrayType, fixed.$arrayType) / (t, t);(out_ret, out_ret);
function: (unsafe.$intToReal, fixed.$intToReal) / (x, x);(out_ret, out_ret);
function: (unsafe.$intToBool, fixed.$intToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$refToBool, fixed.$refToBool) / (x, x);(out_ret, out_ret);
function: (unsafe.$boolToInt, fixed.$boolToInt) / (x, x);(out_ret, out_ret);
function: (unsafe.$cmpBool, fixed.$cmpBool) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpRef, fixed.$cmpRef) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpReal, fixed.$cmpReal) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$cmpInt, fixed.$cmpInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitOr, fixed.$bitOr) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$bitAnd, fixed.$bitAnd) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$xorInt, fixed.$xorInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shlInt, fixed.$shlInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$ushrInt, fixed.$ushrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$shrInt, fixed.$shrInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$mulInt, fixed.$mulInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$divInt, fixed.$divInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$modInt, fixed.$modInt) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$intToRef, fixed.$intToRef) / (id, id);(out_ret, out_ret);
function: (unsafe.$realOp32117, fixed.$realOp32117) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$realOp32086, fixed.$realOp32086) / (x, x);(y, y);(out_ret, out_ret);
function: (unsafe.$realOp32241, fixed.$realOp32241) / (x, x);(y, y);(out_ret, out_ret);

#procedures
procedure: (unsafe.$new, fixed.$new) / (obj_type, obj_type);($obj, $obj);
procedure: (unsafe.java.lang.Object$java.lang.Object$clone$43, fixed.java.lang.Object$java.lang.Object$clone$43) / ($this, $this);($other, $other);
procedure: (unsafe.int$java.lang.String$compareTo$87, fixed.int$java.lang.String$compareTo$87) / ($this, $this);($other, $other);($return, $return);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.Object$$la$init$ra$$, fixed.java.lang.Object$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.file.PathMatcher$matches$java.nio.file.Path, fixed.java.nio.file.PathMatcher$matches$java.nio.file.Path) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.lang.Object, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$init$ra$$, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.AbstractCryptor$$la$init$ra$$, fixed.org.cryptomator.crypto.AbstractCryptor$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.com.fasterxml.jackson.databind.ObjectMapper$$la$init$ra$$, fixed.com.fasterxml.jackson.databind.ObjectMapper$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.security.SecureRandom$generateSeed$int, fixed.java.security.SecureRandom$generateSeed$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.security.SecureRandom$setSeed$byte$lp$$rp$, fixed.java.security.SecureRandom$setSeed$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$, fixed.java.security.SecureRandom$nextBytes$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String, fixed.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte, fixed.java.util.Arrays$fill$byte$lp$$rp$_byte) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$init$ra$$java.util.Random, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$init$ra$$java.util.Random) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.util.Random$nextBytes$byte$lp$$rp$, fixed.java.util.Random$nextBytes$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptMasterKey$java.io.OutputStream_java.lang.CharSequence, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptMasterKey$java.io.OutputStream_java.lang.CharSequence) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($in_parameter__3, $in_parameter__3);($in_parameter__4, $in_parameter__4);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Cipher$wrap$java.security.Key, fixed.javax.crypto.Cipher$wrap$java.security.Key) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$$la$init$ra$$, fixed.org.cryptomator.crypto.aes256.KeyFile$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$setScryptSalt$byte$lp$$rp$, fixed.org.cryptomator.crypto.aes256.KeyFile$setScryptSalt$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$setScryptCostParam$int, fixed.org.cryptomator.crypto.aes256.KeyFile$setScryptCostParam$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$setScryptBlockSize$int, fixed.org.cryptomator.crypto.aes256.KeyFile$setScryptBlockSize$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$setKeyLength$int, fixed.org.cryptomator.crypto.aes256.KeyFile$setKeyLength$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$setPrimaryMasterKey$byte$lp$$rp$, fixed.org.cryptomator.crypto.aes256.KeyFile$setPrimaryMasterKey$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$setHMacMasterKey$byte$lp$$rp$, fixed.org.cryptomator.crypto.aes256.KeyFile$setHMacMasterKey$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValue$java.io.OutputStream_java.lang.Object, fixed.com.fasterxml.jackson.databind.ObjectMapper$writeValue$java.io.OutputStream_java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable, fixed.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptMasterKey$java.io.InputStream_java.lang.CharSequence, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptMasterKey$java.io.InputStream_java.lang.CharSequence) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$java.io.InputStream_java.lang.Class, fixed.com.fasterxml.jackson.databind.ObjectMapper$readValue$java.io.InputStream_java.lang.Class) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Cipher$getMaxAllowedKeyLength$java.lang.String, fixed.javax.crypto.Cipher$getMaxAllowedKeyLength$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$getKeyLength$, fixed.org.cryptomator.crypto.aes256.KeyFile$getKeyLength$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.exceptions.UnsupportedKeyLengthException$$la$init$ra$$int_int, fixed.org.cryptomator.crypto.exceptions.UnsupportedKeyLengthException$$la$init$ra$$int_int) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$getScryptSalt$, fixed.org.cryptomator.crypto.aes256.KeyFile$getScryptSalt$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$getScryptCostParam$, fixed.org.cryptomator.crypto.aes256.KeyFile$getScryptCostParam$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$getScryptBlockSize$, fixed.org.cryptomator.crypto.aes256.KeyFile$getScryptBlockSize$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$getPrimaryMasterKey$, fixed.org.cryptomator.crypto.aes256.KeyFile$getPrimaryMasterKey$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Cipher$unwrap$byte$lp$$rp$_java.lang.String_int, fixed.javax.crypto.Cipher$unwrap$byte$lp$$rp$_java.lang.String_int) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.KeyFile$getHMacMasterKey$, fixed.org.cryptomator.crypto.aes256.KeyFile$getHMacMasterKey$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.exceptions.WrongPasswordException$$la$init$ra$$, fixed.org.cryptomator.crypto.exceptions.WrongPasswordException$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$swipeSensitiveDataInternal$, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$swipeSensitiveDataInternal$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.javax.security.auth.Destroyable$destroy$, fixed.javax.security.auth.Destroyable$destroy$) / ($this, $this);($exception, $exception);
procedure: (unsafe.javax.crypto.Cipher$getInstance$java.lang.String, fixed.javax.crypto.Cipher$getInstance$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Cipher$init$int_java.security.Key, fixed.javax.crypto.Cipher$init$int_java.security.Key) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable, fixed.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$, fixed.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec, fixed.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable, fixed.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Mac$getInstance$java.lang.String, fixed.javax.crypto.Mac$getInstance$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Mac$init$java.security.Key, fixed.javax.crypto.Mac$init$java.security.Key) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$$la$init$ra$$java.lang.CharSequence, fixed.java.lang.StringBuilder$$la$init$ra$$java.lang.CharSequence) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$toString$, fixed.java.lang.StringBuilder$toString$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$getBytes$, fixed.java.lang.String$getBytes$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.bouncycastle.crypto.generators.SCrypt$generate$byte$lp$$rp$_byte$lp$$rp$_int_int_int_int, fixed.org.bouncycastle.crypto.generators.SCrypt$generate$byte$lp$$rp$_byte$lp$$rp$_int_int_int_int) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($in_parameter__3, $in_parameter__3);($in_parameter__4, $in_parameter__4);($in_parameter__5, $in_parameter__5);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.CharSequence$length$, fixed.java.lang.CharSequence$length$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$setCharAt$int_char, fixed.java.lang.StringBuilder$setCharAt$int_char) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.util.zip.CRC32$$la$init$ra$$, fixed.java.util.zip.CRC32$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.util.zip.CRC32$update$byte$lp$$rp$, fixed.java.util.zip.CRC32$update$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.util.zip.CRC32$getValue$, fixed.java.util.zip.CRC32$getValue$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($in_parameter__3, $in_parameter__3);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.commons.lang3.StringUtils$split$java.lang.String_char, fixed.org.apache.commons.lang3.StringUtils$split$java.lang.String_char) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.util.ArrayList$$la$init$ra$$int, fixed.java.util.ArrayList$$la$init$ra$$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($return, $return);($exception, $exception);
procedure: (unsafe.java.util.List$add$java.lang.Object, fixed.java.util.List$add$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.commons.lang3.StringUtils$join$java.lang.Iterable_char, fixed.org.apache.commons.lang3.StringUtils$join$java.lang.Iterable_char) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$$la$init$ra$$, fixed.java.lang.StringBuilder$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$append$java.lang.String, fixed.java.lang.StringBuilder$append$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Mac$doFinal$byte$lp$$rp$, fixed.javax.crypto.Mac$doFinal$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.commons.lang3.ArrayUtils$subarray$byte$lp$$rp$_int_int, fixed.org.apache.commons.lang3.ArrayUtils$subarray$byte$lp$$rp$_int_int) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.ByteBuffer$allocate$int, fixed.java.nio.ByteBuffer$allocate$int) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$, fixed.java.nio.ByteBuffer$put$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.ByteBuffer$array$, fixed.java.nio.ByteBuffer$array$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$getBytes$java.nio.charset.Charset, fixed.java.lang.String$getBytes$java.nio.charset.Charset) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$, fixed.javax.crypto.Cipher$doFinal$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$, fixed.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Long$toHexString$long, fixed.java.lang.Long$toHexString$long) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getOrCreateUuidForEncryptedFilename$java.lang.String, fixed.org.cryptomator.crypto.aes256.LongFilenameMetadata$getOrCreateUuidForEncryptedFilename$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.util.UUID$toString$, fixed.java.util.UUID$toString$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($in_parameter__3, $in_parameter__3);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$$la$init$ra$$java.lang.String, fixed.java.lang.String$$la$init$ra$$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.String$endsWith$java.lang.String, fixed.java.lang.String$endsWith$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.commons.lang3.StringUtils$removeEnd$java.lang.String_java.lang.String, fixed.org.apache.commons.lang3.StringUtils$removeEnd$java.lang.String_java.lang.String) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String, fixed.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String, fixed.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.util.UUID$fromString$java.lang.String, fixed.java.util.UUID$fromString$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getEncryptedFilenameForUUID$java.util.UUID, fixed.org.cryptomator.crypto.aes256.LongFilenameMetadata$getEncryptedFilenameForUUID$java.util.UUID) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.commons.lang3.StringUtils$removeEndIgnoreCase$java.lang.String_java.lang.String, fixed.org.apache.commons.lang3.StringUtils$removeEndIgnoreCase$java.lang.String_java.lang.String) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String, fixed.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String, fixed.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$_java.nio.charset.Charset, fixed.java.lang.String$$la$init$ra$$byte$lp$$rp$_java.nio.charset.Charset) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String, fixed.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$, fixed.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class, fixed.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValueAsBytes$java.lang.Object, fixed.com.fasterxml.jackson.databind.ObjectMapper$writeValueAsBytes$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.CryptorIOSupport$writePathSpecificMetadata$java.lang.String_byte$lp$$rp$, fixed.org.cryptomator.crypto.CryptorIOSupport$writePathSpecificMetadata$java.lang.String_byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$authenticateContent$java.nio.channels.SeekableByteChannel, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$authenticateContent$java.nio.channels.SeekableByteChannel) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$authenticateContent_unsafe$java.nio.channels.SeekableByteChannel, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$authenticateContent_unsafe$java.nio.channels.SeekableByteChannel) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.channels.SeekableByteChannel$position$long, fixed.java.nio.channels.SeekableByteChannel$position$long) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Mac$getMacLength$, fixed.javax.crypto.Mac$getMacLength$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.channels.SeekableByteChannel$read$java.nio.ByteBuffer, fixed.java.nio.channels.SeekableByteChannel$read$java.nio.ByteBuffer) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.io.IOException$$la$init$ra$$java.lang.String, fixed.java.io.IOException$$la$init$ra$$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.io.SeekableByteChannelInputStream$$la$init$ra$$java.nio.channels.SeekableByteChannel, fixed.org.cryptomator.crypto.io.SeekableByteChannelInputStream$$la$init$ra$$java.nio.channels.SeekableByteChannel) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.MacInputStream$$la$init$ra$$java.io.InputStream_javax.crypto.Mac, fixed.org.cryptomator.crypto.aes256.MacInputStream$$la$init$ra$$java.io.InputStream_javax.crypto.Mac) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.apache.commons.io.output.NullOutputStream$$la$init$ra$$, fixed.org.apache.commons.io.output.NullOutputStream$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.Long$longValue$, fixed.java.lang.Long$longValue$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.apache.commons.io.IOUtils$copyLarge$java.io.InputStream_java.io.OutputStream_long_long, fixed.org.apache.commons.io.IOUtils$copyLarge$java.io.InputStream_java.io.OutputStream_long_long) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($in_parameter__3, $in_parameter__3);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Mac$doFinal$, fixed.javax.crypto.Mac$doFinal$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.Buffer$capacity$, fixed.java.nio.Buffer$capacity$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.ByteBuffer$wrap$byte$lp$$rp$, fixed.java.nio.ByteBuffer$wrap$byte$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.ByteBuffer$getLong$, fixed.java.nio.ByteBuffer$getLong$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Long$valueOf$long, fixed.java.lang.Long$valueOf$long) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.Throwable, fixed.java.lang.IllegalStateException$$la$init$ra$$java.lang.Throwable) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedFile$java.nio.channels.SeekableByteChannel_java.io.OutputStream, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedFile$java.nio.channels.SeekableByteChannel_java.io.OutputStream) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.CipherInputStream$$la$init$ra$$java.io.InputStream_javax.crypto.Cipher, fixed.javax.crypto.CipherInputStream$$la$init$ra$$java.io.InputStream_javax.crypto.Cipher) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptRange$java.nio.channels.SeekableByteChannel_java.io.OutputStream_long_long, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptRange$java.nio.channels.SeekableByteChannel_java.io.OutputStream_long_long) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($in_parameter__3, $in_parameter__3);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.ByteBuffer$putLong$int_long, fixed.java.nio.ByteBuffer$putLong$int_long) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.channels.SeekableByteChannel$truncate$long, fixed.java.nio.channels.SeekableByteChannel$truncate$long) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.Buffer$position$int, fixed.java.nio.Buffer$position$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.channels.SeekableByteChannel$write$java.nio.ByteBuffer, fixed.java.nio.channels.SeekableByteChannel$write$java.nio.ByteBuffer) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.io.SeekableByteChannelOutputStream$$la$init$ra$$java.nio.channels.SeekableByteChannel, fixed.org.cryptomator.crypto.io.SeekableByteChannelOutputStream$$la$init$ra$$java.nio.channels.SeekableByteChannel) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.MacOutputStream$$la$init$ra$$java.io.OutputStream_javax.crypto.Mac, fixed.org.cryptomator.crypto.aes256.MacOutputStream$$la$init$ra$$java.io.OutputStream_javax.crypto.Mac) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.javax.crypto.CipherOutputStream$$la$init$ra$$java.io.OutputStream_javax.crypto.Cipher, fixed.javax.crypto.CipherOutputStream$$la$init$ra$$java.io.OutputStream_javax.crypto.Cipher) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.apache.commons.io.IOUtils$copyLarge$java.io.InputStream_java.io.OutputStream, fixed.org.apache.commons.io.IOUtils$copyLarge$java.io.InputStream_java.io.OutputStream) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Math$random$, fixed.java.lang.Math$random$) / ($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Math$ceil$double, fixed.java.lang.Math$ceil$double) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.io.OutputStream$write$byte$lp$$rp$, fixed.java.io.OutputStream$write$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.io.OutputStream$flush$, fixed.java.io.OutputStream$flush$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.nio.ByteBuffer$putLong$long, fixed.java.nio.ByteBuffer$putLong$long) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$getPayloadFilesFilter$, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$getPayloadFilesFilter$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$clinit$ra$$, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$clinit$ra$$) / ($exception, $exception);
procedure: (unsafe.java.security.SecureRandom$getInstance$java.lang.String, fixed.java.security.SecureRandom$getInstance$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$$la$init$ra$$boolean, fixed.java.lang.Boolean$$la$init$ra$$boolean) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$valueOf$boolean, fixed.java.lang.Boolean$valueOf$boolean) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$booleanValue$, fixed.java.lang.Boolean$booleanValue$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59) / (in_$exception, in_$exception);(in_r3, in_r3);(in_r1, in_r1);(in_$i5, in_$i5);(in_i7, in_i7);(out_$exception, out_$exception);(out_$i5, out_$i5);(out_i7, out_i7);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56) / (in_$return, in_$return);(in_$exception, in_$exception);(in_i6, in_i6);(in_$i4, in_$i4);(in_r3, in_r3);(in_r1, in_r1);(in_$fakelocal_3, in_$fakelocal_3);(out_$return, out_$return);(out_$exception, out_$exception);(out_i6, out_i6);(out_$i4, out_$i4);(out_$fakelocal_3, out_$fakelocal_3);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65) / (in_$return, in_$return);(in_$exception, in_$exception);(in_r6, in_r6);(in_r3, in_r3);(in_i4, in_i4);(in_$fakelocal_4, in_$fakelocal_4);(in_$r9, in_$r9);(in_r4, in_r4);(in_r5, in_r5);(in_$fakelocal_3, in_$fakelocal_3);(in_i2, in_i2);(in_r0, in_r0);(in_r2, in_r2);(out_$return, out_$return);(out_$exception, out_$exception);(out_r6, out_r6);(out_i4, out_i4);(out_$fakelocal_4, out_$fakelocal_4);(out_$r9, out_$r9);(out_r5, out_r5);(out_$fakelocal_3, out_$fakelocal_3);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73) / (in_$return, in_$return);(in_$exception, in_$exception);(in_i4, in_i4);(in_r2, in_r2);(in_$r9, in_$r9);(in_r6, in_r6);(in_r4, in_r4);(in_$fakelocal_3, in_$fakelocal_3);(in_r0, in_r0);(in_i2, in_i2);(in_$fakelocal_4, in_$fakelocal_4);(in_$r10, in_$r10);(in_r5, in_r5);(in_$fakelocal_5, in_$fakelocal_5);(in_r3, in_r3);(out_$return, out_$return);(out_$exception, out_$exception);(out_i4, out_i4);(out_$r9, out_$r9);(out_r6, out_r6);(out_$fakelocal_3, out_$fakelocal_3);(out_$fakelocal_4, out_$fakelocal_4);(out_$r10, out_$r10);(out_r5, out_r5);(out_$fakelocal_5, out_$fakelocal_5);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92) / (in_$return, in_$return);(in_$exception, in_$exception);(in_i0, in_i0);(in_$b2, in_$b2);(in_$fakelocal_3, in_$fakelocal_3);(in_r0, in_r0);(in_i4, in_i4);(in_$fakelocal_2, in_$fakelocal_2);(in_r1, in_r1);(in_$b3, in_$b3);(out_$return, out_$return);(out_$exception, out_$exception);(out_$b2, out_$b2);(out_$fakelocal_3, out_$fakelocal_3);(out_i4, out_i4);(out_$fakelocal_2, out_$fakelocal_2);(out_$b3, out_$b3);
procedure: (unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105, fixed.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block104) / (in_$return, in_$return);(in_$exception, in_$exception);(in_i10, in_i10);(in_r12, in_r12);(in_r10, in_r10);(in_i0, in_i0);(out_$return, out_$return);(out_$exception, out_$exception);(out_i10, out_i10);


