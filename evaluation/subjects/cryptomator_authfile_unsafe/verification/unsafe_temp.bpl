var unsafe.$heap: $heap_type;

var unsafe.$intArrayType: javaType;

var unsafe.$charArrayType: javaType;

var unsafe.$boolArrayType: javaType;

var unsafe.$byteArrayType: javaType;

var unsafe.$longArrayType: javaType;

var unsafe.$arrSizeHeap: [ref]int;

var unsafe.$stringSizeHeap: [ref]int;

var unsafe.$boolArrHeap: boolArrHeap_type;

var unsafe.$refArrHeap: refArrHeap_type;

var unsafe.$realArrHeap: realArrHeap_type;

var unsafe.$intArrHeap: intArrHeap_type;

var unsafe.$objIndex: int;

var unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$org.cryptomator.crypto.aes256.Aes256Cryptor$1$this$0259: Field ref;

var unsafe.java.nio.file.PathMatcher$org.cryptomator.crypto.aes256.FileNamingConventions$ENCRYPTED_FILE_GLOB_MATCHER463: ref;

var unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261: Field ref;

var unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260: ref;

var unsafe.int$org.cryptomator.crypto.aes256.Aes256Cryptor$AES_KEY_LENGTH_IN_BITS0: int;

var unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262: Field ref;

var unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263: Field ref;

var unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464: ref;

var unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465: ref;

var unsafe.boolean$java.lang.Boolean$value0: Field int;

const unique unsafe.$type: Field javaType;

const unique unsafe.$alloc: Field bool;

const unique unsafe.$null: ref;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.Object: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.file.DirectoryStream$Filter: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1: javaType extends unique unsafe.java.lang.Object, unsafe.java.nio.file.DirectoryStream$Filter complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.AbstractCryptor: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.aes256.AesCryptographicConfiguration: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.aes256.FileNamingConventions: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor: javaType extends unique unsafe.org.cryptomator.crypto.AbstractCryptor, unsafe.org.cryptomator.crypto.aes256.AesCryptographicConfiguration, unsafe.org.cryptomator.crypto.aes256.FileNamingConventions complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.Comparable: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.Iterable: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.file.Watchable: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.file.Path: javaType extends unsafe.java.lang.Comparable, unsafe.java.lang.Iterable, unsafe.java.nio.file.Watchable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.io.Serializable: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.Throwable: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Serializable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.Exception: javaType extends unique unsafe.java.lang.Throwable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.RuntimeException: javaType extends unique unsafe.java.lang.Exception complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.file.PathMatcher: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.ClassCastException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.io.IOException: javaType extends unique unsafe.java.lang.Exception complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.com.fasterxml.jackson.databind.ObjectMapper: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.util.Random: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Serializable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.security.SecureRandom: javaType extends unique unsafe.java.util.Random complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.ArithmeticException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.security.spec.KeySpec: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.security.Key: javaType extends unsafe.java.io.Serializable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.security.auth.Destroyable: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.crypto.SecretKey: javaType extends unsafe.java.security.Key, unsafe.javax.security.auth.Destroyable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.crypto.spec.SecretKeySpec: javaType extends unique unsafe.java.lang.Object, unsafe.java.security.spec.KeySpec, unsafe.javax.crypto.SecretKey complete;

const unique unsafe.$StringConst0: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.CharSequence: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.String: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Serializable, unsafe.java.lang.Comparable, unsafe.java.lang.CharSequence complete;

const unique unsafe.$StringConst1: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.util.Arrays: javaType extends unique unsafe.java.lang.Object complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.AutoCloseable: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.io.Closeable: javaType extends unsafe.java.lang.AutoCloseable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.io.Flushable: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.io.OutputStream: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Closeable, unsafe.java.io.Flushable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.crypto.Cipher: javaType extends unique unsafe.java.lang.Object complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.security.GeneralSecurityException: javaType extends unique unsafe.java.lang.Exception complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.security.KeyException: javaType extends unique unsafe.java.security.GeneralSecurityException complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.security.InvalidKeyException: javaType extends unique unsafe.java.security.KeyException complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.aes256.KeyFile: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.IllegalStateException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const unique unsafe.$StringConst2: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.io.InputStream: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Closeable complete;

const unique unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$KeyFile: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.reflect.AnnotatedElement: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.reflect.GenericDeclaration: javaType extends unsafe.java.lang.reflect.AnnotatedElement complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.reflect.Type: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.security.NoSuchAlgorithmException: javaType extends unique unsafe.java.security.GeneralSecurityException complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.exceptions.UnsupportedKeyLengthException: javaType extends complete;

const unique unsafe.$StringConst3: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.exceptions.WrongPasswordException: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.security.auth.DestroyFailedException: javaType extends unique unsafe.java.lang.Exception complete;

const unique unsafe.$StringConst4: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.crypto.NoSuchPaddingException: javaType extends unique unsafe.java.security.GeneralSecurityException complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.IllegalArgumentException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const unique unsafe.$StringConst5: ref extends complete;

const unique unsafe.$StringConst6: ref extends complete;

const unique unsafe.$StringConst7: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.security.spec.AlgorithmParameterSpec: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.crypto.spec.IvParameterSpec: javaType extends unique unsafe.java.lang.Object, unsafe.java.security.spec.AlgorithmParameterSpec complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.security.InvalidAlgorithmParameterException: javaType extends unique unsafe.java.security.GeneralSecurityException complete;

const unique unsafe.$StringConst8: ref extends complete;

const unique unsafe.$StringConst9: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.Error: javaType extends unique unsafe.java.lang.Throwable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.AssertionError: javaType extends unique unsafe.java.lang.Error complete;

const unique unsafe.$StringConst10: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.Cloneable: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.crypto.Mac: javaType extends unique unsafe.java.lang.Object, unsafe.java.lang.Cloneable complete;

const unique unsafe.$StringConst11: ref extends complete;

const unique unsafe.$StringConst12: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.Appendable: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.AbstractStringBuilder: javaType extends unique unsafe.java.lang.Object, unsafe.java.lang.Appendable, unsafe.java.lang.CharSequence complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.StringBuilder: javaType extends unique unsafe.java.lang.AbstractStringBuilder, unsafe.java.io.Serializable, unsafe.java.lang.CharSequence complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.bouncycastle.crypto.generators.SCrypt: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.util.zip.Checksum: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.util.zip.CRC32: javaType extends unique unsafe.java.lang.Object, unsafe.java.util.zip.Checksum complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.CryptorIOSupport: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.apache.commons.lang3.StringUtils: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.crypto.IllegalBlockSizeException: javaType extends unique unsafe.java.security.GeneralSecurityException complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.util.Collection: javaType extends unsafe.java.lang.Iterable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.util.AbstractCollection: javaType extends unique unsafe.java.lang.Object, unsafe.java.util.Collection complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.util.List: javaType extends unsafe.java.util.Collection complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.util.AbstractList: javaType extends unique unsafe.java.util.AbstractCollection, unsafe.java.util.List complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.util.RandomAccess: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.util.ArrayList: javaType extends unique unsafe.java.util.AbstractList, unsafe.java.util.List, unsafe.java.util.RandomAccess, unsafe.java.lang.Cloneable, unsafe.java.io.Serializable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.NullPointerException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.IndexOutOfBoundsException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.ArrayIndexOutOfBoundsException: javaType extends unique unsafe.java.lang.IndexOutOfBoundsException complete;

const unique unsafe.$StringConst13: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.apache.commons.lang3.ArrayUtils: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.Buffer: javaType extends unique unsafe.java.lang.Object complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.ByteBuffer: javaType extends unique unsafe.java.nio.Buffer, unsafe.java.lang.Comparable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.charset.Charset: javaType extends unique unsafe.java.lang.Object, unsafe.java.lang.Comparable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.crypto.BadPaddingException: javaType extends unique unsafe.java.security.GeneralSecurityException complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.apache.commons.codec.binary.BaseNCodec: javaType extends complete;

const unique unsafe.$StringConst14: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.Number: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Serializable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.Long: javaType extends unique unsafe.java.lang.Number, unsafe.java.lang.Comparable complete;

const unique unsafe.$StringConst15: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.util.UUID: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Serializable, unsafe.java.lang.Comparable complete;

const unique unsafe.$StringConst16: ref extends complete;

const unique unsafe.$StringConst17: ref extends complete;

const unique unsafe.$StringConst18: ref extends complete;

const unique unsafe.$StringConst19: ref extends complete;

const unique unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.channels.Channel: javaType extends unsafe.java.io.Closeable complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.channels.ReadableByteChannel: javaType extends unsafe.java.nio.channels.Channel complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.channels.WritableByteChannel: javaType extends unsafe.java.nio.channels.Channel complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.channels.ByteChannel: javaType extends unsafe.java.nio.channels.ReadableByteChannel, unsafe.java.nio.channels.WritableByteChannel complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.nio.channels.SeekableByteChannel: javaType extends unsafe.java.nio.channels.ByteChannel complete;

const unique unsafe.$StringConst20: ref extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.io.SeekableByteChannelInputStream: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.aes256.MacInputStream: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.apache.commons.io.output.NullOutputStream: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.apache.commons.io.IOUtils: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.io.FilterInputStream: javaType extends unique unsafe.java.io.InputStream complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.crypto.CipherInputStream: javaType extends unique unsafe.java.io.FilterInputStream complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.io.SeekableByteChannelOutputStream: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.org.cryptomator.crypto.aes256.MacOutputStream: javaType extends complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.io.FilterOutputStream: javaType extends unique unsafe.java.io.OutputStream complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.javax.crypto.CipherOutputStream: javaType extends unique unsafe.java.io.FilterOutputStream complete;

const {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unique unsafe.java.lang.Math: javaType extends unique unsafe.java.lang.Object complete;

const unique unsafe.$DoubleConst0: int extends complete;

const unique unsafe.$DoubleConst1: int extends complete;

const unique unsafe.$StringConst21: ref extends complete;

const {:sourceloc "Boolean.java", -1, -1, -1, -1} unique unsafe.java.lang.Boolean: javaType extends unique unsafe.java.lang.Object complete;

function unsafe.$arrayType(t: javaType) : javaType;

function unsafe.$intToReal(x: int) : real;

function unsafe.$intToBool(x: int) : bool;

function unsafe.$refToBool(x: ref) : bool;

function unsafe.$boolToInt(x: bool) : int;

function unsafe.$cmpBool(x: bool, y: bool) : int;

function unsafe.$cmpRef(x: ref, y: ref) : int;

function unsafe.$cmpReal(x: real, y: real) : int;

function unsafe.$cmpInt(x: int, y: int) : int;

function unsafe.$bitOr(x: int, y: int) : int;

function unsafe.$bitAnd(x: int, y: int) : int;

function unsafe.$xorInt(x: int, y: int) : int;

function unsafe.$shlInt(x: int, y: int) : int;

function unsafe.$ushrInt(x: int, y: int) : int;

function unsafe.$shrInt(x: int, y: int) : int;

function unsafe.$mulInt(x: int, y: int) : int;

function unsafe.$divInt(x: int, y: int) : int;

function unsafe.$modInt(x: int, y: int) : int;

function unsafe.$intToRef(id: int) : ref;

function unsafe.$realOp32117(x: int, y: int) : int;

function unsafe.$realOp32086(x: int, y: int) : int;

function unsafe.$realOp32241(x: int, y: int) : int;

axiom (forall x: int :: 
  { unsafe.$intToBool(x): bool } 
  unsafe.$intToBool(x): bool <==> (if x == 0 then false else true));

axiom (forall x: ref :: 
  { unsafe.$refToBool(x): bool } 
  unsafe.$refToBool(x): bool <==> (if x == unsafe.$null then false else true));

axiom (forall x: bool :: 
  { unsafe.$boolToInt(x): int } 
  unsafe.$boolToInt(x): int == (if x <==> true then 1 else 0));

axiom (forall x: real, y: real :: 
  { unsafe.$cmpReal(x, y): int } 
  unsafe.$cmpReal(x, y): int == (if x > y then 1 else (if x < y then -1 else 0)));

axiom (forall x: int, y: int :: 
  { unsafe.$cmpInt(x, y): int } 
  unsafe.$cmpInt(x, y): int == (if x > y then 1 else (if x < y then -1 else 0)));

axiom (forall index: int :: unsafe.$intToRef(index) != unsafe.$null);

axiom (forall i1: int, i2: int :: 
  i1 == i2 <==> unsafe.$intToRef(i1) == unsafe.$intToRef(i2));

procedure {:prefix "unsafe"} unsafe.$new(obj_type: javaType) returns ($obj: ref);
  modifies unsafe.$objIndex, unsafe.$heap;
  free ensures unsafe.$objIndex == old(unsafe.$objIndex) + 1;
  free ensures !old(unsafe.$heap[$obj, unsafe.$alloc]);
  free ensures $obj == unsafe.$intToRef(old(unsafe.$objIndex));
  free ensures $obj != unsafe.$null;
  free ensures unsafe.$heap
   == old(unsafe.$heap)[$obj, unsafe.$alloc := true][$obj, unsafe.$type := obj_type];



procedure {:prefix "unsafe"} unsafe.java.lang.Object$java.lang.Object$clone$43($this: ref) returns ($other: ref);
  free ensures $other != unsafe.$null;
  free ensures unsafe.$heap[$other, unsafe.$alloc] <==> true;
  free ensures unsafe.$heap[$other, unsafe.$type] == unsafe.$heap[$this, unsafe.$type];



procedure {:prefix "unsafe"} unsafe.int$java.lang.String$compareTo$87($this: ref, $other: ref) returns ($return: int);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor($this: ref, $in_parameter__0: ref) returns ($exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Object$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.nio.file.PathMatcher$matches$java.nio.file.Path($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$init$ra$$($this: ref) returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.AbstractCryptor$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.com.fasterxml.jackson.databind.ObjectMapper$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.security.SecureRandom$generateSeed$int($this: ref, $in_parameter__0: int) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.security.SecureRandom$setSeed$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte($in_parameter__0: ref, $in_parameter__1: int) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$init$ra$$java.util.Random($this: ref, $in_parameter__0: ref) returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.util.Random$nextBytes$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptMasterKey$java.io.OutputStream_java.lang.CharSequence($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int($this: ref, $in_parameter__0: int) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: ref, 
    $in_parameter__2: int, 
    $in_parameter__3: int, 
    $in_parameter__4: int)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int($this: ref, $in_parameter__0: ref, $in_parameter__1: int)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.javax.crypto.Cipher$wrap$java.security.Key($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$setScryptSalt$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$setScryptCostParam$int($this: ref, $in_parameter__0: int) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$setScryptBlockSize$int($this: ref, $in_parameter__0: int) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$setKeyLength$int($this: ref, $in_parameter__0: int) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$setPrimaryMasterKey$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$setHMacMasterKey$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValue$java.io.OutputStream_java.lang.Object($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptMasterKey$java.io.InputStream_java.lang.CharSequence($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$java.io.InputStream_java.lang.Class($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.Cipher$getMaxAllowedKeyLength$java.lang.String($in_parameter__0: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$getKeyLength$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.exceptions.UnsupportedKeyLengthException$$la$init$ra$$int_int($this: ref, $in_parameter__0: int, $in_parameter__1: int)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$getScryptSalt$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$getScryptCostParam$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$getScryptBlockSize$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$getPrimaryMasterKey$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.Cipher$unwrap$byte$lp$$rp$_java.lang.String_int($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: int)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.KeyFile$getHMacMasterKey$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.exceptions.WrongPasswordException$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$swipeSensitiveDataInternal$($this: ref) returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable($this: ref, $in_parameter__0: ref) returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.javax.security.auth.Destroyable$destroy$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.Cipher$getInstance$java.lang.String($in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.Cipher$init$int_java.security.Key($this: ref, $in_parameter__0: int, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: int)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec($this: ref, $in_parameter__0: int, $in_parameter__1: ref, $in_parameter__2: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int($this: ref, $in_parameter__0: ref, $in_parameter__1: int)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.javax.crypto.Mac$getInstance$java.lang.String($in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.Mac$init$java.security.Key($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$$la$init$ra$$java.lang.CharSequence($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$toString$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.String$getBytes$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.bouncycastle.crypto.generators.SCrypt$generate$byte$lp$$rp$_byte$lp$$rp$_int_int_int_int($in_parameter__0: ref, 
    $in_parameter__1: ref, 
    $in_parameter__2: int, 
    $in_parameter__3: int, 
    $in_parameter__4: int, 
    $in_parameter__5: int)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.CharSequence$length$($this: ref) returns ($return: int, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$setCharAt$int_char($this: ref, $in_parameter__0: int, $in_parameter__1: int)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.util.zip.CRC32$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.util.zip.CRC32$update$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.util.zip.CRC32$getValue$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: int, 
    $in_parameter__2: int, 
    $in_parameter__3: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap, unsafe.$stringSizeHeap;



procedure {:prefix "unsafe"} unsafe.org.apache.commons.lang3.StringUtils$split$java.lang.String_char($in_parameter__0: ref, $in_parameter__1: int)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.util.ArrayList$$la$init$ra$$int($this: ref, $in_parameter__0: int) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap, unsafe.$stringSizeHeap;



procedure {:prefix "unsafe"} unsafe.java.util.List$add$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.apache.commons.lang3.StringUtils$join$java.lang.Iterable_char($in_parameter__0: ref, $in_parameter__1: int)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$append$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.Mac$doFinal$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.commons.lang3.ArrayUtils$subarray$byte$lp$$rp$_int_int($in_parameter__0: ref, $in_parameter__1: int, $in_parameter__2: int)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.nio.ByteBuffer$allocate$int($in_parameter__0: int) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.nio.ByteBuffer$array$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.String$getBytes$java.nio.charset.Charset($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.Long$toHexString$long($in_parameter__0: int) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getOrCreateUuidForEncryptedFilename$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.util.UUID$toString$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: ref)
   returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: int, 
    $in_parameter__2: int, 
    $in_parameter__3: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.String$$la$init$ra$$java.lang.String($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.String$endsWith$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.commons.lang3.StringUtils$removeEnd$java.lang.String_java.lang.String($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.util.UUID$fromString$java.lang.String($in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getEncryptedFilenameForUUID$java.util.UUID($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.commons.lang3.StringUtils$removeEndIgnoreCase$java.lang.String_java.lang.String($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$_java.nio.charset.Charset($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValueAsBytes$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.CryptorIOSupport$writePathSpecificMetadata$java.lang.String_byte$lp$$rp$($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$authenticateContent$java.nio.channels.SeekableByteChannel($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$authenticateContent_unsafe$java.nio.channels.SeekableByteChannel($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.nio.channels.SeekableByteChannel$position$long($this: ref, $in_parameter__0: int) returns ($return: ref, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.javax.crypto.Mac$getMacLength$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.nio.channels.SeekableByteChannel$read$java.nio.ByteBuffer($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.io.IOException$$la$init$ra$$java.lang.String($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.io.SeekableByteChannelInputStream$$la$init$ra$$java.nio.channels.SeekableByteChannel($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.MacInputStream$$la$init$ra$$java.io.InputStream_javax.crypto.Mac($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.commons.io.output.NullOutputStream$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.Long$longValue$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.commons.io.IOUtils$copyLarge$java.io.InputStream_java.io.OutputStream_long_long($in_parameter__0: ref, 
    $in_parameter__1: ref, 
    $in_parameter__2: int, 
    $in_parameter__3: int)
   returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.Mac$doFinal$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.nio.Buffer$capacity$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.nio.ByteBuffer$wrap$byte$lp$$rp$($in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.nio.ByteBuffer$getLong$($this: ref) returns ($return: int, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Long$valueOf$long($in_parameter__0: int) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.Throwable($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedFile$java.nio.channels.SeekableByteChannel_java.io.OutputStream($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.javax.crypto.CipherInputStream$$la$init$ra$$java.io.InputStream_javax.crypto.Cipher($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptRange$java.nio.channels.SeekableByteChannel_java.io.OutputStream_long_long($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: ref, 
    $in_parameter__2: int, 
    $in_parameter__3: int)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.nio.ByteBuffer$putLong$int_long($this: ref, $in_parameter__0: int, $in_parameter__1: int)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.nio.channels.SeekableByteChannel$truncate$long($this: ref, $in_parameter__0: int) returns ($return: ref, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.nio.Buffer$position$int($this: ref, $in_parameter__0: int) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.nio.channels.SeekableByteChannel$write$java.nio.ByteBuffer($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.io.SeekableByteChannelOutputStream$$la$init$ra$$java.nio.channels.SeekableByteChannel($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.MacOutputStream$$la$init$ra$$java.io.OutputStream_javax.crypto.Mac($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.CipherOutputStream$$la$init$ra$$java.io.OutputStream_javax.crypto.Cipher($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.org.apache.commons.io.IOUtils$copyLarge$java.io.InputStream_java.io.OutputStream($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.Math$random$() returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.Math$ceil$double($in_parameter__0: int) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.io.OutputStream$write$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.io.OutputStream$flush$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.nio.ByteBuffer$putLong$long($this: ref, $in_parameter__0: int) returns ($return: ref, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$getPayloadFilesFilter$($this: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$clinit$ra$$() returns ($exception: ref);
  modifies unsafe.int$org.cryptomator.crypto.aes256.Aes256Cryptor$AES_KEY_LENGTH_IN_BITS0, unsafe.$objIndex, unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.security.SecureRandom$getInstance$java.lang.String($in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.Boolean$$la$init$ra$$boolean($this: ref, $in_parameter__0: int) returns ($exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Boolean$valueOf$boolean($in_parameter__0: int) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Boolean$booleanValue$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59(in_$exception: ref, in_r3: ref, in_r1: ref, in_$i5: int, in_i7: int)
   returns (out_$exception: ref, out_$i5: int, out_i7: int);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56(in_$return: ref, 
    in_$exception: ref, 
    in_i6: int, 
    in_$i4: int, 
    in_r3: ref, 
    in_r1: ref, 
    in_$fakelocal_3: ref)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_i6: int, 
    out_$i4: int, 
    out_$fakelocal_3: ref);
  modifies unsafe.$heap, unsafe.$objIndex;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65(in_$return: ref, 
    in_$exception: ref, 
    in_r6: ref, 
    in_r3: ref, 
    in_i4: int, 
    in_$fakelocal_4: int, 
    in_$r9: ref, 
    in_r4: ref, 
    in_r5: ref, 
    in_$fakelocal_3: ref, 
    in_i2: int, 
    in_r0: ref, 
    in_r2: ref)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_r6: ref, 
    out_i4: int, 
    out_$fakelocal_4: int, 
    out_$r9: ref, 
    out_r5: ref, 
    out_$fakelocal_3: ref);
  modifies unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73(in_$return: ref, 
    in_$exception: ref, 
    in_i4: int, 
    in_r2: ref, 
    in_$r9: ref, 
    in_r6: ref, 
    in_r4: ref, 
    in_$fakelocal_3: ref, 
    in_r0: ref, 
    in_i2: int, 
    in_$fakelocal_4: ref, 
    in_$r10: ref, 
    in_r5: ref, 
    in_$fakelocal_5: int, 
    in_r3: ref)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_i4: int, 
    out_$r9: ref, 
    out_r6: ref, 
    out_$fakelocal_3: ref, 
    out_$fakelocal_4: ref, 
    out_$r10: ref, 
    out_r5: ref, 
    out_$fakelocal_5: int);
  modifies unsafe.$heap, unsafe.$objIndex;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92(in_$return: int, 
    in_$exception: ref, 
    in_i0: int, 
    in_$b2: int, 
    in_$fakelocal_3: ref, 
    in_r0: ref, 
    in_i4: int, 
    in_$fakelocal_2: ref, 
    in_r1: ref, 
    in_$b3: int)
   returns (out_$return: int, 
    out_$exception: ref, 
    out_$b2: int, 
    out_$fakelocal_3: ref, 
    out_i4: int, 
    out_$fakelocal_2: ref, 
    out_$b3: int);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105(in_$return: ref, 
    in_$exception: ref, 
    in_i10: int, 
    in_r12: ref, 
    in_r10: ref, 
    in_i0: int)
   returns (out_$return: ref, out_$exception: ref, out_i10: int);



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor($this: ref, $in_parameter__0: ref) returns ($exception: ref)
{
  var r0: ref;
  var r1: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$org.cryptomator.crypto.aes256.Aes256Cryptor$1$this$0259 := r1];
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    $exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    goto block1;

  block1:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref)
{
  var $r2: ref;
  var r0: ref;
  var r1: ref;
  var $fakelocal_0: ref;
  var $z0: int;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.nio.file.Path;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 628, -1, -1, -1} true;
    $r2 := unsafe.java.nio.file.PathMatcher$org.cryptomator.crypto.aes256.FileNamingConventions$ENCRYPTED_FILE_GLOB_MATCHER463;
    assert {:sourceloc "Aes256Cryptor.java", 628, -1, -1, -1} true;
    goto anon4_Then, anon4_Else;

  anon4_Else:
    assume {:partition} $r2 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon4_Then:
    assume {:partition} $r2 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $z0, $exception := unsafe.java.nio.file.PathMatcher$matches$java.nio.file.Path($r2, r1);
    assert {:sourceloc "Aes256Cryptor.java", 628, -1, -1, -1} true;
    $return := $z0;
    goto block2;

  block2:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref)
{
  var $fakelocal_0: ref;
  var $z0: int;
  var r1: ref;
  var $r2: ref;
  var r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$z0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.Object;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} !(unsafe.$heap[r1, unsafe.$type] <: unsafe.java.nio.file.Path);
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon8_Then:
    assume {:partition} unsafe.$heap[r1, unsafe.$type] <: unsafe.java.nio.file.Path;
    $exception := $exception;
    goto anon3;

  anon3:
    $r2 := r1;
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$in_parameter__0 := $r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$z0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.nio.file.Path;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 628, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$r2 := unsafe.java.nio.file.PathMatcher$org.cryptomator.crypto.aes256.FileNamingConventions$ENCRYPTED_FILE_GLOB_MATCHER463;
    assert {:sourceloc "Aes256Cryptor.java", 628, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$anon4_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$anon4_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$anon4_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$r2
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$return := 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$anon4_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$r2
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$z0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$exception := unsafe.java.nio.file.PathMatcher$matches$java.nio.file.Path(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 628, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$z0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$block2;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$block2:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$Return:
    $z0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$accept$java.nio.file.Path$0$$exception;
    goto anon3$1;

  anon3$1:
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon7;

  anon7:
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    $return := $z0;
    goto block3;

  block3:
    return;

  anon9_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon7;

  anon10_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := 0;
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$init$ra$$($this: ref) returns ($exception: ref)
{
  var $i0: int;
  var $fakelocal_5: ref;
  var $fakelocal_0: ref;
  var $fakelocal_3: ref;
  var $i1: int;
  var $r8: ref;
  var $r11: ref;
  var $r9: ref;
  var $fakelocal_1: ref;
  var r2: ref;
  var $r10: ref;
  var $r4: ref;
  var $r3: ref;
  var $r6: ref;
  var r0: ref;
  var r1: ref;
  var $fakelocal_6: ref;
  var $r5: ref;
  var $fakelocal_2: ref;
  var $fakelocal_4: ref;
  var $r7: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", 104, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.AbstractCryptor$$la$init$ra$$(r0);
    assert {:sourceloc "Aes256Cryptor.java", 78, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.com.fasterxml.jackson.databind.ObjectMapper);
    $r3 := $fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 78, -1, -1, -1} true;
    call $exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$$la$init$ra$$($r3);
    assert {:sourceloc "Aes256Cryptor.java", 78, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261 := $r3];
    assert {:sourceloc "Aes256Cryptor.java", 105, -1, -1, -1} true;
    $r5 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 105, -1, -1, -1} true;
    $r4 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 105, -1, -1, -1} true;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} $r4 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_1;
    return;

  anon32_Then:
    assume {:partition} $r4 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $r6, $exception := unsafe.java.security.SecureRandom$generateSeed$int($r4, 16);
    assert {:sourceloc "Aes256Cryptor.java", 105, -1, -1, -1} true;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} $r5 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_2;
    return;

  anon33_Then:
    assume {:partition} $r5 != unsafe.$null;
    $exception := $exception;
    goto anon6;

  anon6:
    call $exception := unsafe.java.security.SecureRandom$setSeed$byte$lp$$rp$($r5, $r6);
    assert {:sourceloc "Aes256Cryptor.java", 106, -1, -1, -1} true;
    $i0 := unsafe.int$org.cryptomator.crypto.aes256.Aes256Cryptor$AES_KEY_LENGTH_IN_BITS0;
    assert {:sourceloc "Aes256Cryptor.java", 106, -1, -1, -1} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} 8 == 0;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    $exception := $fakelocal_3;
    return;

  anon34_Then:
    assume {:partition} 8 != 0;
    $exception := $exception;
    goto anon9;

  anon9:
    $i1 := unsafe.$divInt($i0, 8);
    assert {:sourceloc "Aes256Cryptor.java", 106, -1, -1, -1} true;
    call $fakelocal_4 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[$fakelocal_4 := $i1];
    r1 := $fakelocal_4;
    goto block4;

  block4:
    assert {:sourceloc "Aes256Cryptor.java", 108, -1, -1, -1} true;
    $r7 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 108, -1, -1, -1} true;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} $r7 == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 108, -1, -1, -1} true;
    assert {:noverify} true;
    call $exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto block5;

  block5:
    assert {:sourceloc "Aes256Cryptor.java", 116, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r11 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 114, -1, -1, -1} true;
    r2 := $r11;
    assert {:sourceloc "Aes256Cryptor.java", 114, -1, -1, -1} true;
    call $exception := unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte(r1, 0);
    assert {:sourceloc "Aes256Cryptor.java", 115, -1, -1, -1} true;
    $exception := r2;
    goto block8;

  block8:
    return;

  anon35_Then:
    assume {:partition} $r7 != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 108, -1, -1, -1} true;
    goto anon12;

  anon12:
    call $exception := unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$($r7, r1);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon16;

  anon16:
    assert {:sourceloc "Aes256Cryptor.java", 109, -1, -1, -1} true;
    call $fakelocal_5 := unsafe.$new(unsafe.javax.crypto.spec.SecretKeySpec);
    $r8 := $fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 109, -1, -1, -1} true;
    call $exception := unsafe.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String($r8, r1, unsafe.$StringConst0);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon20;

  anon20:
    assert {:sourceloc "Aes256Cryptor.java", 109, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262 := $r8];
    assert {:sourceloc "Aes256Cryptor.java", 111, -1, -1, -1} true;
    $r9 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 111, -1, -1, -1} true;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} $r9 == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 111, -1, -1, -1} true;
    assert {:noverify} true;
    call $exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto block5;

  anon40_Then:
    assume {:partition} $r9 != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 111, -1, -1, -1} true;
    goto anon23;

  anon23:
    call $exception := unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$($r9, r1);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon27;

  anon27:
    assert {:sourceloc "Aes256Cryptor.java", 112, -1, -1, -1} true;
    call $fakelocal_6 := unsafe.$new(unsafe.javax.crypto.spec.SecretKeySpec);
    $r10 := $fakelocal_6;
    assert {:sourceloc "Aes256Cryptor.java", 112, -1, -1, -1} true;
    call $exception := unsafe.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String($r10, r1, unsafe.$StringConst1);
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon31;

  anon31:
    assert {:sourceloc "Aes256Cryptor.java", 112, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263 := $r10];
    goto block6;

  block6:
    assert {:sourceloc "Aes256Cryptor.java", 114, -1, -1, -1} true;
    call $exception := unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte(r1, 0);
    assert {:sourceloc "Aes256Cryptor.java", 115, -1, -1, -1} true;
    goto block7;

  block7:
    assert {:sourceloc "Aes256Cryptor.java", 116, -1, -1, -1} true;
    goto block8;

  anon43_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto anon31;

  anon44_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    $r10 := unsafe.$null;
    goto block5;

  anon41_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto anon27;

  anon42_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    goto block5;

  anon38_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto anon20;

  anon39_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    $r8 := unsafe.$null;
    goto block5;

  anon36_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto anon16;

  anon37_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    goto block5;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$init$ra$$java.util.Random($this: ref, $in_parameter__0: ref) returns ($exception: ref)
{
  var $fakelocal_0: ref;
  var $r4: ref;
  var $fakelocal_2: ref;
  var $i0: int;
  var r1: ref;
  var $r5: ref;
  var r3: ref;
  var $fakelocal_3: ref;
  var $fakelocal_1: ref;
  var r0: ref;
  var $r7: ref;
  var $fakelocal_4: ref;
  var r2: ref;
  var $r6: ref;
  var $i1: int;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.util.Random;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 124, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.AbstractCryptor$$la$init$ra$$(r0);
    assert {:sourceloc "Aes256Cryptor.java", 78, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.com.fasterxml.jackson.databind.ObjectMapper);
    $r4 := $fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 78, -1, -1, -1} true;
    call $exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$$la$init$ra$$($r4);
    assert {:sourceloc "Aes256Cryptor.java", 78, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261 := $r4];
    assert {:sourceloc "Aes256Cryptor.java", 125, -1, -1, -1} true;
    $i0 := unsafe.int$org.cryptomator.crypto.aes256.Aes256Cryptor$AES_KEY_LENGTH_IN_BITS0;
    assert {:sourceloc "Aes256Cryptor.java", 125, -1, -1, -1} true;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} 8 == 0;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    $exception := $fakelocal_1;
    return;

  anon23_Then:
    assume {:partition} 8 != 0;
    $exception := $exception;
    goto anon3;

  anon3:
    $i1 := unsafe.$divInt($i0, 8);
    assert {:sourceloc "Aes256Cryptor.java", 125, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[$fakelocal_2 := $i1];
    r2 := $fakelocal_2;
    goto block9;

  block9:
    assert {:sourceloc "Aes256Cryptor.java", 127, -1, -1, -1} true;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} r1 == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 127, -1, -1, -1} true;
    assert {:noverify} true;
    call $exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto block10;

  block10:
    assert {:sourceloc "Aes256Cryptor.java", 135, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r7 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 133, -1, -1, -1} true;
    r3 := $r7;
    assert {:sourceloc "Aes256Cryptor.java", 133, -1, -1, -1} true;
    call $exception := unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte(r2, 0);
    assert {:sourceloc "Aes256Cryptor.java", 134, -1, -1, -1} true;
    $exception := r3;
    goto block13;

  block13:
    return;

  anon24_Then:
    assume {:partition} r1 != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 127, -1, -1, -1} true;
    goto anon6;

  anon6:
    call $exception := unsafe.java.util.Random$nextBytes$byte$lp$$rp$(r1, r2);
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon10;

  anon10:
    assert {:sourceloc "Aes256Cryptor.java", 128, -1, -1, -1} true;
    call $fakelocal_3 := unsafe.$new(unsafe.javax.crypto.spec.SecretKeySpec);
    $r5 := $fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 128, -1, -1, -1} true;
    call $exception := unsafe.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String($r5, r2, unsafe.$StringConst0);
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon14;

  anon14:
    assert {:sourceloc "Aes256Cryptor.java", 128, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262 := $r5];
    assert {:sourceloc "Aes256Cryptor.java", 130, -1, -1, -1} true;
    call $exception := unsafe.java.util.Random$nextBytes$byte$lp$$rp$(r1, r2);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon18;

  anon18:
    assert {:sourceloc "Aes256Cryptor.java", 131, -1, -1, -1} true;
    call $fakelocal_4 := unsafe.$new(unsafe.javax.crypto.spec.SecretKeySpec);
    $r6 := $fakelocal_4;
    assert {:sourceloc "Aes256Cryptor.java", 131, -1, -1, -1} true;
    call $exception := unsafe.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String($r6, r2, unsafe.$StringConst1);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon22;

  anon22:
    assert {:sourceloc "Aes256Cryptor.java", 131, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263 := $r6];
    goto block11;

  block11:
    assert {:sourceloc "Aes256Cryptor.java", 133, -1, -1, -1} true;
    call $exception := unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte(r2, 0);
    assert {:sourceloc "Aes256Cryptor.java", 134, -1, -1, -1} true;
    goto block12;

  block12:
    assert {:sourceloc "Aes256Cryptor.java", 135, -1, -1, -1} true;
    goto block13;

  anon31_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto anon22;

  anon32_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    $r6 := unsafe.$null;
    goto block10;

  anon29_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto anon18;

  anon30_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    goto block10;

  anon27_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto anon14;

  anon28_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    $r5 := unsafe.$null;
    goto block10;

  anon25_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto anon10;

  anon26_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    goto block10;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptMasterKey$java.io.OutputStream_java.lang.CharSequence($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref)
{
  var $r10: ref;
  var r0: ref;
  var r3: ref;
  var $fakelocal_0: ref;
  var r1: ref;
  var r7: ref;
  var $i1: int;
  var r6: ref;
  var r2: ref;
  var $r11: ref;
  var $r9: ref;
  var $r8: ref;
  var $fakelocal_3: ref;
  var $r13: ref;
  var $fakelocal_1: ref;
  var $i0: int;
  var r15: ref;
  var r4: ref;
  var r14: ref;
  var r5: ref;
  var $fakelocal_2: ref;
  var $r12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$in_parameter__0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$arrSizeHeap: [ref]int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.CharSequence;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.io.OutputStream;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    goto block14;

  block14:
    assert {:sourceloc "Aes256Cryptor.java", 144, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$in_parameter__0 := 8;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$this
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 269, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_0 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$i0];
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon10_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon10_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon10_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon10_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := unsafe.java.security.SecureRandom$generateSeed$int(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2, 16);
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon6:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := unsafe.java.security.SecureRandom$setSeed$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r4);
    assert {:sourceloc "Aes256Cryptor.java", 271, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 271, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon12_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon12_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 272, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$block52;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$block52:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Return:
    r14 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception;
    goto block14$1;

  block14$1:
    assert {:sourceloc "Aes256Cryptor.java", 145, -1, -1, -1} true;
    $i0 := unsafe.int$org.cryptomator.crypto.aes256.Aes256Cryptor$AES_KEY_LENGTH_IN_BITS0;
    assert {:sourceloc "Aes256Cryptor.java", 145, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__0 := r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__1 := r14;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__2 := 16384;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__3 := 8;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__4 := $i0;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.CharSequence;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__3;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__4;
    assert {:sourceloc "Aes256Cryptor.java", 277, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 277, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$java.lang.CharSequence(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 277, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r8;
    assert {:sourceloc "Aes256Cryptor.java", 278, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3);
    assert {:sourceloc "Aes256Cryptor.java", 278, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon24_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon24_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon24_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon24_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.String$getBytes$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block53;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block53:
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon25_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon25_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon25_Else:
    assume {:partition} 8 == 0;
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    assert {:noverify} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return := unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.$new(unsafe.java.lang.ArithmeticException);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block54;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block54:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r11 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 284, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r11;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block58;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block58:
    assert {:sourceloc "Aes256Cryptor.java", 284, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7 := 0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$block59;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$block59:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7;
    unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59_last;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon32_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon23:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon23_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon32_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block60;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block60:
    assert {:sourceloc "Aes256Cryptor.java", 288, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block61;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block61:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon25_Then:
    assume {:partition} 8 != 0;
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon6:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i3 := unsafe.$divInt(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i2, 
  8);
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.org.bouncycastle.crypto.generators.SCrypt$generate$byte$lp$$rp$_byte$lp$$rp$_int_int_int_int(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i1, 1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon26_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon26_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon26_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon10:
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_2 := unsafe.$new(unsafe.javax.crypto.spec.SecretKeySpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r5, unsafe.$StringConst0);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon28_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon28_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon28_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon14;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon14:
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block55;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block55:
    assert {:sourceloc "Aes256Cryptor.java", 284, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6 := 0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex := unsafe.$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$block56;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$block56:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon17:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56_last;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon30_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon30_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon17:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon31_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon31_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon31_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon20_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon31_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block57;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block57:
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block61;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon28_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon29_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon29_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon29_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon14;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon29_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block54;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon26_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon27_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon27_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon27_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block54;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon23_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59_last:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon32_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon32_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon20_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56_last:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon30_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon30_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return:
    r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    goto block14$2;

  block14$2:
    assert {:sourceloc "Aes256Cryptor.java", 148, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__0 := r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__1 := 3;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block32:
    assert {:sourceloc "Aes256Cryptor.java", 221, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst4);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 222, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block35;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block35:
    assert {:sourceloc "Aes256Cryptor.java", 223, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block36;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block36:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block35;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block34;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block34:
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 224, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 225, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 225, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r5, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r7);
    assert {:sourceloc "Aes256Cryptor.java", 225, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block36;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block33;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block33:
    assert {:sourceloc "Aes256Cryptor.java", 223, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 226, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r3, unsafe.$StringConst6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r8);
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block36;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$Return:
    r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception;
    goto block14$3;

  block14$3:
    assert {:sourceloc "Aes256Cryptor.java", 149, -1, -1, -1} true;
    $r8 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 149, -1, -1, -1} true;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} r4 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_0;
    return;

  anon46_Then:
    assume {:partition} r4 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call r5, $exception := unsafe.javax.crypto.Cipher$wrap$java.security.Key(r4, $r8);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon7;

  anon7:
    assert {:sourceloc "Aes256Cryptor.java", 150, -1, -1, -1} true;
    $r9 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263];
    assert {:sourceloc "Aes256Cryptor.java", 150, -1, -1, -1} true;
    call r6, $exception := unsafe.javax.crypto.Cipher$wrap$java.security.Key(r4, $r9);
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon11;

  anon11:
    assert {:sourceloc "Aes256Cryptor.java", 153, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.KeyFile);
    $r10 := $fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 153, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$$la$init$ra$$($r10);
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon15;

  anon15:
    assert {:sourceloc "Aes256Cryptor.java", 153, -1, -1, -1} true;
    r7 := $r10;
    assert {:sourceloc "Aes256Cryptor.java", 154, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$setScryptSalt$byte$lp$$rp$(r7, r14);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon19;

  anon19:
    assert {:sourceloc "Aes256Cryptor.java", 155, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$setScryptCostParam$int(r7, 16384);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon23;

  anon23:
    assert {:sourceloc "Aes256Cryptor.java", 156, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$setScryptBlockSize$int(r7, 8);
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon27;

  anon27:
    assert {:sourceloc "Aes256Cryptor.java", 157, -1, -1, -1} true;
    $i1 := unsafe.int$org.cryptomator.crypto.aes256.Aes256Cryptor$AES_KEY_LENGTH_IN_BITS0;
    assert {:sourceloc "Aes256Cryptor.java", 157, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$setKeyLength$int(r7, $i1);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon31;

  anon31:
    assert {:sourceloc "Aes256Cryptor.java", 158, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$setPrimaryMasterKey$byte$lp$$rp$(r7, r5);
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon35;

  anon35:
    assert {:sourceloc "Aes256Cryptor.java", 159, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$setHMacMasterKey$byte$lp$$rp$(r7, r6);
    goto anon63_Then, anon63_Else;

  anon63_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon39;

  anon39:
    assert {:sourceloc "Aes256Cryptor.java", 160, -1, -1, -1} true;
    $r11 := unsafe.$heap[r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 160, -1, -1, -1} true;
    goto anon65_Then, anon65_Else;

  anon65_Else:
    assume {:partition} $r11 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_2;
    return;

  anon65_Then:
    assume {:partition} $r11 != unsafe.$null;
    $exception := $exception;
    goto anon42;

  anon42:
    call $exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValue$java.io.OutputStream_java.lang.Object($r11, r1, r7);
    goto anon66_Then, anon66_Else;

  anon66_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block16;

  block16:
    assert {:sourceloc "Aes256Cryptor.java", 163, -1, -1, -1} true;
    goto block17;

  block17:
    assert {:sourceloc "Aes256Cryptor.java", 164, -1, -1, -1} true;
    goto block18;

  block18:
    return;

  anon66_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon67_Then, anon67_Else;

  anon67_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto block16;

  anon67_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    goto block15;

  block15:
    assert {:sourceloc "Aes256Cryptor.java", 164, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r12 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 161, -1, -1, -1} true;
    r15 := $r12;
    assert {:sourceloc "Aes256Cryptor.java", 162, -1, -1, -1} true;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    $r13 := $fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 162, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable($r13, unsafe.$StringConst2, r15);
    assert {:sourceloc "Aes256Cryptor.java", 162, -1, -1, -1} true;
    $exception := $r13;
    goto block18;

  anon63_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon64_Then, anon64_Else;

  anon64_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto anon39;

  anon64_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    goto block15;

  anon61_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon62_Then, anon62_Else;

  anon62_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto anon35;

  anon62_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    goto block15;

  anon59_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto anon31;

  anon60_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    goto block15;

  anon57_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto anon27;

  anon58_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    goto block15;

  anon55_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto anon23;

  anon56_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    goto block15;

  anon53_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto anon19;

  anon54_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    goto block15;

  anon51_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto anon15;

  anon52_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    $r10 := unsafe.$null;
    goto block15;

  anon49_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto anon11;

  anon50_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    goto block15;

  anon47_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto anon7;

  anon48_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    goto block15;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptMasterKey$java.io.InputStream_java.lang.CharSequence($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($exception: ref)
{
  var r23: ref;
  var $r17: ref;
  var $fakelocal_10: ref;
  var r1: ref;
  var $r11: ref;
  var $fakelocal_6: ref;
  var i0: int;
  var $fakelocal_1: ref;
  var r20: ref;
  var $fakelocal_2: ref;
  var $fakelocal_3: ref;
  var $fakelocal_9: ref;
  var $i2: int;
  var r24: ref;
  var r19: ref;
  var $r15: ref;
  var $fakelocal_5: ref;
  var $i5: int;
  var $fakelocal_8: ref;
  var $i3: int;
  var $r8: ref;
  var $r10: ref;
  var r22: ref;
  var r3: ref;
  var $i1: int;
  var $i4: int;
  var r25: ref;
  var $r9: ref;
  var $r12: ref;
  var r0: ref;
  var r26: ref;
  var r4: ref;
  var r2: ref;
  var $r7: ref;
  var $fakelocal_7: ref;
  var $r13: ref;
  var r5: ref;
  var $fakelocal_4: ref;
  var $fakelocal_0: ref;
  var r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.CharSequence;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.io.InputStream;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    goto block19;

  block19:
    assert {:sourceloc "Aes256Cryptor.java", 179, -1, -1, -1} true;
    $r7 := unsafe.$heap[r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 179, -1, -1, -1} true;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} $r7 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_0;
    return;

  anon76_Then:
    assume {:partition} $r7 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $r8, $exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$java.io.InputStream_java.lang.Class($r7, r1, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$KeyFile);
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon7;

  anon7:
    assert {:sourceloc "Aes256Cryptor.java", 179, -1, -1, -1} true;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} !(unsafe.$heap[$r8, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.KeyFile);
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $exception := $fakelocal_1;
    return;

  anon79_Then:
    assume {:partition} unsafe.$heap[$r8, unsafe.$type] <: unsafe.org.cryptomator.crypto.aes256.KeyFile;
    $exception := $exception;
    goto anon10;

  anon10:
    r19 := $r8;
    assert {:sourceloc "Aes256Cryptor.java", 182, -1, -1, -1} true;
    call i0, $exception := unsafe.javax.crypto.Cipher$getMaxAllowedKeyLength$java.lang.String(unsafe.$StringConst0);
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon14;

  anon14:
    assert {:sourceloc "Aes256Cryptor.java", 183, -1, -1, -1} true;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} r19 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_2;
    return;

  anon82_Then:
    assume {:partition} r19 != unsafe.$null;
    $exception := $exception;
    goto anon17;

  anon17:
    call $i1, $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$getKeyLength$(r19);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon21;

  anon21:
    assert {:sourceloc "Aes256Cryptor.java", 183, -1, -1, -1} true;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} i0 < $i1;
    assert {:sourceloc "Aes256Cryptor.java", 183, -1, -1, -1} {:comment "elseblock"} true;
    goto anon24;

  anon24:
    assert {:sourceloc "Aes256Cryptor.java", 184, -1, -1, -1} true;
    call $fakelocal_3 := unsafe.$new(unsafe.org.cryptomator.crypto.exceptions.UnsupportedKeyLengthException);
    r22 := $fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 184, -1, -1, -1} true;
    call $i5, $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$getKeyLength$(r19);
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon28;

  anon28:
    assert {:sourceloc "Aes256Cryptor.java", 184, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.exceptions.UnsupportedKeyLengthException$$la$init$ra$$int_int(r22, $i5, i0);
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon32;

  anon32:
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} !(unsafe.$heap[r22, unsafe.$type] <: unsafe.java.lang.Throwable);
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $exception := $fakelocal_4;
    return;

  anon90_Then:
    assume {:partition} unsafe.$heap[r22, unsafe.$type] <: unsafe.java.lang.Throwable;
    $exception := $exception;
    goto anon35;

  anon35:
    r25 := r22;
    assert {:sourceloc "Aes256Cryptor.java", 184, -1, -1, -1} true;
    $exception := r25;
    goto block25;

  block25:
    return;

  anon88_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon32;

  anon89_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    assert {:clone} true;
    r22 := unsafe.$null;
    goto block20;

  block20:
    assert {:sourceloc "Aes256Cryptor.java", 201, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r17 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 198, -1, -1, -1} true;
    r20 := $r17;
    assert {:sourceloc "Aes256Cryptor.java", 199, -1, -1, -1} true;
    call $fakelocal_8 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    r23 := $fakelocal_8;
    assert {:sourceloc "Aes256Cryptor.java", 199, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(r23, unsafe.$StringConst3, r20);
    assert {:sourceloc "Aes256Cryptor.java", 199, -1, -1, -1} true;
    $exception := r23;
    goto block25;

  anon86_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon28;

  anon87_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    assert {:clone} true;
    goto block20;

  anon85_Then:
    assume {:partition} $i1 <= i0;
    assert {:sourceloc "Aes256Cryptor.java", 183, -1, -1, -1} {:comment "thenblock"} true;
    goto block21;

  block21:
    assert {:sourceloc "Aes256Cryptor.java", 188, -1, -1, -1} true;
    call $r9, $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$getScryptSalt$(r19);
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon39;

  anon39:
    assert {:sourceloc "Aes256Cryptor.java", 188, -1, -1, -1} true;
    call $i2, $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$getScryptCostParam$(r19);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon43;

  anon43:
    assert {:sourceloc "Aes256Cryptor.java", 188, -1, -1, -1} true;
    call $i3, $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$getScryptBlockSize$(r19);
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon47;

  anon47:
    assert {:sourceloc "Aes256Cryptor.java", 188, -1, -1, -1} true;
    $i4 := unsafe.int$org.cryptomator.crypto.aes256.Aes256Cryptor$AES_KEY_LENGTH_IN_BITS0;
    assert {:sourceloc "Aes256Cryptor.java", 188, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__0 := r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__1 := $r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__2 := $i2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__3 := $i3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__4 := $i4;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.CharSequence;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__3;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$in_parameter__4;
    assert {:sourceloc "Aes256Cryptor.java", 277, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 277, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$java.lang.CharSequence(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 277, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r8;
    assert {:sourceloc "Aes256Cryptor.java", 278, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3);
    assert {:sourceloc "Aes256Cryptor.java", 278, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon24_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon24_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon24_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon24_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.String$getBytes$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r9);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block53;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block53:
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon25_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon25_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon25_Else:
    assume {:partition} 8 == 0;
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    assert {:noverify} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return := unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.$new(unsafe.java.lang.ArithmeticException);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block54;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block54:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r11 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 284, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r11;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block58;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block58:
    assert {:sourceloc "Aes256Cryptor.java", 284, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7 := 0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$block59;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$block59:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7;
    unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59_last;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon32_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon23:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon23_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon32_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i7
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block60;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block60:
    assert {:sourceloc "Aes256Cryptor.java", 288, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block61;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block61:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon25_Then:
    assume {:partition} 8 != 0;
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon6:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i3 := unsafe.$divInt(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i2, 
  8);
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.org.bouncycastle.crypto.generators.SCrypt$generate$byte$lp$$rp$_byte$lp$$rp$_int_int_int_int(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i1, 1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon26_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon26_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon26_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon10:
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_2 := unsafe.$new(unsafe.javax.crypto.spec.SecretKeySpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r5, unsafe.$StringConst0);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon28_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon28_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon28_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon14;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon14:
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block55;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block55:
    assert {:sourceloc "Aes256Cryptor.java", 284, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r4, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6 := 0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex := unsafe.$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$block56;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$block56:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon17:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56_last;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon30_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon30_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon17:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon31_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon31_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon31_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon20_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon31_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$i6
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i4;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block57;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block57:
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block61;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon28_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon29_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon29_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon29_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon14;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon29_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$r10 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block54;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon26_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon27_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon27_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon27_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block54;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon23_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block59_last:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon32_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon32_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon20_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$block56_last:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon30_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$anon30_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$Return:
    r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int$0$$exception;
    goto anon47$1;

  anon47$1:
    assert {:sourceloc "Aes256Cryptor.java", 191, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__0 := r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__1 := 4;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$in_parameter__1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block32:
    assert {:sourceloc "Aes256Cryptor.java", 221, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst4);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 222, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block35;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block35:
    assert {:sourceloc "Aes256Cryptor.java", 223, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block36;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block36:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block35;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block34;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block34:
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 224, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 225, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 225, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r5, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r7);
    assert {:sourceloc "Aes256Cryptor.java", 225, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block36;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block33;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block33:
    assert {:sourceloc "Aes256Cryptor.java", 223, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 226, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r3, unsafe.$StringConst6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$r8);
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$block36;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$Return:
    r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int$0$$exception;
    goto anon47$2;

  anon47$2:
    assert {:sourceloc "Aes256Cryptor.java", 192, -1, -1, -1} true;
    call $r10, $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$getPrimaryMasterKey$(r19);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon51;

  anon51:
    assert {:sourceloc "Aes256Cryptor.java", 192, -1, -1, -1} true;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} r4 == unsafe.$null;
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_5;
    return;

  anon99_Then:
    assume {:partition} r4 != unsafe.$null;
    $exception := $exception;
    goto anon54;

  anon54:
    call $r11, $exception := unsafe.javax.crypto.Cipher$unwrap$byte$lp$$rp$_java.lang.String_int(r4, $r10, unsafe.$StringConst0, 3);
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon58;

  anon58:
    assert {:sourceloc "Aes256Cryptor.java", 192, -1, -1, -1} true;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} !(unsafe.$heap[$r11, unsafe.$type] <: unsafe.javax.crypto.SecretKey);
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $exception := $fakelocal_6;
    return;

  anon102_Then:
    assume {:partition} unsafe.$heap[$r11, unsafe.$type] <: unsafe.javax.crypto.SecretKey;
    $exception := $exception;
    goto anon61;

  anon61:
    r5 := $r11;
    assert {:sourceloc "Aes256Cryptor.java", 193, -1, -1, -1} true;
    call $r12, $exception := unsafe.org.cryptomator.crypto.aes256.KeyFile$getHMacMasterKey$(r19);
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon65;

  anon65:
    assert {:sourceloc "Aes256Cryptor.java", 193, -1, -1, -1} true;
    call $r13, $exception := unsafe.javax.crypto.Cipher$unwrap$byte$lp$$rp$_java.lang.String_int(r4, $r12, unsafe.$StringConst1, 3);
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon69;

  anon69:
    assert {:sourceloc "Aes256Cryptor.java", 193, -1, -1, -1} true;
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} !(unsafe.$heap[$r13, unsafe.$type] <: unsafe.javax.crypto.SecretKey);
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $exception := $fakelocal_7;
    return;

  anon107_Then:
    assume {:partition} unsafe.$heap[$r13, unsafe.$type] <: unsafe.javax.crypto.SecretKey;
    $exception := $exception;
    goto anon72;

  anon72:
    r6 := $r13;
    assert {:sourceloc "Aes256Cryptor.java", 196, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262 := r5];
    assert {:sourceloc "Aes256Cryptor.java", 197, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263 := r6];
    goto block23;

  block23:
    assert {:sourceloc "Aes256Cryptor.java", 202, -1, -1, -1} true;
    goto block24;

  block24:
    assert {:sourceloc "Aes256Cryptor.java", 203, -1, -1, -1} true;
    goto block25;

  anon105_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon69;

  anon106_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    goto block20;

  anon103_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon65;

  anon104_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    assert {:clone} true;
    goto block20;

  anon100_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon58;

  anon101_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    goto block20;

  anon97_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon51;

  anon98_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    assert {:clone} true;
    goto block20;

  anon95_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon47;

  anon96_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    assert {:clone} true;
    goto block20;

  anon93_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon43;

  anon94_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    assert {:clone} true;
    goto block20;

  anon91_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon39;

  anon92_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    assert {:clone} true;
    goto block20;

  anon83_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon21;

  anon84_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    assert {:clone} true;
    goto block20;

  anon80_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon14;

  anon81_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    goto block20;

  anon77_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon7;

  anon78_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    assert {:clone} true;
    goto block20;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$swipeSensitiveDataInternal$($this: ref) returns ($exception: ref)
{
  var r0: ref;
  var $r2: ref;
  var $r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", 207, -1, -1, -1} true;
    $r1 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 207, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$in_parameter__0 := $r1;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.security.auth.Destroyable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$in_parameter__0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block27;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block27:
    assert {:sourceloc "Aes256Cryptor.java", 213, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon7_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon7_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon7_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon7_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception := unsafe.javax.security.auth.Destroyable$destroy$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon8_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon8_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon8_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block29;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block29:
    assert {:sourceloc "Aes256Cryptor.java", 216, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block30;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block30:
    assert {:sourceloc "Aes256Cryptor.java", 217, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block31;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block31:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon8_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon9_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon9_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon9_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception, unsafe.$type]
   <: unsafe.javax.security.auth.DestroyFailedException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block29;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$anon9_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception, unsafe.$type]
   <: unsafe.javax.security.auth.DestroyFailedException;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block28:
    assert {:sourceloc "Aes256Cryptor.java", 217, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$block30;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$Return:
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "Aes256Cryptor.java", 208, -1, -1, -1} true;
    $r2 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263];
    assert {:sourceloc "Aes256Cryptor.java", 208, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$in_parameter__0 := $r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.security.auth.Destroyable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$in_parameter__0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block27;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block27:
    assert {:sourceloc "Aes256Cryptor.java", 213, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon7_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon7_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon7_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon7_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception := unsafe.javax.security.auth.Destroyable$destroy$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon8_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon8_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon8_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block29;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block29:
    assert {:sourceloc "Aes256Cryptor.java", 216, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block30;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block30:
    assert {:sourceloc "Aes256Cryptor.java", 217, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block31;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block31:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon8_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon9_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon9_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon9_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception, unsafe.$type]
   <: unsafe.javax.security.auth.DestroyFailedException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block29;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$anon9_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception, unsafe.$type]
   <: unsafe.javax.security.auth.DestroyFailedException;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block28:
    assert {:sourceloc "Aes256Cryptor.java", 217, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$block30;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$Return:
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable$1$$exception;
    goto anon0$2;

  anon0$2:
    assert {:sourceloc "Aes256Cryptor.java", 209, -1, -1, -1} true;
    goto block26;

  block26:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$destroyQuietly$javax.security.auth.Destroyable($this: ref, $in_parameter__0: ref) returns ($exception: ref)
{
  var $fakelocal_0: ref;
  var r1: ref;
  var $r3: ref;
  var r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.javax.security.auth.Destroyable;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    goto block27;

  block27:
    assert {:sourceloc "Aes256Cryptor.java", 213, -1, -1, -1} true;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_0;
    return;

  anon7_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $exception := unsafe.javax.security.auth.Destroyable$destroy$(r1);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block29;

  block29:
    assert {:sourceloc "Aes256Cryptor.java", 216, -1, -1, -1} true;
    goto block30;

  block30:
    assert {:sourceloc "Aes256Cryptor.java", 217, -1, -1, -1} true;
    goto block31;

  block31:
    return;

  anon8_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.security.auth.DestroyFailedException);
    assert {:clone} true;
    goto block29;

  anon9_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.security.auth.DestroyFailedException;
    goto block28;

  block28:
    assert {:sourceloc "Aes256Cryptor.java", 217, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r3 := $exception;
    goto block30;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$aesKeyWrapCipher$javax.crypto.SecretKey_int($this: ref, $in_parameter__0: ref, $in_parameter__1: int)
   returns ($return: ref, $exception: ref)
{
  var $fakelocal_1: ref;
  var $fakelocal_2: ref;
  var r7: ref;
  var $fakelocal_0: ref;
  var $r2: ref;
  var r0: ref;
  var $r3: ref;
  var i0: int;
  var $r4: ref;
  var $r5: ref;
  var r8: ref;
  var r6: ref;
  var r1: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.javax.crypto.SecretKey;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    i0 := $in_parameter__1;
    goto block32;

  block32:
    assert {:sourceloc "Aes256Cryptor.java", 221, -1, -1, -1} true;
    call r6, $exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst4);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon4;

  anon4:
    assert {:sourceloc "Aes256Cryptor.java", 222, -1, -1, -1} true;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} r6 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon13_Then:
    assume {:partition} r6 != unsafe.$null;
    $exception := $exception;
    goto anon7;

  anon7:
    call $exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key(r6, i0, r1);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block35;

  block35:
    assert {:sourceloc "Aes256Cryptor.java", 223, -1, -1, -1} true;
    $return := r6;
    goto block36;

  block36:
    return;

  anon14_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto block35;

  anon15_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    $return := unsafe.$null;
    goto block34;

  block34:
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r4 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 224, -1, -1, -1} true;
    r7 := $r4;
    assert {:sourceloc "Aes256Cryptor.java", 225, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    $r5 := $fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 225, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable($r5, unsafe.$StringConst5, r7);
    assert {:sourceloc "Aes256Cryptor.java", 225, -1, -1, -1} true;
    $exception := $r5;
    goto block36;

  anon11_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto anon4;

  anon12_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    $return := unsafe.$null;
    goto block33;

  block33:
    assert {:sourceloc "Aes256Cryptor.java", 223, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r2 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 226, -1, -1, -1} true;
    r8 := $r2;
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    $r3 := $fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable($r3, unsafe.$StringConst6, r8);
    assert {:sourceloc "Aes256Cryptor.java", 227, -1, -1, -1} true;
    $exception := $r3;
    goto block36;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: int)
   returns ($return: ref, $exception: ref)
{
  var $fakelocal_0: ref;
  var $fakelocal_2: ref;
  var $fakelocal_1: ref;
  var $r4: ref;
  var r9: ref;
  var $r7: ref;
  var r10: ref;
  var r0: ref;
  var r2: ref;
  var $r6: ref;
  var r8: ref;
  var r1: ref;
  var i0: int;
  var $r3: ref;
  var $r5: ref;
  var $fakelocal_3: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.javax.crypto.SecretKey;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    i0 := $in_parameter__2;
    goto block37;

  block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call r8, $exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon4;

  anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    $r3 := $fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call $exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$($r3, r2);
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon8;

  anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} r8 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_1;
    return;

  anon19_Then:
    assume {:partition} r8 != unsafe.$null;
    $exception := $exception;
    goto anon11;

  anon11:
    call $exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(r8, i0, r1, $r3);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block40;

  block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    $return := r8;
    goto block41;

  block41:
    return;

  anon20_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto block40;

  anon21_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    $return := unsafe.$null;
    goto block38;

  block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r4 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    r10 := $r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    $r5 := $fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable($r5, unsafe.$StringConst8, r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    $exception := $r5;
    goto block41;

  anon17_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto anon8;

  anon18_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    $r3 := unsafe.$null;
    goto block39;

  block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r6 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    r9 := $r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    $r7 := $fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable($r7, unsafe.$StringConst5, r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    $exception := $r7;
    goto block41;

  anon15_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto anon4;

  anon16_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    $return := unsafe.$null;
    goto block38;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int($this: ref, $in_parameter__0: ref, $in_parameter__1: int)
   returns ($return: ref, $exception: ref)
{
  var i0: int;
  var r6: ref;
  var r7: ref;
  var r8: ref;
  var r1: ref;
  var $fakelocal_0: ref;
  var $r4: ref;
  var $fakelocal_1: ref;
  var $r2: ref;
  var $r3: ref;
  var $r5: ref;
  var $fakelocal_2: ref;
  var r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.javax.crypto.SecretKey;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    i0 := $in_parameter__1;
    goto block42;

  block42:
    assert {:sourceloc "Aes256Cryptor.java", 245, -1, -1, -1} true;
    call r6, $exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst9);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon4;

  anon4:
    assert {:sourceloc "Aes256Cryptor.java", 246, -1, -1, -1} true;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} r6 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon13_Then:
    assume {:partition} r6 != unsafe.$null;
    $exception := $exception;
    goto anon7;

  anon7:
    call $exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key(r6, i0, r1);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block45;

  block45:
    assert {:sourceloc "Aes256Cryptor.java", 247, -1, -1, -1} true;
    $return := r6;
    goto block46;

  block46:
    return;

  anon14_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto block45;

  anon15_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    $return := unsafe.$null;
    goto block44;

  block44:
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r4 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 248, -1, -1, -1} true;
    r7 := $r4;
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    $r5 := $fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable($r5, unsafe.$StringConst5, r7);
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    $exception := $r5;
    goto block46;

  anon11_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto anon4;

  anon12_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    $return := unsafe.$null;
    goto block43;

  block43:
    assert {:sourceloc "Aes256Cryptor.java", 247, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r2 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 250, -1, -1, -1} true;
    r8 := $r2;
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.AssertionError);
    $r3 := $fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    call $exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable($r3, unsafe.$StringConst10, r8);
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    $exception := $r3;
    goto block46;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var r0: ref;
  var r7: ref;
  var $fakelocal_0: ref;
  var $fakelocal_2: ref;
  var r8: ref;
  var $r3: ref;
  var $r2: ref;
  var $r4: ref;
  var r6: ref;
  var $r5: ref;
  var $fakelocal_1: ref;
  var r1: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.javax.crypto.Mac;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.javax.crypto.SecretKey;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    goto block47;

  block47:
    assert {:sourceloc "Aes256Cryptor.java", 258, -1, -1, -1} true;
    call r6, $exception := unsafe.javax.crypto.Mac$getInstance$java.lang.String(unsafe.$StringConst1);
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon4;

  anon4:
    assert {:sourceloc "Aes256Cryptor.java", 259, -1, -1, -1} true;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} r6 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon13_Then:
    assume {:partition} r6 != unsafe.$null;
    $exception := $exception;
    goto anon7;

  anon7:
    call $exception := unsafe.javax.crypto.Mac$init$java.security.Key(r6, r1);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block50;

  block50:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    $return := r6;
    goto block51;

  block51:
    return;

  anon14_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto block50;

  anon15_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    $return := unsafe.$null;
    goto block49;

  block49:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r2 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 263, -1, -1, -1} true;
    r8 := $r2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    $r3 := $fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable($r3, unsafe.$StringConst12, r8);
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    $exception := $r3;
    goto block51;

  anon11_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon4;

  anon12_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    $return := unsafe.$null;
    goto block48;

  block48:
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r4 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 261, -1, -1, -1} true;
    r7 := $r4;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.AssertionError);
    $r5 := $fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call $exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable($r5, unsafe.$StringConst11, r7);
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    $exception := $r5;
    goto block51;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int($this: ref, $in_parameter__0: int) returns ($return: ref, $exception: ref)
{
  var $r4: ref;
  var $r3: ref;
  var $fakelocal_2: ref;
  var $fakelocal_3: ref;
  var $r2: ref;
  var $fakelocal_0: ref;
  var r1: ref;
  var $fakelocal_1: ref;
  var i0: int;
  var r0: ref;
  var $r5: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    i0 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 269, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[$fakelocal_0 := i0];
    r1 := $fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    $r3 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    $r2 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} $r2 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_1;
    return;

  anon10_Then:
    assume {:partition} $r2 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $r4, $exception := unsafe.java.security.SecureRandom$generateSeed$int($r2, 16);
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} $r3 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon11_Then:
    assume {:partition} $r3 != unsafe.$null;
    $exception := $exception;
    goto anon6;

  anon6:
    call $exception := unsafe.java.security.SecureRandom$setSeed$byte$lp$$rp$($r3, $r4);
    assert {:sourceloc "Aes256Cryptor.java", 271, -1, -1, -1} true;
    $r5 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 271, -1, -1, -1} true;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} $r5 == unsafe.$null;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon12_Then:
    assume {:partition} $r5 != unsafe.$null;
    $exception := $exception;
    goto anon9;

  anon9:
    call $exception := unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$($r5, r1);
    assert {:sourceloc "Aes256Cryptor.java", 272, -1, -1, -1} true;
    $return := r1;
    goto block52;

  block52:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: ref, 
    $in_parameter__2: int, 
    $in_parameter__3: int, 
    $in_parameter__4: int)
   returns ($return: ref, $exception: ref)
{
  var $r10: ref;
  var r2: ref;
  var r0: ref;
  var $fakelocal_2: ref;
  var i6: int;
  var $i4: int;
  var r3: ref;
  var i2: int;
  var $fakelocal_0: ref;
  var $r8: ref;
  var $r9: ref;
  var $i3: int;
  var $r11: ref;
  var r1: ref;
  var $i5: int;
  var i1: int;
  var r7: ref;
  var r5: ref;
  var $fakelocal_1: ref;
  var i7: int;
  var r6: ref;
  var i0: int;
  var r4: ref;
  var $fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex: int;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.CharSequence;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.javax.crypto.SecretKey;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    i0 := $in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    i1 := $in_parameter__3;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    i2 := $in_parameter__4;
    assert {:sourceloc "Aes256Cryptor.java", 277, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r8 := $fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 277, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$java.lang.CharSequence($r8, r1);
    assert {:sourceloc "Aes256Cryptor.java", 277, -1, -1, -1} true;
    r3 := $r8;
    assert {:sourceloc "Aes256Cryptor.java", 278, -1, -1, -1} true;
    call $r9, $exception := unsafe.java.lang.StringBuilder$toString$(r3);
    assert {:sourceloc "Aes256Cryptor.java", 278, -1, -1, -1} true;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} $r9 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_1;
    return;

  anon24_Then:
    assume {:partition} $r9 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call r4, $exception := unsafe.java.lang.String$getBytes$($r9);
    goto block53;

  block53:
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} 8 == 0;
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    assert {:noverify} true;
    $return := unsafe.$null;
    call $exception := unsafe.$new(unsafe.java.lang.ArithmeticException);
    goto block54;

  block54:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r11 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 284, -1, -1, -1} true;
    r7 := $r11;
    goto block58;

  block58:
    assert {:sourceloc "Aes256Cryptor.java", 284, -1, -1, -1} true;
    call $exception := unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte(r4, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    i7 := 0;
    goto block59;

  block59:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception := $exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3 := r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1 := r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5 := $i5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7 := i7;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$block59;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$block59:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7;
    unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return:
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception;
    $i5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5;
    i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    goto block59$1;

  block59$1:
    goto block59_last;

  anon32_Else:
    assume {:partition} $i5 > i7;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto anon23;

  anon23:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call $exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(r3, i7, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    i7 := i7 + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto anon23_dummy;

  anon32_Then:
    assume {:partition} i7 >= $i5;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    goto block60;

  block60:
    assert {:sourceloc "Aes256Cryptor.java", 288, -1, -1, -1} true;
    $exception := r7;
    goto block61;

  block61:
    return;

  anon25_Then:
    assume {:partition} 8 != 0;
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    goto anon6;

  anon6:
    $i3 := unsafe.$divInt(i2, 8);
    assert {:sourceloc "Aes256Cryptor.java", 280, -1, -1, -1} true;
    call r5, $exception := unsafe.org.bouncycastle.crypto.generators.SCrypt$generate$byte$lp$$rp$_byte$lp$$rp$_int_int_int_int(r4, r2, i0, i1, 1, $i3);
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon10;

  anon10:
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.javax.crypto.spec.SecretKeySpec);
    $r10 := $fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    call $exception := unsafe.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String($r10, r5, unsafe.$StringConst0);
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon14;

  anon14:
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    r6 := $r10;
    goto block55;

  block55:
    assert {:sourceloc "Aes256Cryptor.java", 284, -1, -1, -1} true;
    call $exception := unsafe.java.util.Arrays$fill$byte$lp$$rp$_byte(r4, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    i6 := 0;
    goto block56;

  block56:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return := $return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception := $exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6 := i6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4 := $i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3 := r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1 := r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3 := $fakelocal_3;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex := unsafe.$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$block56;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$block56:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon17:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return:
    $return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception;
    i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6;
    $i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4;
    $fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    goto block56$1;

  block56$1:
    goto block56_last;

  anon30_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon30_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon17;

  anon17:
    call $i4, $exception := unsafe.java.lang.CharSequence$length$(r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} $i4 > i6;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto anon20;

  anon20:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call $exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(r3, i6, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    i6 := i6 + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto anon20_dummy;

  anon31_Then:
    assume {:partition} i6 >= $i4;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    goto block57;

  block57:
    assert {:sourceloc "Aes256Cryptor.java", 281, -1, -1, -1} true;
    $return := r6;
    goto block61;

  anon28_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto anon14;

  anon29_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    $r10 := unsafe.$null;
    goto block54;

  anon26_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable);
    assert {:clone} true;
    goto anon10;

  anon27_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    assert {:clone} true;
    goto block54;

  anon23_dummy:
    assume false;
    return;

  block59_last:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    call $i5, $exception := unsafe.java.lang.CharSequence$length$(r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto anon32_Then, anon32_Else;

  anon20_dummy:
    assume false;
    return;

  block56_last:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto anon30_Then, anon30_Else;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref)
{
  var r0: ref;
  var r2: ref;
  var $l0: int;
  var r1: ref;
  var $r3: ref;
  var $fakelocal_0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.util.zip.CRC32);
    $r3 := $fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call $exception := unsafe.java.util.zip.CRC32$$la$init$ra$$($r3);
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    r2 := $r3;
    assert {:sourceloc "Aes256Cryptor.java", 293, -1, -1, -1} true;
    call $exception := unsafe.java.util.zip.CRC32$update$byte$lp$$rp$(r2, r1);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    call $l0, $exception := unsafe.java.util.zip.CRC32$getValue$(r2);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    $return := $l0;
    goto block62;

  block62:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: int, 
    $in_parameter__2: int, 
    $in_parameter__3: ref)
   returns ($return: ref, $exception: ref)
{
  var r6: ref;
  var r3: ref;
  var i4: int;
  var $fakelocal_2: ref;
  var $fakelocal_4: int;
  var $r13: ref;
  var $fakelocal_7: ref;
  var $r9: ref;
  var $fakelocal_1: ref;
  var $fakelocal_8: ref;
  var $r10: ref;
  var $r12: ref;
  var $r15: ref;
  var $r11: ref;
  var r4: ref;
  var r1: ref;
  var c1: int;
  var $r8: ref;
  var $i3: int;
  var r16: ref;
  var r5: ref;
  var $fakelocal_3: ref;
  var $r14: ref;
  var $fakelocal_5: ref;
  var r17: ref;
  var c0: int;
  var i2: int;
  var $fakelocal_6: ref;
  var $r7: ref;
  var $fakelocal_0: ref;
  var r0: ref;
  var r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap: [ref]int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r34: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r33: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$l3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r29: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r27: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r42: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r30: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r35: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r38: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_18: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$stringSizeHeap: [ref]int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r34: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r33: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$l3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r29: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r27: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r42: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r30: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r35: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r38: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_18: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$stringSizeHeap: [ref]int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$l0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__3, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    c0 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    c1 := $in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__3;
    goto block63;

  block63:
    assert {:sourceloc "Aes256Cryptor.java", 300, -1, -1, -1} true;
    call r16, $exception := unsafe.org.apache.commons.lang3.StringUtils$split$java.lang.String_char(r1, c1);
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon4;

  anon4:
    assert {:sourceloc "Aes256Cryptor.java", 301, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.util.ArrayList);
    $r7 := $fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 301, -1, -1, -1} true;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} r16 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_1;
    return;

  anon40_Then:
    assume {:partition} r16 != unsafe.$null;
    $exception := $exception;
    goto anon7;

  anon7:
    $i3 := unsafe.$arrSizeHeap[r16];
    assert {:sourceloc "Aes256Cryptor.java", 301, -1, -1, -1} true;
    call $exception := unsafe.java.util.ArrayList$$la$init$ra$$int($r7, $i3);
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon11;

  anon11:
    assert {:sourceloc "Aes256Cryptor.java", 301, -1, -1, -1} true;
    r3 := $r7;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    r4 := r16;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} r4 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon43_Then:
    assume {:partition} r4 != unsafe.$null;
    $exception := $exception;
    goto anon14;

  anon14:
    i2 := unsafe.$arrSizeHeap[r4];
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    i4 := 0;
    goto block65;

  block65:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return := $return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception := $exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6 := r6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r3 := r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4 := i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4 := $fakelocal_4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9 := $r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r4 := r4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5 := r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3 := $fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i2 := i2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r0 := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r2 := r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap := unsafe.$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$block65;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$block65:
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon44_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon44_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon44_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i2;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon28:
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon28_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon48_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon49_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon48_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon49_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon49_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon49_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon24:
    assert {:sourceloc "Aes256Cryptor.java", 304, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception := unsafe.java.util.List$add$java.lang.Object(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon48_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon48_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon46_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon24;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon47_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon24;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon46_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon47_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon47_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon47_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon20:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5 := unsafe.$refArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r4][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 303, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 303, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r34, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r33, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$l3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r42, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r35, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r38, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$stringSizeHeap := unsafe.$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263];
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Mac;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block47;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block47:
    assert {:sourceloc "Aes256Cryptor.java", 258, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.javax.crypto.Mac$getInstance$java.lang.String(unsafe.$StringConst1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 259, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.javax.crypto.Mac$init$java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block49;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block49:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 263, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3, unsafe.$StringConst12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8);
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block48:
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 261, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.AssertionError);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5, unsafe.$StringConst11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7);
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0$1:
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon77_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon77_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon77_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon77_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$getBytes$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon78_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon78_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon78_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon78_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon6:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.javax.crypto.Mac$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon79_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon79_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon79_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon10:
    assert {:sourceloc "Aes256Cryptor.java", 329, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.ArrayUtils$subarray$byte$lp$$rp$_int_int(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, 0, 10);
    assert {:sourceloc "Aes256Cryptor.java", 330, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 331, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon81_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon81_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon81_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon81_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon13;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon13:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r5);
    assert {:sourceloc "Aes256Cryptor.java", 332, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$array$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6);
    assert {:sourceloc "Aes256Cryptor.java", 332, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2 := 1;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon13$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon13$1:
    assert {:sourceloc "Aes256Cryptor.java", 333, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20 := unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464;
    assert {:sourceloc "Aes256Cryptor.java", 333, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$getBytes$java.nio.charset.Charset(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20);
    assert {:sourceloc "Aes256Cryptor.java", 334, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon82_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon82_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon82_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon82_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon16:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r8);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon83_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon83_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon83_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r21 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r21);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon85_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon85_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon85_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon85_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon23:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r5);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r23);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon86_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon86_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon86_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon86_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon26;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon26:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon87_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon87_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon87_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon87_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon29;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon29:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r9);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon88_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon88_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon88_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon88_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon32:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r27);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon89_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon89_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon89_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon89_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon35;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon35:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28);
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i0 := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10];
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11 := 4];
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r29 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i1 := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r29];
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i0
   + inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i1;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon90_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon90_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon90_Else:
    assume {:partition} 250
   < inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i2;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon38:
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r34, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$getBytes$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r34;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.util.zip.CRC32);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.java.util.zip.CRC32$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3);
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3;
    assert {:sourceloc "Aes256Cryptor.java", 293, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.java.util.zip.CRC32$update$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.java.util.zip.CRC32$getValue$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$block62;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$block62:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$l3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon38$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon38$1:
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.Long$toHexString$long(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$l3);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r35 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12;
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r35);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r35, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r11);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon91_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon91_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon91_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon91_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon41:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36, unsafe.$StringConst15);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon92_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon92_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon92_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon92_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37);
    assert {:sourceloc "Aes256Cryptor.java", 340, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r12;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 394, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2);
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7);
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81:
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5;
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon93_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon93_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon93_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48:
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_15 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r38 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_15;
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r38);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r38, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r11);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon95_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon95_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon95_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_16 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_16;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon95_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon96_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon96_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon96_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_17 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_17;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon96_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getOrCreateUuidForEncryptedFilename$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon97_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon97_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon97_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_18 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_18;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon97_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r42, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.util.UUID$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon98_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon98_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon98_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_19 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_19;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon98_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r42);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon99_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon99_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon99_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_20 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_20;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon99_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon63;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon63:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon100_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon100_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon100_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_21 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_21;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon100_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon66;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon66:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44);
    assert {:sourceloc "Aes256Cryptor.java", 342, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r12;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValueAsBytes$java.lang.Object(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3);
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon6:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$writePathSpecificMetadata$java.lang.String_byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5);
    assert {:sourceloc "Aes256Cryptor.java", 404, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$block83;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$block83:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon66$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon66$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon101_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon101_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon101_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon70:
    assert {:sourceloc "Aes256Cryptor.java", 343, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r14;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block70:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon101_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon102_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon102_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon102_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon102_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon93_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon94_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon94_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon94_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon90_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i2
   <= 250;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block69;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block69:
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_22 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r30 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_22;
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r30);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon103_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon103_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon103_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_23 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_23;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon103_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon73;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon73:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon104_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon104_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon104_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_24 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_24;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon104_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon76;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon76:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r33, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r33;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon83_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon84_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon84_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon84_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon79_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon80_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon80_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon80_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.lang.IllegalStateException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon80_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.lang.IllegalStateException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon20$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon20$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon46_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon46_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon45_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r4]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon17:
    assert {:sourceloc "Aes256Cryptor.java", 306, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon45_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon45_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon45_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r4]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon44_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i2
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon28_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return:
    $return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception;
    r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6;
    i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4;
    $fakelocal_4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4;
    $r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9;
    r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5;
    $fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3;
    goto block65$1;

  block65$1:
    goto block65_last;

  anon44_Else:
    assume {:partition} i2 > i4;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} {:comment "elseblock"} true;
    goto anon17;

  anon17:
    assert {:sourceloc "Aes256Cryptor.java", 306, -1, -1, -1} {:clone} true;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} !(i4 < unsafe.$arrSizeHeap[r4] && i4 >= 0);
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon45_Then:
    assume {:partition} i4 < unsafe.$arrSizeHeap[r4] && i4 >= 0;
    $exception := $exception;
    goto anon20;

  anon20:
    r5 := unsafe.$refArrHeap[r4][i4];
    assert {:sourceloc "Aes256Cryptor.java", 303, -1, -1, -1} true;
    $r9 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 303, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0 := r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1 := $r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2 := r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r34, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r33, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$l3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r42, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r35, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r38, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$stringSizeHeap := unsafe.$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263];
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return, unsafe.$type]
   <: unsafe.javax.crypto.Mac;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$in_parameter__0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block47;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block47:
    assert {:sourceloc "Aes256Cryptor.java", 258, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := unsafe.javax.crypto.Mac$getInstance$java.lang.String(unsafe.$StringConst1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 259, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := unsafe.javax.crypto.Mac$init$java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block50:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block51:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block49;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block49:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 263, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r3, unsafe.$StringConst12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r8);
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block48:
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 261, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.AssertionError);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r5, unsafe.$StringConst11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r7);
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0$1:
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon77_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon77_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon77_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon77_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$getBytes$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1);
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon78_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon78_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon78_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon78_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon6:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.javax.crypto.Mac$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon79_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon79_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon79_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon10:
    assert {:sourceloc "Aes256Cryptor.java", 329, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.ArrayUtils$subarray$byte$lp$$rp$_int_int(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, 0, 10);
    assert {:sourceloc "Aes256Cryptor.java", 330, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 331, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon81_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon81_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon81_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon81_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon13;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon13:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r5);
    assert {:sourceloc "Aes256Cryptor.java", 332, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$array$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6);
    assert {:sourceloc "Aes256Cryptor.java", 332, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2 := 1;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon13$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon13$1:
    assert {:sourceloc "Aes256Cryptor.java", 333, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20 := unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464;
    assert {:sourceloc "Aes256Cryptor.java", 333, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$getBytes$java.nio.charset.Charset(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20);
    assert {:sourceloc "Aes256Cryptor.java", 334, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon82_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon82_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon82_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon82_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon16:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r8);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon83_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon83_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon83_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r21 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r21);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon85_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon85_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon85_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon85_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon23:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r5);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r23);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon86_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon86_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon86_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon86_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon26;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon26:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon87_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon87_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon87_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon87_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon29;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon29:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r9);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon88_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon88_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon88_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon88_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon32:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r27);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon89_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon89_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon89_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon89_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon35;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon35:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28);
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i0 := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10];
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11 := 4];
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r29 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i1 := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r29];
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i0
   + inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i1;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon90_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon90_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon90_Else:
    assume {:partition} 250
   < inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i2;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon38:
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r34, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$getBytes$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10);
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r34;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$l0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$this
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$fakelocal_0 := unsafe.$new(unsafe.java.util.zip.CRC32);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception := unsafe.java.util.zip.CRC32$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$r3);
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$r3;
    assert {:sourceloc "Aes256Cryptor.java", 293, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception := unsafe.java.util.zip.CRC32$update$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r1);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$l0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception := unsafe.java.util.zip.CRC32$getValue$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r2);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$l0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$block62;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$block62:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$l3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon38$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon38$1:
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.Long$toHexString$long(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$l3);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r35 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12;
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r35);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r35, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r11);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon91_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon91_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon91_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon91_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon41:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36, unsafe.$StringConst15);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon92_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon92_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon92_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon92_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37);
    assert {:sourceloc "Aes256Cryptor.java", 340, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r12;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 394, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2);
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7);
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block81;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block81:
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon12:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5;
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon93_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon93_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon93_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48:
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_15 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r38 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_15;
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r38);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r38, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r11);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon95_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon95_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon95_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_16 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_16;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon95_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon96_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon96_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon96_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_17 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_17;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon96_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getOrCreateUuidForEncryptedFilename$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon97_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon97_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon97_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_18 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_18;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon97_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r42, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.util.UUID$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon98_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon98_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon98_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_19 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_19;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon98_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r42);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon99_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon99_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon99_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_20 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_20;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon99_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon63;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon63:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon100_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon100_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon100_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_21 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_21;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon100_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon66;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon66:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44);
    assert {:sourceloc "Aes256Cryptor.java", 342, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r12;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon7_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon7_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon7_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon7_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValueAsBytes$java.lang.Object(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r3);
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon8_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon8_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon8_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon8_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon6:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$writePathSpecificMetadata$java.lang.String_byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r5);
    assert {:sourceloc "Aes256Cryptor.java", 404, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$block83;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$block83:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon66$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon66$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon101_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon101_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon101_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon70:
    assert {:sourceloc "Aes256Cryptor.java", 343, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r14;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block70:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon101_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon102_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon102_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon102_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon102_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon93_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon94_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon94_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon94_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon90_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i2
   <= 250;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block69;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block69:
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_22 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r30 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_22;
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r30);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon103_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon103_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon103_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_23 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_23;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon103_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon73;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon73:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon104_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon104_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon104_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_24 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_24;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon104_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon76;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon76:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r33, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r33;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon83_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon84_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon84_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon84_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon79_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon80_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon80_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon80_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.lang.IllegalStateException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon80_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.lang.IllegalStateException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return:
    r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto anon20$1;

  anon20$1:
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon24;

  anon24:
    assert {:sourceloc "Aes256Cryptor.java", 304, -1, -1, -1} true;
    call $fakelocal_4, $exception := unsafe.java.util.List$add$java.lang.Object(r3, r6);
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon28;

  anon28:
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    i4 := i4 + 1;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    goto anon28_dummy;

  anon48_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon28;

  anon49_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block64;

  block64:
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r10 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 307, -1, -1, -1} true;
    r17 := $r10;
    assert {:sourceloc "Aes256Cryptor.java", 308, -1, -1, -1} true;
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    $r11 := $fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 308, -1, -1, -1} true;
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r12 := $fakelocal_6;
    assert {:sourceloc "Aes256Cryptor.java", 308, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$($r12);
    assert {:sourceloc "Aes256Cryptor.java", 308, -1, -1, -1} true;
    call $r13, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r12, unsafe.$StringConst13);
    assert {:sourceloc "Aes256Cryptor.java", 308, -1, -1, -1} true;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} $r13 == unsafe.$null;
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_7;
    return;

  anon52_Then:
    assume {:partition} $r13 != unsafe.$null;
    $exception := $exception;
    goto anon34;

  anon34:
    call $r14, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r13, r1);
    assert {:sourceloc "Aes256Cryptor.java", 308, -1, -1, -1} true;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} $r14 == unsafe.$null;
    call $fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_8;
    return;

  anon53_Then:
    assume {:partition} $r14 != unsafe.$null;
    $exception := $exception;
    goto anon37;

  anon37:
    call $r15, $exception := unsafe.java.lang.StringBuilder$toString$($r14);
    assert {:sourceloc "Aes256Cryptor.java", 308, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable($r11, $r15, r17);
    assert {:sourceloc "Aes256Cryptor.java", 308, -1, -1, -1} true;
    $exception := $r11;
    goto block68;

  block68:
    return;

  anon46_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon24;

  anon47_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    goto block64;

  anon44_Then:
    assume {:partition} i4 >= i2;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} {:comment "thenblock"} true;
    goto block66;

  block66:
    assert {:sourceloc "Aes256Cryptor.java", 306, -1, -1, -1} {:clone} true;
    call $r8, $exception := unsafe.org.apache.commons.lang3.StringUtils$join$java.lang.Iterable_char(r3, c0);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block67;

  block67:
    assert {:sourceloc "Aes256Cryptor.java", 306, -1, -1, -1} {:clone} true;
    $return := $r8;
    goto block68;

  anon50_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto block67;

  anon51_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block64;

  anon41_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon11;

  anon42_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    $r7 := unsafe.$null;
    goto block64;

  anon38_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon4;

  anon39_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block64;

  anon28_dummy:
    assume false;
    return;

  block65_last:
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    goto anon44_Then, anon44_Else;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: ref)
   returns ($return: ref, $exception: ref)
{
  var r9: ref;
  var $r21: ref;
  var $r16: ref;
  var r6: ref;
  var $r37: ref;
  var $fakelocal_10: ref;
  var $fakelocal_14: ref;
  var r8: ref;
  var $r25: ref;
  var $r43: ref;
  var $r41: ref;
  var $r23: ref;
  var $fakelocal_1: ref;
  var r3: ref;
  var $fakelocal_11: ref;
  var $fakelocal_8: ref;
  var $fakelocal_22: ref;
  var $fakelocal_16: ref;
  var $fakelocal_21: ref;
  var $i2: int;
  var $fakelocal_6: ref;
  var $r34: ref;
  var $r17: ref;
  var $r33: ref;
  var $l3: int;
  var $fakelocal_2: ref;
  var $r32: ref;
  var $fakelocal_3: ref;
  var $fakelocal_12: ref;
  var $r29: ref;
  var $r26: ref;
  var $fakelocal_13: ref;
  var $fakelocal_20: ref;
  var r11: ref;
  var $fakelocal_9: ref;
  var $r19: ref;
  var $i0: int;
  var $r40: ref;
  var r13: ref;
  var $i1: int;
  var r4: ref;
  var $fakelocal_17: ref;
  var $r27: ref;
  var $r20: ref;
  var r0: ref;
  var r10: ref;
  var r7: ref;
  var r1: ref;
  var $r24: ref;
  var $fakelocal_23: ref;
  var $fakelocal_5: ref;
  var $r42: ref;
  var $fakelocal_24: ref;
  var $r44: ref;
  var $r28: ref;
  var $r36: ref;
  var r14: ref;
  var $fakelocal_0: ref;
  var $r39: ref;
  var $r30: ref;
  var $r35: ref;
  var $r38: ref;
  var $fakelocal_18: ref;
  var $r31: ref;
  var r5: ref;
  var $fakelocal_4: ref;
  var $r22: ref;
  var $fakelocal_15: ref;
  var r2: ref;
  var r12: ref;
  var $fakelocal_19: ref;
  var $r15: ref;
  var $fakelocal_7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.javax.crypto.SecretKey;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r3 := $in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    $r15 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263];
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0 := $r15;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Mac;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block47;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block47:
    assert {:sourceloc "Aes256Cryptor.java", 258, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.javax.crypto.Mac$getInstance$java.lang.String(unsafe.$StringConst1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 259, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.javax.crypto.Mac$init$java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block49;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block49:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 263, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3, unsafe.$StringConst12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8);
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block48:
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 261, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.AssertionError);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5, unsafe.$StringConst11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7);
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return:
    $r16 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon77_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $r17, $exception := unsafe.java.lang.String$getBytes$(r1);
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} $r16 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_1;
    return;

  anon78_Then:
    assume {:partition} $r16 != unsafe.$null;
    $exception := $exception;
    goto anon6;

  anon6:
    call r4, $exception := unsafe.javax.crypto.Mac$doFinal$byte$lp$$rp$($r16, $r17);
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon10;

  anon10:
    assert {:sourceloc "Aes256Cryptor.java", 329, -1, -1, -1} true;
    call r5, $exception := unsafe.org.apache.commons.lang3.ArrayUtils$subarray$byte$lp$$rp$_int_int(r4, 0, 10);
    assert {:sourceloc "Aes256Cryptor.java", 330, -1, -1, -1} true;
    call r6, $exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 331, -1, -1, -1} true;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} r6 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon81_Then:
    assume {:partition} r6 != unsafe.$null;
    $exception := $exception;
    goto anon13;

  anon13:
    call $fakelocal_3, $exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(r6, r5);
    assert {:sourceloc "Aes256Cryptor.java", 332, -1, -1, -1} true;
    call $r19, $exception := unsafe.java.nio.ByteBuffer$array$(r6);
    assert {:sourceloc "Aes256Cryptor.java", 332, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0 := r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1 := $r19;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2 := 1;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return:
    r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto anon13$1;

  anon13$1:
    assert {:sourceloc "Aes256Cryptor.java", 333, -1, -1, -1} true;
    $r20 := unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464;
    assert {:sourceloc "Aes256Cryptor.java", 333, -1, -1, -1} true;
    call r8, $exception := unsafe.java.lang.String$getBytes$java.nio.charset.Charset(r1, $r20);
    assert {:sourceloc "Aes256Cryptor.java", 334, -1, -1, -1} true;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} r7 == unsafe.$null;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_4;
    return;

  anon82_Then:
    assume {:partition} r7 != unsafe.$null;
    $exception := $exception;
    goto anon16;

  anon16:
    call r9, $exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(r7, r8);
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon20;

  anon20:
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r21 := $fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$($r21);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    $r22 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} $r22 == unsafe.$null;
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_6;
    return;

  anon85_Then:
    assume {:partition} $r22 != unsafe.$null;
    $exception := $exception;
    goto anon23;

  anon23:
    call $r23, $exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$($r22, r5);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call $r24, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r21, $r23);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} $r24 == unsafe.$null;
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_7;
    return;

  anon86_Then:
    assume {:partition} $r24 != unsafe.$null;
    $exception := $exception;
    goto anon26;

  anon26:
    call $r25, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r24, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    $r26 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} $r26 == unsafe.$null;
    call $fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_8;
    return;

  anon87_Then:
    assume {:partition} $r26 != unsafe.$null;
    $exception := $exception;
    goto anon29;

  anon29:
    call $r27, $exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$($r26, r9);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} $r25 == unsafe.$null;
    call $fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_9;
    return;

  anon88_Then:
    assume {:partition} $r25 != unsafe.$null;
    $exception := $exception;
    goto anon32;

  anon32:
    call $r28, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r25, $r27);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} $r28 == unsafe.$null;
    call $fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_10;
    return;

  anon89_Then:
    assume {:partition} $r28 != unsafe.$null;
    $exception := $exception;
    goto anon35;

  anon35:
    call r10, $exception := unsafe.java.lang.StringBuilder$toString$($r28);
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    $i0 := unsafe.$stringSizeHeap[r10];
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    call $fakelocal_11 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[$fakelocal_11 := 4];
    $r29 := $fakelocal_11;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    $i1 := unsafe.$stringSizeHeap[$r29];
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    $i2 := $i0 + $i1;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} 250 < $i2;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} {:comment "elseblock"} true;
    goto anon38;

  anon38:
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    call $r34, $exception := unsafe.java.lang.String$getBytes$(r10);
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$in_parameter__0 := $r34;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.util.zip.CRC32);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.java.util.zip.CRC32$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3);
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3;
    assert {:sourceloc "Aes256Cryptor.java", 293, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.java.util.zip.CRC32$update$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.java.util.zip.CRC32$getValue$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$block62;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$block62:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Return:
    $l3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception;
    goto anon38$1;

  anon38$1:
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    call r11, $exception := unsafe.java.lang.Long$toHexString$long($l3);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call $fakelocal_12 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r35 := $fakelocal_12;
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$($r35);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call $r36, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r35, r11);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} $r36 == unsafe.$null;
    call $fakelocal_13 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_13;
    return;

  anon91_Then:
    assume {:partition} $r36 != unsafe.$null;
    $exception := $exception;
    goto anon41;

  anon41:
    call $r37, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r36, unsafe.$StringConst15);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} $r37 == unsafe.$null;
    call $fakelocal_14 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_14;
    return;

  anon92_Then:
    assume {:partition} $r37 != unsafe.$null;
    $exception := $exception;
    goto anon44;

  anon44:
    call r12, $exception := unsafe.java.lang.StringBuilder$toString$($r37);
    assert {:sourceloc "Aes256Cryptor.java", 340, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0 := r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1 := r12;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 394, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2);
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7);
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81:
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5;
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return:
    r13 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto anon44$1;

  anon44$1:
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon48;

  anon48:
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call $fakelocal_15 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r38 := $fakelocal_15;
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$($r38);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call $r39, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r38, r11);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} $r39 == unsafe.$null;
    call $fakelocal_16 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_16;
    return;

  anon95_Then:
    assume {:partition} $r39 != unsafe.$null;
    $exception := $exception;
    goto anon51;

  anon51:
    call $r40, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r39, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} r13 == unsafe.$null;
    call $fakelocal_17 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_17;
    return;

  anon96_Then:
    assume {:partition} r13 != unsafe.$null;
    $exception := $exception;
    goto anon54;

  anon54:
    call $r41, $exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getOrCreateUuidForEncryptedFilename$java.lang.String(r13, r10);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} $r41 == unsafe.$null;
    call $fakelocal_18 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_18;
    return;

  anon97_Then:
    assume {:partition} $r41 != unsafe.$null;
    $exception := $exception;
    goto anon57;

  anon57:
    call $r42, $exception := unsafe.java.util.UUID$toString$($r41);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} $r40 == unsafe.$null;
    call $fakelocal_19 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_19;
    return;

  anon98_Then:
    assume {:partition} $r40 != unsafe.$null;
    $exception := $exception;
    goto anon60;

  anon60:
    call $r43, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r40, $r42);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} $r43 == unsafe.$null;
    call $fakelocal_20 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_20;
    return;

  anon99_Then:
    assume {:partition} $r43 != unsafe.$null;
    $exception := $exception;
    goto anon63;

  anon63:
    call $r44, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r43, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} $r44 == unsafe.$null;
    call $fakelocal_21 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_21;
    return;

  anon100_Then:
    assume {:partition} $r44 != unsafe.$null;
    $exception := $exception;
    goto anon66;

  anon66:
    call r14, $exception := unsafe.java.lang.StringBuilder$toString$($r44);
    assert {:sourceloc "Aes256Cryptor.java", 342, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0 := r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1 := r12;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2 := r13;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValueAsBytes$java.lang.Object(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3);
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon6:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$writePathSpecificMetadata$java.lang.String_byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5);
    assert {:sourceloc "Aes256Cryptor.java", 404, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$block83;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$block83:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return:
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    goto anon66$1;

  anon66$1:
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon70;

  anon70:
    assert {:sourceloc "Aes256Cryptor.java", 343, -1, -1, -1} true;
    $return := r14;
    goto block70;

  block70:
    return;

  anon101_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon70;

  anon102_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon93_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon48;

  anon94_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon90_Then:
    assume {:partition} $i2 <= 250;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} {:comment "thenblock"} true;
    goto block69;

  block69:
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call $fakelocal_22 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r30 := $fakelocal_22;
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$($r30);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call $r31, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r30, r10);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} $r31 == unsafe.$null;
    call $fakelocal_23 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_23;
    return;

  anon103_Then:
    assume {:partition} $r31 != unsafe.$null;
    $exception := $exception;
    goto anon73;

  anon73:
    call $r32, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r31, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} $r32 == unsafe.$null;
    call $fakelocal_24 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_24;
    return;

  anon104_Then:
    assume {:partition} $r32 != unsafe.$null;
    $exception := $exception;
    goto anon76;

  anon76:
    call $r33, $exception := unsafe.java.lang.StringBuilder$toString$($r32);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    $return := $r33;
    goto block70;

  anon83_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto anon20;

  anon84_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    $return := unsafe.$null;
    return;

  anon79_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.lang.IllegalStateException);
    assert {:clone} true;
    goto anon10;

  anon80_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.IllegalStateException;
    $return := unsafe.$null;
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: int, 
    $in_parameter__2: int, 
    $in_parameter__3: ref)
   returns ($return: ref, $exception: ref)
{
  var r1: ref;
  var $r7: ref;
  var i4: int;
  var r2: ref;
  var $r12: ref;
  var $r8: ref;
  var $fakelocal_0: ref;
  var $r9: ref;
  var $r15: ref;
  var $fakelocal_7: ref;
  var r6: ref;
  var r17: ref;
  var $fakelocal_2: ref;
  var r4: ref;
  var $r13: ref;
  var r18: ref;
  var c0: int;
  var $fakelocal_3: ref;
  var $fakelocal_9: ref;
  var $r16: ref;
  var r0: ref;
  var i2: int;
  var $fakelocal_4: ref;
  var $fakelocal_1: ref;
  var $fakelocal_8: ref;
  var $r10: ref;
  var $r11: ref;
  var $i3: int;
  var r5: ref;
  var $fakelocal_5: int;
  var $fakelocal_6: ref;
  var $r14: ref;
  var c1: int;
  var r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r31: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r27: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r28: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r31: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r27: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r28: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__3, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    c0 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    c1 := $in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__3;
    goto block71;

  block71:
    assert {:sourceloc "Aes256Cryptor.java", 352, -1, -1, -1} true;
    call r17, $exception := unsafe.org.apache.commons.lang3.StringUtils$split$java.lang.String_char(r1, c0);
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon4;

  anon4:
    assert {:sourceloc "Aes256Cryptor.java", 353, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.util.ArrayList);
    $r7 := $fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 353, -1, -1, -1} true;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} r17 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_1;
    return;

  anon44_Then:
    assume {:partition} r17 != unsafe.$null;
    $exception := $exception;
    goto anon7;

  anon7:
    $i3 := unsafe.$arrSizeHeap[r17];
    assert {:sourceloc "Aes256Cryptor.java", 353, -1, -1, -1} true;
    call $exception := unsafe.java.util.ArrayList$$la$init$ra$$int($r7, $i3);
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon11;

  anon11:
    assert {:sourceloc "Aes256Cryptor.java", 353, -1, -1, -1} true;
    r3 := $r7;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    r4 := r17;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} r4 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon47_Then:
    assume {:partition} r4 != unsafe.$null;
    $exception := $exception;
    goto anon14;

  anon14:
    i2 := unsafe.$arrSizeHeap[r4];
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    i4 := 0;
    goto block73;

  block73:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return := $return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception := $exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4 := i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r2 := r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9 := $r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6 := r6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r4 := r4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3 := $fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r0 := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i2 := i2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4 := $fakelocal_4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10 := $r10;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5 := r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5 := $fakelocal_5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r3 := r3;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex := unsafe.$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$block73;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$block73:
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon48_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon48_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon48_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i2;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon32:
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon32_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon54_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon55_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon54_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon55_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon55_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon55_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon28:
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception := unsafe.java.util.List$add$java.lang.Object(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon54_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon54_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon52_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon53_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon52_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon53_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon53_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon53_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10 := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon24:
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.String);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4;
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception := unsafe.java.lang.String$$la$init$ra$$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon52_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon52_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon50_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon24;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon51_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon24;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon50_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon51_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon51_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon51_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon20:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5 := unsafe.$refArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r4][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 355, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 355, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon45_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon45_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon45_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon45_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$endsWith$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon46_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon46_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon46_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z0
   != 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 370, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$removeEnd$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 371, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r21, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 372, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r21, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r22);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon47_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon47_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon47_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon47_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18, unsafe.$StringConst15);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon12:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19);
    assert {:sourceloc "Aes256Cryptor.java", 374, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r24;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 394, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2);
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7);
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81:
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5;
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon12$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon12$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon49_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon49_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon49_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon16:
    assert {:sourceloc "Aes256Cryptor.java", 375, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.util.UUID$fromString$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r23);
    assert {:sourceloc "Aes256Cryptor.java", 375, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon19;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon19:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getEncryptedFilenameForUUID$java.util.UUID(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20);
    assert {:sourceloc "Aes256Cryptor.java", 376, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block78;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block78:
    assert {:sourceloc "Aes256Cryptor.java", 382, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 383, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 384, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon55_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon55_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon55_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon55_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon31;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon31:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r27);
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon56_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon56_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon56_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon56_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon34;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon34:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r11);
    assert {:sourceloc "Aes256Cryptor.java", 387, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$array$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29);
    assert {:sourceloc "Aes256Cryptor.java", 387, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r13;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2 := 2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon34$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon34$1:
    assert {:sourceloc "Aes256Cryptor.java", 388, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 388, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon37:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r28);
    assert {:sourceloc "Aes256Cryptor.java", 389, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon58_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon58_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon58_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon58_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon40:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r31);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon59_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon59_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon59_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44:
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14 := unsafe.$new(unsafe.java.lang.String);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14;
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16 := unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464;
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$_java.nio.charset.Charset(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16);
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block80;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block80:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon59_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon49_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon50_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon50_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon50_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon50_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon46_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z0
   == 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block77;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block77:
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$endsWith$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon52_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon52_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon52_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z1
   != 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon22;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon22:
    assert {:sourceloc "Aes256Cryptor.java", 377, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$removeEndIgnoreCase$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 377, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block78;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon52_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z1
   == 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block79;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block79:
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6;
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r6);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r6, unsafe.$StringConst19);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon53_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon53_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon53_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon53_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon25;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon25:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon28:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r9);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block80;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon20$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon20$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon50_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon50_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon49_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r4]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon17:
    assert {:sourceloc "Aes256Cryptor.java", 358, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon49_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon49_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon49_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r4]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon48_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i2
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon32_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return:
    $return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception;
    i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4;
    $r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9;
    r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6;
    $fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3;
    $fakelocal_4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4;
    $r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10;
    r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5;
    $fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5;
    goto block73$1;

  block73$1:
    goto block73_last;

  anon48_Else:
    assume {:partition} i2 > i4;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} {:comment "elseblock"} true;
    goto anon17;

  anon17:
    assert {:sourceloc "Aes256Cryptor.java", 358, -1, -1, -1} {:clone} true;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} !(i4 < unsafe.$arrSizeHeap[r4] && i4 >= 0);
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon49_Then:
    assume {:partition} i4 < unsafe.$arrSizeHeap[r4] && i4 >= 0;
    $exception := $exception;
    goto anon20;

  anon20:
    r5 := unsafe.$refArrHeap[r4][i4];
    assert {:sourceloc "Aes256Cryptor.java", 355, -1, -1, -1} true;
    $r9 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 355, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0 := r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1 := $r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2 := r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon45_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon45_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon45_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon45_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$endsWith$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon46_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon46_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon46_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z0
   != 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 370, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$removeEnd$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 371, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r21, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 372, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r21, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r22);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon47_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon47_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon47_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon47_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18, unsafe.$StringConst15);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon12:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19);
    assert {:sourceloc "Aes256Cryptor.java", 374, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r24;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 394, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2);
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7);
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block81;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block81:
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon12:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5;
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon12$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon12$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon49_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon49_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon49_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon16:
    assert {:sourceloc "Aes256Cryptor.java", 375, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.util.UUID$fromString$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r23);
    assert {:sourceloc "Aes256Cryptor.java", 375, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon19;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon19:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getEncryptedFilenameForUUID$java.util.UUID(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20);
    assert {:sourceloc "Aes256Cryptor.java", 376, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block78;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block78:
    assert {:sourceloc "Aes256Cryptor.java", 382, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 383, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 384, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon55_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon55_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon55_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon55_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon31;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon31:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r27);
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon56_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon56_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon56_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon56_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon34;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon34:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r11);
    assert {:sourceloc "Aes256Cryptor.java", 387, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$array$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29);
    assert {:sourceloc "Aes256Cryptor.java", 387, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r13;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2 := 2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon34$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon34$1:
    assert {:sourceloc "Aes256Cryptor.java", 388, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 388, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon37:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r28);
    assert {:sourceloc "Aes256Cryptor.java", 389, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon58_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon58_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon58_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon58_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon40:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r31);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon59_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon59_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon59_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44:
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14 := unsafe.$new(unsafe.java.lang.String);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14;
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16 := unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464;
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$_java.nio.charset.Charset(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16);
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block80;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block80:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon59_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon49_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon50_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon50_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon50_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon50_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon46_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z0
   == 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block77;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block77:
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$endsWith$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon52_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon52_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon52_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z1
   != 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon22;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon22:
    assert {:sourceloc "Aes256Cryptor.java", 377, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$removeEndIgnoreCase$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 377, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block78;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon52_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z1
   == 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block79;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block79:
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6;
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r6);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r6, unsafe.$StringConst19);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon53_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon53_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon53_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon53_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon25;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon25:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon28:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r9);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block80;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return:
    r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto anon20$1;

  anon20$1:
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon24;

  anon24:
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.String);
    $r10 := $fakelocal_4;
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call $exception := unsafe.java.lang.String$$la$init$ra$$java.lang.String($r10, r6);
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon28;

  anon28:
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call $fakelocal_5, $exception := unsafe.java.util.List$add$java.lang.Object(r3, $r10);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon32;

  anon32:
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    i4 := i4 + 1;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    goto anon32_dummy;

  anon54_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon32;

  anon55_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block72;

  block72:
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r11 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 359, -1, -1, -1} true;
    r18 := $r11;
    assert {:sourceloc "Aes256Cryptor.java", 360, -1, -1, -1} true;
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    $r12 := $fakelocal_6;
    assert {:sourceloc "Aes256Cryptor.java", 360, -1, -1, -1} true;
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r13 := $fakelocal_7;
    assert {:sourceloc "Aes256Cryptor.java", 360, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$($r13);
    assert {:sourceloc "Aes256Cryptor.java", 360, -1, -1, -1} true;
    call $r14, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r13, unsafe.$StringConst18);
    assert {:sourceloc "Aes256Cryptor.java", 360, -1, -1, -1} true;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} $r14 == unsafe.$null;
    call $fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_8;
    return;

  anon58_Then:
    assume {:partition} $r14 != unsafe.$null;
    $exception := $exception;
    goto anon38;

  anon38:
    call $r15, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r14, r1);
    assert {:sourceloc "Aes256Cryptor.java", 360, -1, -1, -1} true;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} $r15 == unsafe.$null;
    call $fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_9;
    return;

  anon59_Then:
    assume {:partition} $r15 != unsafe.$null;
    $exception := $exception;
    goto anon41;

  anon41:
    call $r16, $exception := unsafe.java.lang.StringBuilder$toString$($r15);
    assert {:sourceloc "Aes256Cryptor.java", 360, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable($r12, $r16, r18);
    assert {:sourceloc "Aes256Cryptor.java", 360, -1, -1, -1} true;
    $exception := $r12;
    goto block76;

  block76:
    return;

  anon52_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon28;

  anon53_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    $r10 := unsafe.$null;
    goto block72;

  anon50_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon24;

  anon51_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    goto block72;

  anon48_Then:
    assume {:partition} i4 >= i2;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} {:comment "thenblock"} true;
    goto block74;

  block74:
    assert {:sourceloc "Aes256Cryptor.java", 358, -1, -1, -1} {:clone} true;
    call $r8, $exception := unsafe.org.apache.commons.lang3.StringUtils$join$java.lang.Iterable_char(r3, c1);
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block75;

  block75:
    assert {:sourceloc "Aes256Cryptor.java", 358, -1, -1, -1} {:clone} true;
    $return := $r8;
    goto block76;

  anon56_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto block75;

  anon57_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block72;

  anon45_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon11;

  anon46_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    $r7 := unsafe.$null;
    goto block72;

  anon42_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon4;

  anon43_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block72;

  anon32_dummy:
    assume false;
    return;

  block73_last:
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    goto anon48_Then, anon48_Else;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: ref)
   returns ($return: ref, $exception: ref)
{
  var $r11: ref;
  var $r16: ref;
  var r30: ref;
  var $fakelocal_10: ref;
  var $r13: ref;
  var $r5: ref;
  var r26: ref;
  var $fakelocal_6: ref;
  var $r15: ref;
  var $z1: int;
  var $r9: ref;
  var r1: ref;
  var r23: ref;
  var $fakelocal_3: ref;
  var $fakelocal_11: ref;
  var $z0: int;
  var r31: ref;
  var $fakelocal_7: ref;
  var r3: ref;
  var $r19: ref;
  var r2: ref;
  var r0: ref;
  var r27: ref;
  var $fakelocal_13: ref;
  var r22: ref;
  var r28: ref;
  var $fakelocal_12: ref;
  var $r17: ref;
  var $r6: ref;
  var r24: ref;
  var $fakelocal_4: ref;
  var r21: ref;
  var $fakelocal_9: ref;
  var r25: ref;
  var r29: ref;
  var $fakelocal_0: ref;
  var $fakelocal_2: ref;
  var $r7: ref;
  var r4: ref;
  var $fakelocal_14: ref;
  var $r8: ref;
  var $r10: ref;
  var $r18: ref;
  var $fakelocal_1: ref;
  var $fakelocal_8: ref;
  var $r20: ref;
  var $r14: ref;
  var $fakelocal_5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.javax.crypto.SecretKey;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r3 := $in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon45_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $z0, $exception := unsafe.java.lang.String$endsWith$java.lang.String(r1, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} $z0 != 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  anon6:
    assert {:sourceloc "Aes256Cryptor.java", 370, -1, -1, -1} true;
    call r21, $exception := unsafe.org.apache.commons.lang3.StringUtils$removeEnd$java.lang.String_java.lang.String(r1, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 371, -1, -1, -1} true;
    call r22, $exception := unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String(r21, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 372, -1, -1, -1} true;
    call r23, $exception := unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String(r21, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r17 := $fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$($r17);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call $r18, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r17, r22);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} $r18 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon47_Then:
    assume {:partition} $r18 != unsafe.$null;
    $exception := $exception;
    goto anon9;

  anon9:
    call $r19, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r18, unsafe.$StringConst15);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} $r19 == unsafe.$null;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon48_Then:
    assume {:partition} $r19 != unsafe.$null;
    $exception := $exception;
    goto anon12;

  anon12:
    call r24, $exception := unsafe.java.lang.StringBuilder$toString$($r19);
    assert {:sourceloc "Aes256Cryptor.java", 374, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0 := r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1 := r24;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 394, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2);
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7);
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81:
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5;
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return:
    r25 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto anon12$1;

  anon12$1:
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon16;

  anon16:
    assert {:sourceloc "Aes256Cryptor.java", 375, -1, -1, -1} true;
    call $r20, $exception := unsafe.java.util.UUID$fromString$java.lang.String(r23);
    assert {:sourceloc "Aes256Cryptor.java", 375, -1, -1, -1} true;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} r25 == unsafe.$null;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_4;
    return;

  anon51_Then:
    assume {:partition} r25 != unsafe.$null;
    $exception := $exception;
    goto anon19;

  anon19:
    call r26, $exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getEncryptedFilenameForUUID$java.util.UUID(r25, $r20);
    assert {:sourceloc "Aes256Cryptor.java", 376, -1, -1, -1} true;
    goto block78;

  block78:
    assert {:sourceloc "Aes256Cryptor.java", 382, -1, -1, -1} true;
    call r27, $exception := unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String(r26, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 383, -1, -1, -1} true;
    call r28, $exception := unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String(r26, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 384, -1, -1, -1} true;
    call r29, $exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    $r10 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} $r10 == unsafe.$null;
    call $fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_9;
    return;

  anon55_Then:
    assume {:partition} $r10 != unsafe.$null;
    $exception := $exception;
    goto anon31;

  anon31:
    call $r11, $exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String($r10, r27);
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} r29 == unsafe.$null;
    call $fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_10;
    return;

  anon56_Then:
    assume {:partition} r29 != unsafe.$null;
    $exception := $exception;
    goto anon34;

  anon34:
    call $fakelocal_11, $exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(r29, $r11);
    assert {:sourceloc "Aes256Cryptor.java", 387, -1, -1, -1} true;
    call $r13, $exception := unsafe.java.nio.ByteBuffer$array$(r29);
    assert {:sourceloc "Aes256Cryptor.java", 387, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0 := r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1 := $r13;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2 := 2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return:
    r30 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto anon34$1;

  anon34$1:
    assert {:sourceloc "Aes256Cryptor.java", 388, -1, -1, -1} true;
    $r14 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 388, -1, -1, -1} true;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} $r14 == unsafe.$null;
    call $fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_12;
    return;

  anon57_Then:
    assume {:partition} $r14 != unsafe.$null;
    $exception := $exception;
    goto anon37;

  anon37:
    call r31, $exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String($r14, r28);
    assert {:sourceloc "Aes256Cryptor.java", 389, -1, -1, -1} true;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} r30 == unsafe.$null;
    call $fakelocal_13 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_13;
    return;

  anon58_Then:
    assume {:partition} r30 != unsafe.$null;
    $exception := $exception;
    goto anon40;

  anon40:
    call r4, $exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(r30, r31);
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon44;

  anon44:
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    call $fakelocal_14 := unsafe.$new(unsafe.java.lang.String);
    $r15 := $fakelocal_14;
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    $r16 := unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464;
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    call $exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$_java.nio.charset.Charset($r15, r4, $r16);
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    $return := $r15;
    goto block80;

  block80:
    return;

  anon59_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto anon44;

  anon60_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    $return := unsafe.$null;
    return;

  anon49_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon16;

  anon50_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon46_Then:
    assume {:partition} $z0 == 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "thenblock"} true;
    goto block77;

  block77:
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    call $z1, $exception := unsafe.java.lang.String$endsWith$java.lang.String(r1, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} $z1 != 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "elseblock"} true;
    goto anon22;

  anon22:
    assert {:sourceloc "Aes256Cryptor.java", 377, -1, -1, -1} true;
    call r26, $exception := unsafe.org.apache.commons.lang3.StringUtils$removeEndIgnoreCase$java.lang.String_java.lang.String(r1, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 377, -1, -1, -1} true;
    goto block78;

  anon52_Then:
    assume {:partition} $z1 == 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "thenblock"} true;
    goto block79;

  block79:
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    $r5 := $fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r6 := $fakelocal_6;
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$($r6);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call $r7, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r6, unsafe.$StringConst19);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} $r7 == unsafe.$null;
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_7;
    return;

  anon53_Then:
    assume {:partition} $r7 != unsafe.$null;
    $exception := $exception;
    goto anon25;

  anon25:
    call $r8, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r7, r1);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} $r8 == unsafe.$null;
    call $fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_8;
    return;

  anon54_Then:
    assume {:partition} $r8 != unsafe.$null;
    $exception := $exception;
    goto anon28;

  anon28:
    call $r9, $exception := unsafe.java.lang.StringBuilder$toString$($r8);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String($r5, $r9);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    $exception := $r5;
    goto block80;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref)
{
  var $r7: ref;
  var $r4: ref;
  var r2: ref;
  var $fakelocal_1: ref;
  var $fakelocal_2: ref;
  var r0: ref;
  var r1: ref;
  var $fakelocal_0: ref;
  var $r5: ref;
  var $r6: ref;
  var r3: ref;
  var $fakelocal_3: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[$return, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 394, -1, -1, -1} true;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon13_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call r3, $exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String(r1, r2);
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} true;
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} r3 == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  anon6:
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    $r7 := $fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$($r7);
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    $return := $r7;
    goto block82;

  block82:
    return;

  anon14_Then:
    assume {:partition} r3 != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "thenblock"} true;
    goto block81;

  block81:
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    $r4 := unsafe.$heap[r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} $r4 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon15_Then:
    assume {:partition} $r4 != unsafe.$null;
    $exception := $exception;
    goto anon9;

  anon9:
    call $r5, $exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class($r4, r3, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} !(unsafe.$heap[$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon16_Then:
    assume {:partition} unsafe.$heap[$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    $exception := $exception;
    goto anon12;

  anon12:
    $r6 := $r5;
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    $return := $r6;
    goto block82;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: ref)
   returns ($exception: ref)
{
  var $r4: ref;
  var $r5: ref;
  var r3: ref;
  var $fakelocal_0: ref;
  var r0: ref;
  var r1: ref;
  var r2: ref;
  var $fakelocal_1: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r3 := $in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    $r4 := unsafe.$heap[r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto anon7_Then, anon7_Else;

  anon7_Else:
    assume {:partition} $r4 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_0;
    return;

  anon7_Then:
    assume {:partition} $r4 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $r5, $exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValueAsBytes$java.lang.Object($r4, r3);
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_1;
    return;

  anon8_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon6;

  anon6:
    call $exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$writePathSpecificMetadata$java.lang.String_byte$lp$$rp$(r1, r2, $r5);
    assert {:sourceloc "Aes256Cryptor.java", 404, -1, -1, -1} true;
    goto block83;

  block83:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$authenticateContent$java.nio.channels.SeekableByteChannel($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref)
{
  var r0: ref;
  var r1: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.java.nio.channels.SeekableByteChannel;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 408, -1, -1, -1} true;
    $return := 0;
    goto block84;

  block84:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$authenticateContent_unsafe$java.nio.channels.SeekableByteChannel($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref)
{
  var $fakelocal_9: ref;
  var $r7: ref;
  var r5: ref;
  var r6: ref;
  var $l3: int;
  var r18: ref;
  var $r15: ref;
  var $z0: int;
  var $i2: int;
  var r16: ref;
  var $fakelocal_4: ref;
  var $fakelocal_10: ref;
  var r3: ref;
  var $r14: ref;
  var $fakelocal_2: ref;
  var $fakelocal_8: ref;
  var $fakelocal_11: int;
  var $fakelocal_3: ref;
  var r0: ref;
  var r1: ref;
  var r17: ref;
  var r21: ref;
  var r22: ref;
  var r2: ref;
  var $fakelocal_5: ref;
  var r4: ref;
  var $i1: int;
  var $fakelocal_12: ref;
  var i0: int;
  var $fakelocal_0: ref;
  var $fakelocal_7: ref;
  var $fakelocal_1: ref;
  var $fakelocal_6: ref;
  var r20: ref;
  var r19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$i1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$l2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$i1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.java.nio.channels.SeekableByteChannel;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 437, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$in_parameter__0 := r1;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$i1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$l2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.nio.channels.SeekableByteChannel;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return, unsafe.$type]
   <: unsafe.java.lang.Long;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 481, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon43_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon43_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon43_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon43_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.channels.SeekableByteChannel$position$long(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1, 48);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon44_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon44_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon44_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon7:
    assert {:sourceloc "Aes256Cryptor.java", 484, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 485, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.channels.SeekableByteChannel$read$java.nio.ByteBuffer(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon46_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon46_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon46_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon11:
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon48_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon48_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon48_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon48_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon14;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon14:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$i1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.Buffer$capacity$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2);
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon49_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon49_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon49_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$i0
   != inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$i1;
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon17:
    assert {:sourceloc "Aes256Cryptor.java", 489, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block99;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block99:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon49_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$i0
   == inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$i1;
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block96;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block96:
    assert {:sourceloc "Aes256Cryptor.java", 494, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r6 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 494, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1 := 2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block42;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block42:
    assert {:sourceloc "Aes256Cryptor.java", 245, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst9);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 246, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45:
    assert {:sourceloc "Aes256Cryptor.java", 247, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block44:
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 248, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7);
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block43;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block43:
    assert {:sourceloc "Aes256Cryptor.java", 247, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 250, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.AssertionError);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3, unsafe.$StringConst10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8);
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block96$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block96$1:
    assert {:sourceloc "Aes256Cryptor.java", 495, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.ByteBuffer$array$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon50_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon50_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon50_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon21;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon21:
    assert {:sourceloc "Aes256Cryptor.java", 495, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon52_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon52_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon52_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon52_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon24;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon24:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon53_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon53_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon53_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon28:
    assert {:sourceloc "Aes256Cryptor.java", 496, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.ByteBuffer$wrap$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon55_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon55_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon55_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon32:
    assert {:sourceloc "Aes256Cryptor.java", 497, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon57_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon57_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon57_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_4;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon57_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon35;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon35:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$l2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.ByteBuffer$getLong$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon58_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon58_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon58_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon39:
    assert {:sourceloc "Aes256Cryptor.java", 497, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.lang.Long$valueOf$long(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$l2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon60_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon60_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon60_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block98;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block98:
    assert {:sourceloc "Aes256Cryptor.java", 497, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block99;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon60_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon61_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon61_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon61_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block98;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon61_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97:
    assert {:sourceloc "Aes256Cryptor.java", 489, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 498, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r12 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r9;
    assert {:sourceloc "Aes256Cryptor.java", 499, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 499, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r12);
    assert {:sourceloc "Aes256Cryptor.java", 499, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block99;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon58_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon59_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon59_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon59_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon59_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon55_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon56_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon56_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon56_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon56_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon53_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon54_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon54_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon54_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon54_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon50_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon51_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon51_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon51_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon21;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon51_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon46_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon47_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon47_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon47_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon47_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon44_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon45_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon45_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon45_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon45_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return:
    r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    goto anon0$1;

  anon0$1:
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon4;

  anon4:
    assert {:sourceloc "Aes256Cryptor.java", 440, -1, -1, -1} true;
    $r7 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263];
    assert {:sourceloc "Aes256Cryptor.java", 440, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0 := $r7;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Mac;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block47;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block47:
    assert {:sourceloc "Aes256Cryptor.java", 258, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.javax.crypto.Mac$getInstance$java.lang.String(unsafe.$StringConst1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 259, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.javax.crypto.Mac$init$java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block49;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block49:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 263, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3, unsafe.$StringConst12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8);
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block48:
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 261, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.AssertionError);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5, unsafe.$StringConst11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7);
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return:
    r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    goto anon4$1;

  anon4$1:
    assert {:sourceloc "Aes256Cryptor.java", 443, -1, -1, -1} true;
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon46_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon7;

  anon7:
    call $fakelocal_1, $exception := unsafe.java.nio.channels.SeekableByteChannel$position$long(r1, 16);
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon11;

  anon11:
    assert {:sourceloc "Aes256Cryptor.java", 444, -1, -1, -1} true;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} r3 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_2;
    return;

  anon49_Then:
    assume {:partition} r3 != unsafe.$null;
    $exception := $exception;
    goto anon14;

  anon14:
    call $i1, $exception := unsafe.javax.crypto.Mac$getMacLength$(r3);
    assert {:sourceloc "Aes256Cryptor.java", 444, -1, -1, -1} true;
    call r4, $exception := unsafe.java.nio.ByteBuffer$allocate$int($i1);
    assert {:sourceloc "Aes256Cryptor.java", 445, -1, -1, -1} true;
    call i0, $exception := unsafe.java.nio.channels.SeekableByteChannel$read$java.nio.ByteBuffer(r1, r4);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon18;

  anon18:
    assert {:sourceloc "Aes256Cryptor.java", 448, -1, -1, -1} true;
    call $i2, $exception := unsafe.javax.crypto.Mac$getMacLength$(r3);
    assert {:sourceloc "Aes256Cryptor.java", 448, -1, -1, -1} true;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} i0 == $i2;
    assert {:sourceloc "Aes256Cryptor.java", 448, -1, -1, -1} {:comment "elseblock"} true;
    goto anon21;

  anon21:
    assert {:sourceloc "Aes256Cryptor.java", 449, -1, -1, -1} true;
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} r2 == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 449, -1, -1, -1} {:comment "elseblock"} true;
    goto block85;

  block85:
    assert {:sourceloc "Aes256Cryptor.java", 449, -1, -1, -1} true;
    call $fakelocal_3 := unsafe.$new(unsafe.java.io.IOException);
    r16 := $fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 449, -1, -1, -1} true;
    call $exception := unsafe.java.io.IOException$$la$init$ra$$java.lang.String(r16, unsafe.$StringConst20);
    assert {:sourceloc "Aes256Cryptor.java", 449, -1, -1, -1} true;
    $exception := r16;
    goto block87;

  block87:
    return;

  anon53_Then:
    assume {:partition} r2 != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 449, -1, -1, -1} {:comment "thenblock"} true;
    goto block86;

  block86:
    assert {:sourceloc "Aes256Cryptor.java", 453, -1, -1, -1} true;
    call $fakelocal_4, $exception := unsafe.java.nio.channels.SeekableByteChannel$position$long(r1, 64);
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon27;

  anon27:
    assert {:sourceloc "Aes256Cryptor.java", 454, -1, -1, -1} true;
    call $fakelocal_5 := unsafe.$new(unsafe.org.cryptomator.crypto.io.SeekableByteChannelInputStream);
    r17 := $fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 454, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.io.SeekableByteChannelInputStream$$la$init$ra$$java.nio.channels.SeekableByteChannel(r17, r1);
    assert {:sourceloc "Aes256Cryptor.java", 454, -1, -1, -1} true;
    r5 := r17;
    assert {:sourceloc "Aes256Cryptor.java", 455, -1, -1, -1} true;
    call $fakelocal_6 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.MacInputStream);
    r18 := $fakelocal_6;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} !(unsafe.$heap[r5, unsafe.$type] <: unsafe.java.io.InputStream);
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := 0;
    $exception := $fakelocal_7;
    return;

  anon56_Then:
    assume {:partition} unsafe.$heap[r5, unsafe.$type] <: unsafe.java.io.InputStream;
    $exception := $exception;
    goto anon30;

  anon30:
    r20 := r5;
    assert {:sourceloc "Aes256Cryptor.java", 455, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.aes256.MacInputStream$$la$init$ra$$java.io.InputStream_javax.crypto.Mac(r18, r20, r3);
    assert {:sourceloc "Aes256Cryptor.java", 455, -1, -1, -1} true;
    r6 := r18;
    assert {:sourceloc "Aes256Cryptor.java", 456, -1, -1, -1} true;
    call $fakelocal_8 := unsafe.$new(unsafe.org.apache.commons.io.output.NullOutputStream);
    r19 := $fakelocal_8;
    assert {:sourceloc "Aes256Cryptor.java", 456, -1, -1, -1} true;
    call $exception := unsafe.org.apache.commons.io.output.NullOutputStream$$la$init$ra$$(r19);
    assert {:sourceloc "Aes256Cryptor.java", 456, -1, -1, -1} true;
    call $l3, $exception := unsafe.java.lang.Long$longValue$(r2);
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} !(unsafe.$heap[r6, unsafe.$type] <: unsafe.java.io.InputStream);
    call $fakelocal_9 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := 0;
    $exception := $fakelocal_9;
    return;

  anon57_Then:
    assume {:partition} unsafe.$heap[r6, unsafe.$type] <: unsafe.java.io.InputStream;
    $exception := $exception;
    goto anon33;

  anon33:
    r21 := r6;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} !(unsafe.$heap[r19, unsafe.$type] <: unsafe.java.io.OutputStream);
    call $fakelocal_10 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := 0;
    $exception := $fakelocal_10;
    return;

  anon58_Then:
    assume {:partition} unsafe.$heap[r19, unsafe.$type] <: unsafe.java.io.OutputStream;
    $exception := $exception;
    goto anon36;

  anon36:
    r22 := r19;
    assert {:sourceloc "Aes256Cryptor.java", 456, -1, -1, -1} true;
    call $fakelocal_11, $exception := unsafe.org.apache.commons.io.IOUtils$copyLarge$java.io.InputStream_java.io.OutputStream_long_long(r21, r22, 0, $l3);
    assert {:sourceloc "Aes256Cryptor.java", 458, -1, -1, -1} true;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} r4 == unsafe.$null;
    call $fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_12;
    return;

  anon59_Then:
    assume {:partition} r4 != unsafe.$null;
    $exception := $exception;
    goto anon39;

  anon39:
    call $r14, $exception := unsafe.java.nio.ByteBuffer$array$(r4);
    assert {:sourceloc "Aes256Cryptor.java", 458, -1, -1, -1} true;
    call $r15, $exception := unsafe.javax.crypto.Mac$doFinal$(r3);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon43;

  anon43:
    assert {:sourceloc "Aes256Cryptor.java", 458, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$in_parameter__0 := $r14;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$in_parameter__1 := $r15;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$i1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 462, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon30_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon30_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon30_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0
   == inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1;
    assert {:sourceloc "Aes256Cryptor.java", 462, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon3:
    assert {:sourceloc "Aes256Cryptor.java", 463, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return := 1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block95;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block95:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon30_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0
   != inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1;
    assert {:sourceloc "Aes256Cryptor.java", 462, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block88;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block88:
    assert {:sourceloc "Aes256Cryptor.java", 464, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon31_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon31_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon31_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 464, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 465, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon32_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon32_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon32_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 465, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block89;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block89:
    assert {:sourceloc "Aes256Cryptor.java", 465, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return := 0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block95;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon32_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 465, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block90;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block90:
    assert {:sourceloc "Aes256Cryptor.java", 467, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon33_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon33_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon33_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return := 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon33_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon11:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i0 := unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0];
    assert {:sourceloc "Aes256Cryptor.java", 468, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon34_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon34_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon34_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return := 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon34_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon14;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon14:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$i1 := unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1];
    assert {:sourceloc "Aes256Cryptor.java", 468, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon35_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon35_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon35_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$i1
   != inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i0;
    assert {:sourceloc "Aes256Cryptor.java", 468, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon17:
    assert {:sourceloc "Aes256Cryptor.java", 469, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return := 0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block95;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon35_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$i1
   == inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i0;
    assert {:sourceloc "Aes256Cryptor.java", 468, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block91;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block91:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4 := 0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block92;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block92:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b3;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block92;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block92:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3
   == inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon26:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2 := unsafe.$intArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3
   != inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "elseblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon26;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon23:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := unsafe.$intArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return := 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return := 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block92$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block92$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block92_last;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon36_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i0
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon37_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon37_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon37_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return := 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon37_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon23:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b3 := unsafe.$intArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon38_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon38_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon38_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return := 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon38_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon26;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon26:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b2 := unsafe.$intArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r1][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon39_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon39_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon39_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b3
   != inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon29;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon29:
    assert {:sourceloc "Aes256Cryptor.java", 473, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return := 0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block95;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon39_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b3
   == inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block94;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block94:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block94_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon36_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i4
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$i0;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block93;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block93:
    assert {:sourceloc "Aes256Cryptor.java", 475, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return := 1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block95;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon31_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$r0
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 464, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block89;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block94_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$block92_last:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon36_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$anon36_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$Return:
    $z0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$$0$$exception;
    goto anon43$1;

  anon43$1:
    assert {:sourceloc "Aes256Cryptor.java", 458, -1, -1, -1} true;
    $return := $z0;
    goto block87;

  anon60_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.lang.IllegalStateException);
    assert {:clone} true;
    goto anon43;

  anon61_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.IllegalStateException;
    $return := 0;
    return;

  anon54_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon27;

  anon55_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := 0;
    return;

  anon52_Then:
    assume {:partition} i0 != $i2;
    assert {:sourceloc "Aes256Cryptor.java", 448, -1, -1, -1} {:comment "thenblock"} true;
    goto block85;

  anon50_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon18;

  anon51_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := 0;
    return;

  anon47_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon11;

  anon48_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := 0;
    return;

  anon44_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon4;

  anon45_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := 0;
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref)
{
  var $fakelocal_0: ref;
  var $fakelocal_1: ref;
  var i0: int;
  var $b2: int;
  var $fakelocal_3: ref;
  var $i1: int;
  var r0: ref;
  var i4: int;
  var $fakelocal_2: ref;
  var r1: ref;
  var $b3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 462, -1, -1, -1} true;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} r0 == r1;
    assert {:sourceloc "Aes256Cryptor.java", 462, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "Aes256Cryptor.java", 463, -1, -1, -1} true;
    $return := 1;
    goto block95;

  block95:
    return;

  anon30_Then:
    assume {:partition} r0 != r1;
    assert {:sourceloc "Aes256Cryptor.java", 462, -1, -1, -1} {:comment "thenblock"} true;
    goto block88;

  block88:
    assert {:sourceloc "Aes256Cryptor.java", 464, -1, -1, -1} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} r0 != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 464, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  anon6:
    assert {:sourceloc "Aes256Cryptor.java", 465, -1, -1, -1} true;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} r1 == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 465, -1, -1, -1} {:comment "elseblock"} true;
    goto block89;

  block89:
    assert {:sourceloc "Aes256Cryptor.java", 465, -1, -1, -1} true;
    $return := 0;
    goto block95;

  anon32_Then:
    assume {:partition} r1 != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 465, -1, -1, -1} {:comment "thenblock"} true;
    goto block90;

  block90:
    assert {:sourceloc "Aes256Cryptor.java", 467, -1, -1, -1} true;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} r0 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon33_Then:
    assume {:partition} r0 != unsafe.$null;
    $exception := $exception;
    goto anon11;

  anon11:
    i0 := unsafe.$arrSizeHeap[r0];
    assert {:sourceloc "Aes256Cryptor.java", 468, -1, -1, -1} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := 0;
    $exception := $fakelocal_1;
    return;

  anon34_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon14;

  anon14:
    $i1 := unsafe.$arrSizeHeap[r1];
    assert {:sourceloc "Aes256Cryptor.java", 468, -1, -1, -1} true;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} $i1 != i0;
    assert {:sourceloc "Aes256Cryptor.java", 468, -1, -1, -1} {:comment "elseblock"} true;
    goto anon17;

  anon17:
    assert {:sourceloc "Aes256Cryptor.java", 469, -1, -1, -1} true;
    $return := 0;
    goto block95;

  anon35_Then:
    assume {:partition} $i1 == i0;
    assert {:sourceloc "Aes256Cryptor.java", 468, -1, -1, -1} {:comment "thenblock"} true;
    goto block91;

  block91:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    i4 := 0;
    goto block92;

  block92:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return := $return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception := $exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0 := i0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2 := $b2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3 := $fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0 := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4 := i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2 := $fakelocal_2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1 := r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3 := $b3;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block92;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block92:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3
   == inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon26:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2 := unsafe.$intArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3
   != inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "elseblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon26;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon23:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := unsafe.$intArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return := 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return := 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return:
    $return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception;
    $b2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2;
    $fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3;
    i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4;
    $fakelocal_2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2;
    $b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3;
    goto block92$1;

  block92$1:
    goto block92_last;

  anon36_Else:
    assume {:partition} i0 > i4;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "elseblock"} true;
    goto anon20;

  anon20:
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} !(i4 < unsafe.$arrSizeHeap[r0] && i4 >= 0);
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_2;
    return;

  anon37_Then:
    assume {:partition} i4 < unsafe.$arrSizeHeap[r0] && i4 >= 0;
    $exception := $exception;
    goto anon23;

  anon23:
    $b3 := unsafe.$intArrHeap[r0][i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} !(i4 < unsafe.$arrSizeHeap[r1] && i4 >= 0);
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_3;
    return;

  anon38_Then:
    assume {:partition} i4 < unsafe.$arrSizeHeap[r1] && i4 >= 0;
    $exception := $exception;
    goto anon26;

  anon26:
    $b2 := unsafe.$intArrHeap[r1][i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} $b3 != $b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "elseblock"} true;
    goto anon29;

  anon29:
    assert {:sourceloc "Aes256Cryptor.java", 473, -1, -1, -1} true;
    $return := 0;
    goto block95;

  anon39_Then:
    assume {:partition} $b3 == $b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "thenblock"} true;
    goto block94;

  block94:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    i4 := i4 + 1;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto block94_dummy;

  anon36_Then:
    assume {:partition} i4 >= i0;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "thenblock"} true;
    goto block93;

  block93:
    assert {:sourceloc "Aes256Cryptor.java", 475, -1, -1, -1} true;
    $return := 1;
    goto block95;

  anon31_Then:
    assume {:partition} r0 == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 464, -1, -1, -1} {:comment "thenblock"} true;
    goto block89;

  block94_dummy:
    assume false;
    return;

  block92_last:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto anon36_Then, anon36_Else;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var $fakelocal_2: ref;
  var $fakelocal_0: ref;
  var $fakelocal_1: ref;
  var r1: ref;
  var $fakelocal_4: ref;
  var $r9: ref;
  var $r10: ref;
  var r12: ref;
  var i0: int;
  var $r7: ref;
  var r11: ref;
  var $i1: int;
  var r4: ref;
  var $fakelocal_5: ref;
  var $r8: ref;
  var r0: ref;
  var r2: ref;
  var $r6: ref;
  var $l2: int;
  var r3: ref;
  var $fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.java.nio.channels.SeekableByteChannel;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.Long;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 481, -1, -1, -1} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon43_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $fakelocal_1, $exception := unsafe.java.nio.channels.SeekableByteChannel$position$long(r1, 48);
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon7;

  anon7:
    assert {:sourceloc "Aes256Cryptor.java", 484, -1, -1, -1} true;
    call r2, $exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 485, -1, -1, -1} true;
    call i0, $exception := unsafe.java.nio.channels.SeekableByteChannel$read$java.nio.ByteBuffer(r1, r2);
    goto anon46_Then, anon46_Else;

  anon46_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon11;

  anon11:
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} true;
    goto anon48_Then, anon48_Else;

  anon48_Else:
    assume {:partition} r2 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon48_Then:
    assume {:partition} r2 != unsafe.$null;
    $exception := $exception;
    goto anon14;

  anon14:
    call $i1, $exception := unsafe.java.nio.Buffer$capacity$(r2);
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} true;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} i0 != $i1;
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} {:comment "elseblock"} true;
    goto anon17;

  anon17:
    assert {:sourceloc "Aes256Cryptor.java", 489, -1, -1, -1} true;
    $return := unsafe.$null;
    goto block99;

  block99:
    return;

  anon49_Then:
    assume {:partition} i0 == $i1;
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} {:comment "thenblock"} true;
    goto block96;

  block96:
    assert {:sourceloc "Aes256Cryptor.java", 494, -1, -1, -1} true;
    $r6 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 494, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0 := $r6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1 := 2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block42;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block42:
    assert {:sourceloc "Aes256Cryptor.java", 245, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst9);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 246, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45:
    assert {:sourceloc "Aes256Cryptor.java", 247, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block44:
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 248, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7);
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block43;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block43:
    assert {:sourceloc "Aes256Cryptor.java", 247, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 250, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.AssertionError);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3, unsafe.$StringConst10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8);
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return:
    r11 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    goto block96$1;

  block96$1:
    assert {:sourceloc "Aes256Cryptor.java", 495, -1, -1, -1} true;
    call $r7, $exception := unsafe.java.nio.ByteBuffer$array$(r2);
    goto anon50_Then, anon50_Else;

  anon50_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon21;

  anon21:
    assert {:sourceloc "Aes256Cryptor.java", 495, -1, -1, -1} true;
    goto anon52_Then, anon52_Else;

  anon52_Else:
    assume {:partition} r11 == unsafe.$null;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon52_Then:
    assume {:partition} r11 != unsafe.$null;
    $exception := $exception;
    goto anon24;

  anon24:
    call r3, $exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(r11, $r7);
    goto anon53_Then, anon53_Else;

  anon53_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon28;

  anon28:
    assert {:sourceloc "Aes256Cryptor.java", 496, -1, -1, -1} true;
    call r4, $exception := unsafe.java.nio.ByteBuffer$wrap$byte$lp$$rp$(r3);
    goto anon55_Then, anon55_Else;

  anon55_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon32;

  anon32:
    assert {:sourceloc "Aes256Cryptor.java", 497, -1, -1, -1} true;
    goto anon57_Then, anon57_Else;

  anon57_Else:
    assume {:partition} r4 == unsafe.$null;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_4;
    return;

  anon57_Then:
    assume {:partition} r4 != unsafe.$null;
    $exception := $exception;
    goto anon35;

  anon35:
    call $l2, $exception := unsafe.java.nio.ByteBuffer$getLong$(r4);
    goto anon58_Then, anon58_Else;

  anon58_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon39;

  anon39:
    assert {:sourceloc "Aes256Cryptor.java", 497, -1, -1, -1} true;
    call $r8, $exception := unsafe.java.lang.Long$valueOf$long($l2);
    goto anon60_Then, anon60_Else;

  anon60_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block98;

  block98:
    assert {:sourceloc "Aes256Cryptor.java", 497, -1, -1, -1} true;
    $return := $r8;
    goto block99;

  anon60_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon61_Then, anon61_Else;

  anon61_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto block98;

  anon61_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block97;

  block97:
    assert {:sourceloc "Aes256Cryptor.java", 489, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r9 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 498, -1, -1, -1} true;
    r12 := $r9;
    assert {:sourceloc "Aes256Cryptor.java", 499, -1, -1, -1} true;
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    $r10 := $fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 499, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.Throwable($r10, r12);
    assert {:sourceloc "Aes256Cryptor.java", 499, -1, -1, -1} true;
    $exception := $r10;
    goto block99;

  anon58_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon59_Then, anon59_Else;

  anon59_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon39;

  anon59_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block97;

  anon55_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon56_Then, anon56_Else;

  anon56_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon32;

  anon56_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block97;

  anon53_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon54_Then, anon54_Else;

  anon54_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto anon28;

  anon54_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    $return := unsafe.$null;
    goto block97;

  anon50_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon51_Then, anon51_Else;

  anon51_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon21;

  anon51_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block97;

  anon46_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon47_Then, anon47_Else;

  anon47_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon11;

  anon47_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon44_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon7;

  anon45_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedFile$java.nio.channels.SeekableByteChannel_java.io.OutputStream($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref)
{
  var r2: ref;
  var r0: ref;
  var $fakelocal_5: ref;
  var i0: int;
  var r18: ref;
  var $fakelocal_4: ref;
  var r7: ref;
  var $fakelocal_7: ref;
  var $fakelocal_1: ref;
  var $r12: ref;
  var $l1: int;
  var r17: ref;
  var $fakelocal_6: ref;
  var $l2: int;
  var r3: ref;
  var $r11: ref;
  var $fakelocal_2: ref;
  var r16: ref;
  var r19: ref;
  var $fakelocal_0: ref;
  var r5: ref;
  var $fakelocal_3: ref;
  var r1: ref;
  var $r15: ref;
  var r6: ref;
  var r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$i1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$l2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.io.OutputStream;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.Long;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.java.nio.channels.SeekableByteChannel;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 506, -1, -1, -1} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon31_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $fakelocal_1, $exception := unsafe.java.nio.channels.SeekableByteChannel$position$long(r1, 0);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon7;

  anon7:
    assert {:sourceloc "Aes256Cryptor.java", 507, -1, -1, -1} true;
    call r3, $exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 508, -1, -1, -1} true;
    call i0, $exception := unsafe.java.nio.channels.SeekableByteChannel$read$java.nio.ByteBuffer(r1, r3);
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon11;

  anon11:
    assert {:sourceloc "Aes256Cryptor.java", 511, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$in_parameter__0 := r1;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$i1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$l2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.nio.channels.SeekableByteChannel;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return, unsafe.$type]
   <: unsafe.java.lang.Long;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 481, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon43_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon43_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon43_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon43_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.channels.SeekableByteChannel$position$long(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1, 48);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon44_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon44_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon44_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon7:
    assert {:sourceloc "Aes256Cryptor.java", 484, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 485, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.channels.SeekableByteChannel$read$java.nio.ByteBuffer(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon46_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon46_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon46_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon11:
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon48_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon48_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon48_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon48_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon14;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon14:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$i1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.Buffer$capacity$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2);
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon49_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon49_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon49_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$i0
   != inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$i1;
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon17:
    assert {:sourceloc "Aes256Cryptor.java", 489, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block99;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block99:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon49_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$i0
   == inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$i1;
    assert {:sourceloc "Aes256Cryptor.java", 488, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block96;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block96:
    assert {:sourceloc "Aes256Cryptor.java", 494, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r6 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 494, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1 := 2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block42;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block42:
    assert {:sourceloc "Aes256Cryptor.java", 245, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst9);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 246, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45:
    assert {:sourceloc "Aes256Cryptor.java", 247, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block44:
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 248, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7);
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block43;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block43:
    assert {:sourceloc "Aes256Cryptor.java", 247, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 250, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.AssertionError);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3, unsafe.$StringConst10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8);
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block96$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block96$1:
    assert {:sourceloc "Aes256Cryptor.java", 495, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.ByteBuffer$array$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon50_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon50_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon50_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon21;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon21:
    assert {:sourceloc "Aes256Cryptor.java", 495, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon52_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon52_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon52_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon52_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon24;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon24:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon53_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon53_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon53_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon28:
    assert {:sourceloc "Aes256Cryptor.java", 496, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.ByteBuffer$wrap$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon55_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon55_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon55_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon32:
    assert {:sourceloc "Aes256Cryptor.java", 497, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon57_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon57_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon57_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_4;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon57_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon35;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon35:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$l2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.nio.ByteBuffer$getLong$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r4);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon58_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon58_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon58_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon39:
    assert {:sourceloc "Aes256Cryptor.java", 497, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.lang.Long$valueOf$long(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$l2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon60_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon60_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon60_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block98;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block98:
    assert {:sourceloc "Aes256Cryptor.java", 497, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block99;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon60_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon61_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon61_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon61_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block98;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon61_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97:
    assert {:sourceloc "Aes256Cryptor.java", 489, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 498, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r12 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r9;
    assert {:sourceloc "Aes256Cryptor.java", 499, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 499, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$r12);
    assert {:sourceloc "Aes256Cryptor.java", 499, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$r10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block99;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon58_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon59_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon59_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon59_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon59_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon55_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon56_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon56_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon56_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon56_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon53_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon54_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon54_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon54_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon54_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon50_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon51_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon51_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon51_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon21;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon51_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$block97;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon46_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon47_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon47_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon47_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon47_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon44_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon45_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon45_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon45_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$anon45_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$Return:
    r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptedContentLength$java.nio.channels.SeekableByteChannel$0$$exception;
    goto anon11$1;

  anon11$1:
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon15;

  anon15:
    assert {:sourceloc "Aes256Cryptor.java", 514, -1, -1, -1} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} i0 == 16;
    assert {:sourceloc "Aes256Cryptor.java", 514, -1, -1, -1} {:comment "elseblock"} true;
    goto anon18;

  anon18:
    assert {:sourceloc "Aes256Cryptor.java", 515, -1, -1, -1} true;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} r4 == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 515, -1, -1, -1} {:comment "elseblock"} true;
    goto block100;

  block100:
    assert {:sourceloc "Aes256Cryptor.java", 515, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.java.io.IOException);
    r16 := $fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 515, -1, -1, -1} true;
    call $exception := unsafe.java.io.IOException$$la$init$ra$$java.lang.String(r16, unsafe.$StringConst20);
    assert {:sourceloc "Aes256Cryptor.java", 515, -1, -1, -1} true;
    $exception := r16;
    goto block102;

  block102:
    return;

  anon39_Then:
    assume {:partition} r4 != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 515, -1, -1, -1} {:comment "thenblock"} true;
    goto block101;

  block101:
    assert {:sourceloc "Aes256Cryptor.java", 519, -1, -1, -1} true;
    call $fakelocal_3, $exception := unsafe.java.nio.channels.SeekableByteChannel$position$long(r1, 64);
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon24;

  anon24:
    assert {:sourceloc "Aes256Cryptor.java", 522, -1, -1, -1} true;
    $r11 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 522, -1, -1, -1} true;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} r3 == unsafe.$null;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_4;
    return;

  anon42_Then:
    assume {:partition} r3 != unsafe.$null;
    $exception := $exception;
    goto anon27;

  anon27:
    call $r12, $exception := unsafe.java.nio.ByteBuffer$array$(r3);
    assert {:sourceloc "Aes256Cryptor.java", 522, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0 := $r11;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1 := $r12;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2 := 2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return:
    r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto anon27$1;

  anon27$1:
    assert {:sourceloc "Aes256Cryptor.java", 525, -1, -1, -1} true;
    call $fakelocal_5 := unsafe.$new(unsafe.org.cryptomator.crypto.io.SeekableByteChannelInputStream);
    r17 := $fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 525, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.io.SeekableByteChannelInputStream$$la$init$ra$$java.nio.channels.SeekableByteChannel(r17, r1);
    assert {:sourceloc "Aes256Cryptor.java", 525, -1, -1, -1} true;
    r6 := r17;
    assert {:sourceloc "Aes256Cryptor.java", 526, -1, -1, -1} true;
    call $fakelocal_6 := unsafe.$new(unsafe.javax.crypto.CipherInputStream);
    r18 := $fakelocal_6;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} !(unsafe.$heap[r6, unsafe.$type] <: unsafe.java.io.InputStream);
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := unsafe.$null;
    $exception := $fakelocal_7;
    return;

  anon43_Then:
    assume {:partition} unsafe.$heap[r6, unsafe.$type] <: unsafe.java.io.InputStream;
    $exception := $exception;
    goto anon30;

  anon30:
    r19 := r6;
    assert {:sourceloc "Aes256Cryptor.java", 526, -1, -1, -1} true;
    call $exception := unsafe.javax.crypto.CipherInputStream$$la$init$ra$$java.io.InputStream_javax.crypto.Cipher(r18, r19, r5);
    assert {:sourceloc "Aes256Cryptor.java", 526, -1, -1, -1} true;
    r7 := r18;
    assert {:sourceloc "Aes256Cryptor.java", 527, -1, -1, -1} true;
    call $l1, $exception := unsafe.java.lang.Long$longValue$(r4);
    assert {:sourceloc "Aes256Cryptor.java", 527, -1, -1, -1} true;
    call $l2, $exception := unsafe.org.apache.commons.io.IOUtils$copyLarge$java.io.InputStream_java.io.OutputStream_long_long(r7, r2, 0, $l1);
    assert {:sourceloc "Aes256Cryptor.java", 527, -1, -1, -1} true;
    call $r15, $exception := unsafe.java.lang.Long$valueOf$long($l2);
    assert {:sourceloc "Aes256Cryptor.java", 527, -1, -1, -1} true;
    $return := $r15;
    goto block102;

  anon40_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon24;

  anon41_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon38_Then:
    assume {:partition} i0 != 16;
    assert {:sourceloc "Aes256Cryptor.java", 514, -1, -1, -1} {:comment "thenblock"} true;
    goto block100;

  anon36_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon15;

  anon37_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon34_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon11;

  anon35_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon32_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon7;

  anon33_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptRange$java.nio.channels.SeekableByteChannel_java.io.OutputStream_long_long($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: ref, 
    $in_parameter__2: int, 
    $in_parameter__3: int)
   returns ($return: ref, $exception: ref)
{
  var $fakelocal_5: ref;
  var r19: ref;
  var r3: ref;
  var l5: int;
  var $fakelocal_9: ref;
  var $fakelocal_6: ref;
  var i2: int;
  var $fakelocal_0: ref;
  var l1: int;
  var $fakelocal_2: ref;
  var $r14: ref;
  var $r11: ref;
  var r0: ref;
  var $fakelocal_7: ref;
  var r16: ref;
  var $l6: int;
  var l0: int;
  var $fakelocal_8: ref;
  var r17: ref;
  var r2: ref;
  var $l7: int;
  var l3: int;
  var r18: ref;
  var r5: ref;
  var $r10: ref;
  var $fakelocal_1: ref;
  var $fakelocal_3: ref;
  var l4: int;
  var r6: ref;
  var r1: ref;
  var r4: ref;
  var $fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.Long;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type]
   <: unsafe.java.nio.channels.SeekableByteChannel;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.io.OutputStream;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    l0 := $in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    l1 := $in_parameter__3;
    assert {:sourceloc "Aes256Cryptor.java", 533, -1, -1, -1} true;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon28_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $fakelocal_1, $exception := unsafe.java.nio.channels.SeekableByteChannel$position$long(r1, 0);
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon7;

  anon7:
    assert {:sourceloc "Aes256Cryptor.java", 534, -1, -1, -1} true;
    call r3, $exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 535, -1, -1, -1} true;
    call i2, $exception := unsafe.java.nio.channels.SeekableByteChannel$read$java.nio.ByteBuffer(r1, r3);
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon11;

  anon11:
    assert {:sourceloc "Aes256Cryptor.java", 538, -1, -1, -1} true;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} i2 != 16;
    assert {:sourceloc "Aes256Cryptor.java", 538, -1, -1, -1} {:comment "elseblock"} true;
    goto anon14;

  anon14:
    assert {:sourceloc "Aes256Cryptor.java", 539, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.java.io.IOException);
    r16 := $fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 539, -1, -1, -1} true;
    call $exception := unsafe.java.io.IOException$$la$init$ra$$java.lang.String(r16, unsafe.$StringConst20);
    assert {:sourceloc "Aes256Cryptor.java", 539, -1, -1, -1} true;
    $exception := r16;
    goto block104;

  block104:
    return;

  anon33_Then:
    assume {:partition} i2 == 16;
    assert {:sourceloc "Aes256Cryptor.java", 538, -1, -1, -1} {:comment "thenblock"} true;
    goto block103;

  block103:
    assert {:sourceloc "Aes256Cryptor.java", 543, -1, -1, -1} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} 16 == 0;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon34_Then:
    assume {:partition} 16 != 0;
    $exception := $exception;
    goto anon17;

  anon17:
    l3 := unsafe.$divInt(l0, 16);
    assert {:sourceloc "Aes256Cryptor.java", 544, -1, -1, -1} true;
    l4 := unsafe.$mulInt(l3, 16);
    assert {:sourceloc "Aes256Cryptor.java", 545, -1, -1, -1} true;
    l5 := l0 - l4;
    assert {:sourceloc "Aes256Cryptor.java", 546, -1, -1, -1} true;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} r3 == unsafe.$null;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_4;
    return;

  anon35_Then:
    assume {:partition} r3 != unsafe.$null;
    $exception := $exception;
    goto anon20;

  anon20:
    call $fakelocal_5, $exception := unsafe.java.nio.ByteBuffer$putLong$int_long(r3, 8, l3);
    assert {:sourceloc "Aes256Cryptor.java", 549, -1, -1, -1} true;
    $l6 := 64 + l4;
    assert {:sourceloc "Aes256Cryptor.java", 549, -1, -1, -1} true;
    call $fakelocal_6, $exception := unsafe.java.nio.channels.SeekableByteChannel$position$long(r1, $l6);
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon24;

  anon24:
    assert {:sourceloc "Aes256Cryptor.java", 552, -1, -1, -1} true;
    $r10 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 552, -1, -1, -1} true;
    call $r11, $exception := unsafe.java.nio.ByteBuffer$array$(r3);
    assert {:sourceloc "Aes256Cryptor.java", 552, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0 := $r10;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1 := $r11;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2 := 2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return:
    r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto anon24$1;

  anon24$1:
    assert {:sourceloc "Aes256Cryptor.java", 555, -1, -1, -1} true;
    call $fakelocal_7 := unsafe.$new(unsafe.org.cryptomator.crypto.io.SeekableByteChannelInputStream);
    r17 := $fakelocal_7;
    assert {:sourceloc "Aes256Cryptor.java", 555, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.io.SeekableByteChannelInputStream$$la$init$ra$$java.nio.channels.SeekableByteChannel(r17, r1);
    assert {:sourceloc "Aes256Cryptor.java", 555, -1, -1, -1} true;
    r5 := r17;
    assert {:sourceloc "Aes256Cryptor.java", 556, -1, -1, -1} true;
    call $fakelocal_8 := unsafe.$new(unsafe.javax.crypto.CipherInputStream);
    r18 := $fakelocal_8;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} !(unsafe.$heap[r5, unsafe.$type] <: unsafe.java.io.InputStream);
    call $fakelocal_9 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := unsafe.$null;
    $exception := $fakelocal_9;
    return;

  anon38_Then:
    assume {:partition} unsafe.$heap[r5, unsafe.$type] <: unsafe.java.io.InputStream;
    $exception := $exception;
    goto anon27;

  anon27:
    r19 := r5;
    assert {:sourceloc "Aes256Cryptor.java", 556, -1, -1, -1} true;
    call $exception := unsafe.javax.crypto.CipherInputStream$$la$init$ra$$java.io.InputStream_javax.crypto.Cipher(r18, r19, r4);
    assert {:sourceloc "Aes256Cryptor.java", 556, -1, -1, -1} true;
    r6 := r18;
    assert {:sourceloc "Aes256Cryptor.java", 557, -1, -1, -1} true;
    call $l7, $exception := unsafe.org.apache.commons.io.IOUtils$copyLarge$java.io.InputStream_java.io.OutputStream_long_long(r6, r2, l5, l1);
    assert {:sourceloc "Aes256Cryptor.java", 557, -1, -1, -1} true;
    call $r14, $exception := unsafe.java.lang.Long$valueOf$long($l7);
    assert {:sourceloc "Aes256Cryptor.java", 557, -1, -1, -1} true;
    $return := $r14;
    goto block104;

  anon36_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon24;

  anon37_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon31_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon11;

  anon32_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon29_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon7;

  anon30_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref)
{
  var $r21: ref;
  var $r19: ref;
  var $fakelocal_13: ref;
  var $fakelocal_24: ref;
  var $fakelocal_21: ref;
  var r40: ref;
  var r38: ref;
  var $l6: int;
  var $fakelocal_29: ref;
  var r9: ref;
  var i10: int;
  var $fakelocal_27: ref;
  var $fakelocal_5: int;
  var $fakelocal_25: ref;
  var $fakelocal_22: ref;
  var $fakelocal_3: ref;
  var $fakelocal_12: ref;
  var r7: ref;
  var $d2: int;
  var r8: ref;
  var r12: ref;
  var $fakelocal_10: ref;
  var $fakelocal_11: ref;
  var $fakelocal_14: ref;
  var $fakelocal_23: ref;
  var r14: ref;
  var r6: ref;
  var $fakelocal_20: ref;
  var $fakelocal_0: ref;
  var $fakelocal_17: ref;
  var $fakelocal_15: ref;
  var $fakelocal_4: ref;
  var r43: ref;
  var $fakelocal_1: ref;
  var $fakelocal_19: ref;
  var $d4: int;
  var $fakelocal_18: ref;
  var r1: ref;
  var r5: ref;
  var $d0: int;
  var $r29: ref;
  var $r16: ref;
  var r10: ref;
  var $l7: int;
  var i0: int;
  var $r26: ref;
  var $fakelocal_28: int;
  var r41: ref;
  var $d5: int;
  var $fakelocal_7: int;
  var $r36: ref;
  var $r30: ref;
  var $d1: int;
  var r44: ref;
  var r13: ref;
  var r45: ref;
  var r3: ref;
  var r42: ref;
  var $fakelocal_2: ref;
  var r2: ref;
  var r4: ref;
  var $i2: int;
  var $fakelocal_9: ref;
  var $fakelocal_26: ref;
  var r39: ref;
  var $fakelocal_30: int;
  var $d3: int;
  var $fakelocal_8: int;
  var r0: ref;
  var r11: ref;
  var $fakelocal_16: ref;
  var $l5: int;
  var $r20: ref;
  var $fakelocal_6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$in_parameter__0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$arrSizeHeap: [ref]int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i10: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type]
   <: unsafe.java.nio.channels.SeekableByteChannel;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.Long;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.io.InputStream;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 563, -1, -1, -1} true;
    goto anon100_Then, anon100_Else;

  anon100_Else:
    assume {:partition} r2 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon100_Then:
    assume {:partition} r2 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $fakelocal_1, $exception := unsafe.java.nio.channels.SeekableByteChannel$truncate$long(r2, 0);
    goto anon101_Then, anon101_Else;

  anon101_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon7;

  anon7:
    assert {:sourceloc "Aes256Cryptor.java", 566, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$in_parameter__0 := 16;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$this
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 269, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_0 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$i0];
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon10_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon10_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon10_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon10_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := unsafe.java.security.SecureRandom$generateSeed$int(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r2, 16);
    assert {:sourceloc "Aes256Cryptor.java", 270, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon6:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := unsafe.java.security.SecureRandom$setSeed$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r4);
    assert {:sourceloc "Aes256Cryptor.java", 271, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5 := unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260;
    assert {:sourceloc "Aes256Cryptor.java", 271, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon12_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon12_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception := unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 272, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$r1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$block52;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$block52:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$Return:
    $r16 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$randomData$int$0$$exception;
    goto anon7$1;

  anon7$1:
    assert {:sourceloc "Aes256Cryptor.java", 566, -1, -1, -1} true;
    call r3, $exception := unsafe.java.nio.ByteBuffer$wrap$byte$lp$$rp$($r16);
    assert {:sourceloc "Aes256Cryptor.java", 567, -1, -1, -1} true;
    goto anon103_Then, anon103_Else;

  anon103_Else:
    assume {:partition} r3 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon103_Then:
    assume {:partition} r3 != unsafe.$null;
    $exception := $exception;
    goto anon10;

  anon10:
    call $fakelocal_3, $exception := unsafe.java.nio.ByteBuffer$putLong$int_long(r3, 8, 0);
    assert {:sourceloc "Aes256Cryptor.java", 568, -1, -1, -1} true;
    call $fakelocal_4, $exception := unsafe.java.nio.Buffer$position$int(r3, 0);
    assert {:sourceloc "Aes256Cryptor.java", 569, -1, -1, -1} true;
    call $fakelocal_5, $exception := unsafe.java.nio.channels.SeekableByteChannel$write$java.nio.ByteBuffer(r2, r3);
    goto anon104_Then, anon104_Else;

  anon104_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon14;

  anon14:
    assert {:sourceloc "Aes256Cryptor.java", 572, -1, -1, -1} true;
    $r19 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263];
    assert {:sourceloc "Aes256Cryptor.java", 572, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0 := $r19;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Mac;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block47;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block47:
    assert {:sourceloc "Aes256Cryptor.java", 258, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.javax.crypto.Mac$getInstance$java.lang.String(unsafe.$StringConst1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 259, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.javax.crypto.Mac$init$java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block49;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block49:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 263, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3, unsafe.$StringConst12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8);
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block48:
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 261, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.AssertionError);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5, unsafe.$StringConst11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7);
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return:
    r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    goto anon14$1;

  anon14$1:
    assert {:sourceloc "Aes256Cryptor.java", 573, -1, -1, -1} true;
    $r20 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 573, -1, -1, -1} true;
    call $r21, $exception := unsafe.java.nio.ByteBuffer$array$(r3);
    assert {:sourceloc "Aes256Cryptor.java", 573, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0 := $r20;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1 := $r21;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2 := 1;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return:
    r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto anon14$2;

  anon14$2:
    assert {:sourceloc "Aes256Cryptor.java", 576, -1, -1, -1} true;
    goto anon106_Then, anon106_Else;

  anon106_Else:
    assume {:partition} r4 == unsafe.$null;
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_6;
    return;

  anon106_Then:
    assume {:partition} r4 != unsafe.$null;
    $exception := $exception;
    goto anon17;

  anon17:
    call $i2, $exception := unsafe.javax.crypto.Mac$getMacLength$(r4);
    assert {:sourceloc "Aes256Cryptor.java", 576, -1, -1, -1} true;
    call r6, $exception := unsafe.java.nio.ByteBuffer$allocate$int($i2);
    assert {:sourceloc "Aes256Cryptor.java", 577, -1, -1, -1} true;
    call $fakelocal_7, $exception := unsafe.java.nio.channels.SeekableByteChannel$write$java.nio.ByteBuffer(r2, r6);
    goto anon107_Then, anon107_Else;

  anon107_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon21;

  anon21:
    assert {:sourceloc "Aes256Cryptor.java", 580, -1, -1, -1} true;
    call r7, $exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 581, -1, -1, -1} true;
    call $fakelocal_8, $exception := unsafe.java.nio.channels.SeekableByteChannel$write$java.nio.ByteBuffer(r2, r7);
    goto anon109_Then, anon109_Else;

  anon109_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon25;

  anon25:
    assert {:sourceloc "Aes256Cryptor.java", 584, -1, -1, -1} true;
    call $fakelocal_9 := unsafe.$new(unsafe.org.cryptomator.crypto.io.SeekableByteChannelOutputStream);
    r40 := $fakelocal_9;
    assert {:sourceloc "Aes256Cryptor.java", 584, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.io.SeekableByteChannelOutputStream$$la$init$ra$$java.nio.channels.SeekableByteChannel(r40, r2);
    assert {:sourceloc "Aes256Cryptor.java", 584, -1, -1, -1} true;
    r8 := r40;
    assert {:sourceloc "Aes256Cryptor.java", 585, -1, -1, -1} true;
    call $fakelocal_10 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.MacOutputStream);
    r41 := $fakelocal_10;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    goto anon111_Then, anon111_Else;

  anon111_Else:
    assume {:partition} !(unsafe.$heap[r8, unsafe.$type] <: unsafe.java.io.OutputStream);
    call $fakelocal_11 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := unsafe.$null;
    $exception := $fakelocal_11;
    return;

  anon111_Then:
    assume {:partition} unsafe.$heap[r8, unsafe.$type] <: unsafe.java.io.OutputStream;
    $exception := $exception;
    goto anon28;

  anon28:
    r44 := r8;
    assert {:sourceloc "Aes256Cryptor.java", 585, -1, -1, -1} true;
    call $exception := unsafe.org.cryptomator.crypto.aes256.MacOutputStream$$la$init$ra$$java.io.OutputStream_javax.crypto.Mac(r41, r44, r4);
    assert {:sourceloc "Aes256Cryptor.java", 585, -1, -1, -1} true;
    r9 := r41;
    assert {:sourceloc "Aes256Cryptor.java", 586, -1, -1, -1} true;
    call $fakelocal_12 := unsafe.$new(unsafe.javax.crypto.CipherOutputStream);
    r42 := $fakelocal_12;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    goto anon112_Then, anon112_Else;

  anon112_Else:
    assume {:partition} !(unsafe.$heap[r9, unsafe.$type] <: unsafe.java.io.OutputStream);
    call $fakelocal_13 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := unsafe.$null;
    $exception := $fakelocal_13;
    return;

  anon112_Then:
    assume {:partition} unsafe.$heap[r9, unsafe.$type] <: unsafe.java.io.OutputStream;
    $exception := $exception;
    goto anon31;

  anon31:
    r45 := r9;
    assert {:sourceloc "Aes256Cryptor.java", 586, -1, -1, -1} true;
    call $exception := unsafe.javax.crypto.CipherOutputStream$$la$init$ra$$java.io.OutputStream_javax.crypto.Cipher(r42, r45, r5);
    assert {:sourceloc "Aes256Cryptor.java", 586, -1, -1, -1} true;
    r10 := r42;
    assert {:sourceloc "Aes256Cryptor.java", 587, -1, -1, -1} true;
    call $l5, $exception := unsafe.org.apache.commons.io.IOUtils$copyLarge$java.io.InputStream_java.io.OutputStream(r1, r10);
    assert {:sourceloc "Aes256Cryptor.java", 587, -1, -1, -1} true;
    call r11, $exception := unsafe.java.lang.Long$valueOf$long($l5);
    assert {:sourceloc "Aes256Cryptor.java", 590, -1, -1, -1} true;
    goto anon113_Then, anon113_Else;

  anon113_Else:
    assume {:partition} r6 == unsafe.$null;
    call $fakelocal_14 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_14;
    return;

  anon113_Then:
    assume {:partition} r6 != unsafe.$null;
    $exception := $exception;
    goto anon34;

  anon34:
    call $fakelocal_15, $exception := unsafe.java.nio.Buffer$position$int(r6, 0);
    assert {:sourceloc "Aes256Cryptor.java", 591, -1, -1, -1} true;
    call $r26, $exception := unsafe.javax.crypto.Mac$doFinal$(r4);
    goto anon114_Then, anon114_Else;

  anon114_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon38;

  anon38:
    assert {:sourceloc "Aes256Cryptor.java", 591, -1, -1, -1} true;
    call $fakelocal_16, $exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(r6, $r26);
    assert {:sourceloc "Aes256Cryptor.java", 594, -1, -1, -1} true;
    call $d0, $exception := unsafe.java.lang.Math$random$();
    assert {:sourceloc "Aes256Cryptor.java", 594, -1, -1, -1} true;
    $d1 := unsafe.$realOp32117($d0, unsafe.$DoubleConst0);
    assert {:sourceloc "Aes256Cryptor.java", 594, -1, -1, -1} true;
    goto anon116_Then, anon116_Else;

  anon116_Else:
    assume {:partition} r11 == unsafe.$null;
    call $fakelocal_17 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_17;
    return;

  anon116_Then:
    assume {:partition} r11 != unsafe.$null;
    $exception := $exception;
    goto anon41;

  anon41:
    call $l6, $exception := unsafe.java.lang.Long$longValue$(r11);
    assert {:sourceloc "Aes256Cryptor.java", 594, -1, -1, -1} true;
    $d2 := $l6;
    assert {:sourceloc "Aes256Cryptor.java", 594, -1, -1, -1} true;
    $d3 := unsafe.$realOp32086($d1, $d2);
    assert {:sourceloc "Aes256Cryptor.java", 594, -1, -1, -1} true;
    $d4 := unsafe.$realOp32241($d3, unsafe.$DoubleConst1);
    assert {:sourceloc "Aes256Cryptor.java", 594, -1, -1, -1} true;
    call $d5, $exception := unsafe.java.lang.Math$ceil$double($d4);
    assert {:sourceloc "Aes256Cryptor.java", 594, -1, -1, -1} true;
    i0 := $d5;
    assert {:sourceloc "Aes256Cryptor.java", 595, -1, -1, -1} true;
    call $fakelocal_18 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[$fakelocal_18 := 16];
    r12 := $fakelocal_18;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    i10 := 0;
    goto block105;

  block105:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$return := $return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$exception := $exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i10 := i10;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r12 := r12;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r10 := r10;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i0 := i0;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$block105;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$block105:
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon117_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon117_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon117_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i0;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon48:
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10
   + 16;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon48_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon118_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon119_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon118_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon119_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon119_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon119_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon44:
    assert {:sourceloc "Aes256Cryptor.java", 597, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception := unsafe.java.io.OutputStream$write$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r12);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon118_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon118_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon117_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i0
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon48_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Return:
    $return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception;
    i10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10;
    goto block105$1;

  block105$1:
    goto block105_last;

  anon117_Else:
    assume {:partition} i0 > i10;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} {:comment "elseblock"} true;
    goto anon44;

  anon44:
    assert {:sourceloc "Aes256Cryptor.java", 597, -1, -1, -1} true;
    call $exception := unsafe.java.io.OutputStream$write$byte$lp$$rp$(r10, r12);
    goto anon118_Then, anon118_Else;

  anon118_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon48;

  anon48:
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    i10 := i10 + 16;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    goto anon48_dummy;

  anon118_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon119_Then, anon119_Else;

  anon119_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon48;

  anon119_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon117_Then:
    assume {:partition} i10 >= i0;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} {:comment "thenblock"} true;
    goto block106;

  block106:
    assert {:sourceloc "Aes256Cryptor.java", 599, -1, -1, -1} true;
    call $exception := unsafe.java.io.OutputStream$flush$(r10);
    goto anon120_Then, anon120_Else;

  anon120_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block107;

  block107:
    assert {:sourceloc "Aes256Cryptor.java", 603, -1, -1, -1} true;
    call r38, $exception := unsafe.java.nio.ByteBuffer$allocate$int(8);
    goto anon122_Then, anon122_Else;

  anon122_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon55;

  anon55:
    assert {:sourceloc "Aes256Cryptor.java", 604, -1, -1, -1} true;
    call $l7, $exception := unsafe.java.lang.Long$longValue$(r11);
    goto anon124_Then, anon124_Else;

  anon124_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon59;

  anon59:
    assert {:sourceloc "Aes256Cryptor.java", 604, -1, -1, -1} true;
    goto anon126_Then, anon126_Else;

  anon126_Else:
    assume {:partition} r38 == unsafe.$null;
    call $fakelocal_19 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_19;
    return;

  anon126_Then:
    assume {:partition} r38 != unsafe.$null;
    $exception := $exception;
    goto anon62;

  anon62:
    call $fakelocal_20, $exception := unsafe.java.nio.ByteBuffer$putLong$long(r38, $l7);
    goto anon127_Then, anon127_Else;

  anon127_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon66;

  anon66:
    assert {:sourceloc "Aes256Cryptor.java", 605, -1, -1, -1} true;
    $r29 := unsafe.$heap[r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 605, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this := r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0 := $r29;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1 := 1;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$in_parameter__1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block42;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block42:
    assert {:sourceloc "Aes256Cryptor.java", 245, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst9);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 246, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45:
    assert {:sourceloc "Aes256Cryptor.java", 247, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block45;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block44:
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 248, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r7);
    assert {:sourceloc "Aes256Cryptor.java", 249, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block43;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block43:
    assert {:sourceloc "Aes256Cryptor.java", 247, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 250, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.AssertionError);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3, unsafe.$StringConst10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$r8);
    assert {:sourceloc "Aes256Cryptor.java", 251, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$block46;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$Return:
    r13 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$return;
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesEcbCipher$javax.crypto.SecretKey_int$0$$exception;
    goto anon66$1;

  anon66$1:
    assert {:sourceloc "Aes256Cryptor.java", 606, -1, -1, -1} true;
    call $r30, $exception := unsafe.java.nio.ByteBuffer$array$(r38);
    goto anon129_Then, anon129_Else;

  anon129_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon70;

  anon70:
    assert {:sourceloc "Aes256Cryptor.java", 606, -1, -1, -1} true;
    goto anon131_Then, anon131_Else;

  anon131_Else:
    assume {:partition} r13 == unsafe.$null;
    call $fakelocal_21 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_21;
    return;

  anon131_Then:
    assume {:partition} r13 != unsafe.$null;
    $exception := $exception;
    goto anon73;

  anon73:
    call r14, $exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(r13, $r30);
    goto anon132_Then, anon132_Else;

  anon132_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon77;

  anon77:
    assert {:sourceloc "Aes256Cryptor.java", 607, -1, -1, -1} true;
    goto anon134_Then, anon134_Else;

  anon134_Else:
    assume {:partition} r7 == unsafe.$null;
    call $fakelocal_22 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_22;
    return;

  anon134_Then:
    assume {:partition} r7 != unsafe.$null;
    $exception := $exception;
    goto anon80;

  anon80:
    call $fakelocal_23, $exception := unsafe.java.nio.Buffer$position$int(r7, 0);
    goto anon135_Then, anon135_Else;

  anon135_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon84;

  anon84:
    assert {:sourceloc "Aes256Cryptor.java", 608, -1, -1, -1} true;
    call $fakelocal_24, $exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(r7, r14);
    goto anon137_Then, anon137_Else;

  anon137_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block109;

  block109:
    assert {:sourceloc "Aes256Cryptor.java", 611, -1, -1, -1} true;
    goto block110;

  block110:
    assert {:sourceloc "Aes256Cryptor.java", 614, -1, -1, -1} true;
    call $fakelocal_26, $exception := unsafe.java.nio.channels.SeekableByteChannel$position$long(r2, 16);
    goto anon139_Then, anon139_Else;

  anon139_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon91;

  anon91:
    assert {:sourceloc "Aes256Cryptor.java", 615, -1, -1, -1} true;
    call $fakelocal_27, $exception := unsafe.java.nio.Buffer$position$int(r6, 0);
    assert {:sourceloc "Aes256Cryptor.java", 616, -1, -1, -1} true;
    call $fakelocal_28, $exception := unsafe.java.nio.channels.SeekableByteChannel$write$java.nio.ByteBuffer(r2, r6);
    goto anon141_Then, anon141_Else;

  anon141_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon95;

  anon95:
    assert {:sourceloc "Aes256Cryptor.java", 617, -1, -1, -1} true;
    call $fakelocal_29, $exception := unsafe.java.nio.Buffer$position$int(r7, 0);
    assert {:sourceloc "Aes256Cryptor.java", 618, -1, -1, -1} true;
    call $fakelocal_30, $exception := unsafe.java.nio.channels.SeekableByteChannel$write$java.nio.ByteBuffer(r2, r7);
    goto anon143_Then, anon143_Else;

  anon143_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon99;

  anon99:
    assert {:sourceloc "Aes256Cryptor.java", 620, -1, -1, -1} true;
    $return := r11;
    goto block111;

  block111:
    return;

  anon143_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon144_Then, anon144_Else;

  anon144_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon99;

  anon144_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon141_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon142_Then, anon142_Else;

  anon142_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon95;

  anon142_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon139_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon140_Then, anon140_Else;

  anon140_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon91;

  anon140_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon137_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon138_Then, anon138_Else;

  anon138_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto block109;

  anon138_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block108;

  block108:
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r36 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 609, -1, -1, -1} true;
    r39 := $r36;
    assert {:sourceloc "Aes256Cryptor.java", 610, -1, -1, -1} true;
    call $fakelocal_25 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    r43 := $fakelocal_25;
    assert {:sourceloc "Aes256Cryptor.java", 610, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.Throwable(r43, r39);
    assert {:sourceloc "Aes256Cryptor.java", 610, -1, -1, -1} true;
    $exception := r43;
    goto block111;

  anon135_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon136_Then, anon136_Else;

  anon136_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon84;

  anon136_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block108;

  anon132_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon133_Then, anon133_Else;

  anon133_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto anon77;

  anon133_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    $return := unsafe.$null;
    goto block108;

  anon129_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon130_Then, anon130_Else;

  anon130_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon70;

  anon130_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block108;

  anon127_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon128_Then, anon128_Else;

  anon128_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon66;

  anon128_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block108;

  anon124_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon125_Then, anon125_Else;

  anon125_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon59;

  anon125_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block108;

  anon122_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon123_Then, anon123_Else;

  anon123_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon55;

  anon123_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    goto block108;

  anon120_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon121_Then, anon121_Else;

  anon121_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto block107;

  anon121_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon114_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon115_Then, anon115_Else;

  anon115_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.lang.IllegalStateException);
    assert {:clone} true;
    goto anon38;

  anon115_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.IllegalStateException;
    $return := unsafe.$null;
    return;

  anon109_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon110_Then, anon110_Else;

  anon110_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon25;

  anon110_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon107_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon108_Then, anon108_Else;

  anon108_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon21;

  anon108_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon104_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon105_Then, anon105_Else;

  anon105_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon14;

  anon105_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon101_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon102_Then, anon102_Else;

  anon102_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon7;

  anon102_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.io.IOException;
    $return := unsafe.$null;
    return;

  anon48_dummy:
    assume false;
    return;

  block105_last:
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    goto anon117_Then, anon117_Else;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$getPayloadFilesFilter$($this: ref) returns ($return: ref, $exception: ref)
{
  var $r1: ref;
  var $fakelocal_0: ref;
  var r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$heap: $heap_type;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$return, unsafe.$type]
   <: unsafe.java.nio.file.DirectoryStream$Filter;
    $exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1);
    $r1 := $fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$this := $r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$in_parameter__0 := r0;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$1;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$r0, unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$org.cryptomator.crypto.aes256.Aes256Cryptor$1$this$0259 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$r1];
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$anon0$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$anon0$1:
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$block1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$block1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$Return:
    $exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$1$$la$init$ra$$org.cryptomator.crypto.aes256.Aes256Cryptor$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "Aes256Cryptor.java", 625, -1, -1, -1} true;
    $return := $r1;
    goto block112;

  block112:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$$la$clinit$ra$$() returns ($exception: ref)
{
  var $r0: ref;
  var i0: int;
  var $r2: ref;
  var r3: ref;
  var $r1: ref;
  var $fakelocal_0: ref;
  var $i1: int;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    $exception := unsafe.$null;
    goto block113;

  block113:
    assert {:sourceloc "Aes256Cryptor.java", 93, -1, -1, -1} true;
    call $r0, $exception := unsafe.java.security.SecureRandom$getInstance$java.lang.String(unsafe.$StringConst21);
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon4;

  anon4:
    assert {:sourceloc "Aes256Cryptor.java", 93, -1, -1, -1} true;
    unsafe.java.security.SecureRandom$org.cryptomator.crypto.aes256.Aes256Cryptor$SECURE_PRNG260 := $r0;
    assert {:sourceloc "Aes256Cryptor.java", 94, -1, -1, -1} true;
    call i0, $exception := unsafe.javax.crypto.Cipher$getMaxAllowedKeyLength$java.lang.String(unsafe.$StringConst0);
    goto anon14_Then, anon14_Else;

  anon14_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon8;

  anon8:
    assert {:sourceloc "Aes256Cryptor.java", 95, -1, -1, -1} true;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} 256 <= i0;
    assert {:sourceloc "Aes256Cryptor.java", 95, -1, -1, -1} {:comment "elseblock"} true;
    goto anon11;

  anon11:
    assert {:sourceloc "Aes256Cryptor.java", 99, -1, -1, -1} true;
    $i1 := 256;
    assert {:sourceloc "Aes256Cryptor.java", 99, -1, -1, -1} true;
    goto block116;

  block116:
    assert {:sourceloc "Aes256Cryptor.java", 95, -1, -1, -1} true;
    unsafe.int$org.cryptomator.crypto.aes256.Aes256Cryptor$AES_KEY_LENGTH_IN_BITS0 := $i1;
    goto block117;

  block117:
    assert {:sourceloc "Aes256Cryptor.java", 98, -1, -1, -1} true;
    goto block118;

  block118:
    assert {:sourceloc "Aes256Cryptor.java", 99, -1, -1, -1} true;
    goto block119;

  block119:
    return;

  anon16_Then:
    assume {:partition} i0 < 256;
    assert {:sourceloc "Aes256Cryptor.java", 95, -1, -1, -1} {:comment "thenblock"} true;
    goto block115;

  block115:
    assert {:sourceloc "Aes256Cryptor.java", 99, -1, -1, -1} true;
    $i1 := i0;
    goto block116;

  anon14_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon15_Then, anon15_Else;

  anon15_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon8;

  anon15_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    goto block114;

  block114:
    assert {:sourceloc "Aes256Cryptor.java", 98, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r1 := $exception;
    assert {:sourceloc "Aes256Cryptor.java", 96, -1, -1, -1} true;
    r3 := $r1;
    assert {:sourceloc "Aes256Cryptor.java", 97, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    $r2 := $fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 97, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable($r2, unsafe.$StringConst3, r3);
    assert {:sourceloc "Aes256Cryptor.java", 97, -1, -1, -1} true;
    $exception := $r2;
    goto block119;

  anon12_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon13_Then, anon13_Else;

  anon13_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon4;

  anon13_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    goto block114;
}



implementation unsafe.java.lang.Boolean$$la$init$ra$$boolean($this: ref, $in_parameter__0: int) returns ($exception: ref)
{
  var z0: int;
  var r0: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.Boolean;
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    z0 := $in_parameter__0;
    assert {:sourceloc "Boolean.java", 6, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    $exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "Boolean.java", 7, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.boolean$java.lang.Boolean$value0 := z0];
    assert {:sourceloc "Boolean.java", 8, -1, -1, -1} true;
    goto block120;

  block120:
    return;
}



implementation unsafe.java.lang.Boolean$valueOf$boolean($in_parameter__0: int) returns ($return: ref, $exception: ref)
{
  var z0: int;
  var $fakelocal_0: ref;
  var $r0: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0: int;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$in_parameter__0: int;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$heap: $heap_type;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.Boolean;
    $exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    z0 := $in_parameter__0;
    assert {:sourceloc "Boolean.java", 11, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.Boolean);
    $r0 := $fakelocal_0;
    assert {:sourceloc "Boolean.java", 11, -1, -1, -1} true;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$Entry;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$Entry:
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this := $r0;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$in_parameter__0 := z0;
    havoc inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0, inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0, inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$heap := unsafe.$heap;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this, unsafe.$type]
   <: unsafe.java.lang.Boolean;
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this != unsafe.$null;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0 := inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0 := inline$java.lang.Boolean$$la$init$ra$$boolean$0$$in_parameter__0;
    assert {:sourceloc "Boolean.java", 6, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0$1;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0$1:
    assert {:sourceloc "Boolean.java", 7, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0, unsafe.boolean$java.lang.Boolean$value0 := inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0];
    assert {:sourceloc "Boolean.java", 8, -1, -1, -1} true;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$block120;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$block120:
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$Return;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$Return:
    $exception := inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "Boolean.java", 11, -1, -1, -1} true;
    $return := $r0;
    goto block121;

  block121:
    return;
}



implementation unsafe.java.lang.Boolean$booleanValue$($this: ref) returns ($return: int, $exception: ref)
{
  var $z0: int;
  var r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.Boolean;
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Boolean.java", 15, -1, -1, -1} true;
    $z0 := unsafe.$heap[r0, unsafe.boolean$java.lang.Boolean$value0];
    assert {:sourceloc "Boolean.java", 15, -1, -1, -1} true;
    $return := $z0;
    goto block122;

  block122:
    return;
}



implementation unsafe.java.lang.Object$$la$init$ra$$($this: ref) returns ($exception: ref)
{

  anon0:
    $exception := unsafe.$null;
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59(in_$exception: ref, in_r3: ref, in_r1: ref, in_$i5: int, in_i7: int)
   returns (out_$exception: ref, out_$i5: int, out_i7: int)
{
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap: $heap_type;

  entry:
    out_$exception, out_$i5, out_i7 := in_$exception, in_$i5, in_i7;
    goto block59;

  block59:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    call out_$i5, out_$exception := unsafe.java.lang.CharSequence$length$(in_r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto anon32_Then, anon32_Else;

  anon32_Then:
    assume {:partition} out_i7 >= out_$i5;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    out_$exception, out_$i5, out_i7 := in_$exception, in_$i5, in_i7;
    unsafe.$heap := old(unsafe.$heap);
    return;

  anon23:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call out_$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(in_r3, out_i7, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    out_i7 := out_i7 + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto anon23_dummy;

  anon32_Else:
    assume {:partition} out_$i5 > out_i7;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto anon23;

  anon23_dummy:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception := out_$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3 := in_r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1 := in_r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5 := out_$i5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7 := out_i7;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$block59;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$block59:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_$i5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_i7;
    unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon32_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$anon23_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$Return:
    out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$exception;
    out_$i5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_$i5;
    out_i7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block59$0$out_i7;
    goto anon23_dummy$1;

  anon23_dummy$1:
    return;

  exit:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56(in_$return: ref, 
    in_$exception: ref, 
    in_i6: int, 
    in_$i4: int, 
    in_r3: ref, 
    in_r1: ref, 
    in_$fakelocal_3: ref)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_i6: int, 
    out_$i4: int, 
    out_$fakelocal_3: ref)
{
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex: int;

  entry:
    out_$return, out_$exception, out_i6, out_$i4, out_$fakelocal_3 := in_$return, in_$exception, in_i6, in_$i4, in_$fakelocal_3;
    goto block56;

  block56:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} in_r1 == unsafe.$null;
    call out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_3;
    out_$return, out_$exception, out_i6, out_$i4, out_$fakelocal_3 := in_$return, in_$exception, in_i6, in_$i4, in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex := old(unsafe.$heap), old(unsafe.$objIndex);
    return;

  anon20:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call out_$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(in_r3, out_i6, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    out_i6 := out_i6 + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto anon20_dummy;

  anon31_Else:
    assume {:partition} out_$i4 > out_i6;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto anon20;

  anon17:
    call out_$i4, out_$exception := unsafe.java.lang.CharSequence$length$(in_r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto anon31_Then, anon31_Else;

  anon31_Then:
    assume {:partition} out_i6 >= out_$i4;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    out_$return, out_$exception, out_i6, out_$i4, out_$fakelocal_3 := in_$return, in_$exception, in_i6, in_$i4, in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex := old(unsafe.$heap), old(unsafe.$objIndex);
    return;

  anon30_Then:
    assume {:partition} in_r1 != unsafe.$null;
    out_$exception := out_$exception;
    goto anon17;

  anon20_dummy:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return := out_$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception := out_$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6 := out_i6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4 := out_$i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3 := in_r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1 := in_r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3 := out_$fakelocal_3;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex := unsafe.$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$block56;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$block56:
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 286, -1, -1, -1} {:clone} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := unsafe.java.lang.StringBuilder$setCharAt$int_char(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, 0);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon17:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := unsafe.java.lang.CharSequence$length$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1);
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon31_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4;
    assert {:sourceloc "Aes256Cryptor.java", 285, -1, -1, -1} {:clone} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_i6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon30_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$in_r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$anon20_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$Return:
    out_$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$return;
    out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$exception;
    out_i6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_i6;
    out_$i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$i4;
    out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$scrypt$java.lang.CharSequence_byte$lp$$rp$_int_int_int_loop_block56$0$out_$fakelocal_3;
    goto anon20_dummy$1;

  anon20_dummy$1:
    return;

  exit:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65(in_$return: ref, 
    in_$exception: ref, 
    in_r6: ref, 
    in_r3: ref, 
    in_i4: int, 
    in_$fakelocal_4: int, 
    in_$r9: ref, 
    in_r4: ref, 
    in_r5: ref, 
    in_$fakelocal_3: ref, 
    in_i2: int, 
    in_r0: ref, 
    in_r2: ref)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_r6: ref, 
    out_i4: int, 
    out_$fakelocal_4: int, 
    out_$r9: ref, 
    out_r5: ref, 
    out_$fakelocal_3: ref)
{
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r34: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r33: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$l3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r29: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r27: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r42: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r30: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r35: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r38: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_18: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$stringSizeHeap: [ref]int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap: [ref]int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r34: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r33: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$l3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r29: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r27: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r42: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r30: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r35: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r38: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_18: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$stringSizeHeap: [ref]int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$l0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$heap: $heap_type;

  entry:
    out_$return, out_$exception, out_r6, out_i4, out_$fakelocal_4, out_$r9, out_r5, out_$fakelocal_3 := in_$return, in_$exception, in_r6, in_i4, in_$fakelocal_4, in_$r9, in_r5, in_$fakelocal_3;
    goto block65;

  block65:
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    goto anon44_Then, anon44_Else;

  anon44_Then:
    assume {:partition} out_i4 >= in_i2;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} {:comment "thenblock"} true;
    out_$return, out_$exception, out_r6, out_i4, out_$fakelocal_4, out_$r9, out_r5, out_$fakelocal_3 := in_$return, in_$exception, in_r6, in_i4, in_$fakelocal_4, in_$r9, in_r5, in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := old(unsafe.$heap), old(unsafe.$objIndex), old(unsafe.$stringSizeHeap);
    return;

  anon28:
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    out_i4 := out_i4 + 1;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    goto anon28_dummy;

  anon48_Else:
    assume {:partition} out_$exception == unsafe.$null;
    goto anon28;

  anon49_Else:
    assume {:partition} !(unsafe.$heap[out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon28;

  anon48_Then:
    assume {:partition} out_$exception != unsafe.$null;
    goto anon49_Then, anon49_Else;

  anon49_Then:
    assume {:partition} unsafe.$heap[out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    out_$return, out_$exception, out_r6, out_i4, out_$fakelocal_4, out_$r9, out_r5, out_$fakelocal_3 := in_$return, in_$exception, in_r6, in_i4, in_$fakelocal_4, in_$r9, in_r5, in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := old(unsafe.$heap), old(unsafe.$objIndex), old(unsafe.$stringSizeHeap);
    return;

  anon24:
    assert {:sourceloc "Aes256Cryptor.java", 304, -1, -1, -1} true;
    call out_$fakelocal_4, out_$exception := unsafe.java.util.List$add$java.lang.Object(in_r3, out_r6);
    goto anon48_Then, anon48_Else;

  anon46_Else:
    assume {:partition} out_$exception == unsafe.$null;
    goto anon24;

  anon47_Else:
    assume {:partition} !(unsafe.$heap[out_$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon24;

  anon46_Then:
    assume {:partition} out_$exception != unsafe.$null;
    goto anon47_Then, anon47_Else;

  anon47_Then:
    assume {:partition} unsafe.$heap[out_$exception, unsafe.$type] <: unsafe.java.io.IOException;
    out_$return := unsafe.$null;
    out_$return, out_$exception, out_r6, out_i4, out_$fakelocal_4, out_$r9, out_r5, out_$fakelocal_3 := in_$return, in_$exception, in_r6, in_i4, in_$fakelocal_4, in_$r9, in_r5, in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := old(unsafe.$heap), old(unsafe.$objIndex), old(unsafe.$stringSizeHeap);
    return;

  anon20:
    out_r5 := unsafe.$refArrHeap[in_r4][out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 303, -1, -1, -1} true;
    out_$r9 := unsafe.$heap[in_r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 303, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this := in_r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0 := out_r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1 := out_$r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2 := in_r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r34, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r33, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$l3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r42, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r35, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r38, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$stringSizeHeap := unsafe.$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263];
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Mac;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$in_parameter__0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block47;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block47:
    assert {:sourceloc "Aes256Cryptor.java", 258, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.javax.crypto.Mac$getInstance$java.lang.String(unsafe.$StringConst1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 259, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.javax.crypto.Mac$init$java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block49;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block49:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 263, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3, unsafe.$StringConst12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r8);
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block48:
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 261, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.AssertionError);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5, unsafe.$StringConst11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$r7);
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0$1:
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon77_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon77_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon77_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon77_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$getBytes$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon78_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon78_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon78_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon78_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon6:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.javax.crypto.Mac$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon79_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon79_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon79_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon10:
    assert {:sourceloc "Aes256Cryptor.java", 329, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.ArrayUtils$subarray$byte$lp$$rp$_int_int(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, 0, 10);
    assert {:sourceloc "Aes256Cryptor.java", 330, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 331, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon81_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon81_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon81_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon81_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon13;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon13:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r5);
    assert {:sourceloc "Aes256Cryptor.java", 332, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$array$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r6);
    assert {:sourceloc "Aes256Cryptor.java", 332, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2 := 1;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon13$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon13$1:
    assert {:sourceloc "Aes256Cryptor.java", 333, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20 := unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464;
    assert {:sourceloc "Aes256Cryptor.java", 333, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$getBytes$java.nio.charset.Charset(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20);
    assert {:sourceloc "Aes256Cryptor.java", 334, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon82_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon82_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon82_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon82_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon16:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r8);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon83_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon83_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon83_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r21 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r21);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon85_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon85_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon85_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon85_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon23:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r5);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r23);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon86_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon86_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon86_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon86_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon26;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon26:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r24, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon87_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon87_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon87_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon87_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon29;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon29:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r9);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon88_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon88_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon88_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon88_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon32:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r27);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon89_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon89_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon89_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon89_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon35;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon35:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r28);
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i0 := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10];
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11 := 4];
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r29 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i1 := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r29];
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i0
   + inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i1;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon90_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon90_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon90_Else:
    assume {:partition} 250
   < inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i2;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon38:
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r34, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$getBytes$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r34;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.util.zip.CRC32);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.java.util.zip.CRC32$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3);
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$r3;
    assert {:sourceloc "Aes256Cryptor.java", 293, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.java.util.zip.CRC32$update$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception := unsafe.java.util.zip.CRC32$getValue$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$r2);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$l0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$block62;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$block62:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$l3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon38$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon38$1:
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.Long$toHexString$long(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$l3);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r35 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12;
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r35);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r35, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r11);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon91_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon91_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon91_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon91_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon41:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r36, unsafe.$StringConst15);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon92_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon92_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon92_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon92_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r37);
    assert {:sourceloc "Aes256Cryptor.java", 340, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r12;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 394, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2);
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7);
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81:
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5;
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon93_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon93_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon93_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48:
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_15 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r38 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_15;
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r38);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r38, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r11);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon95_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon95_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon95_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_16 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_16;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon95_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r39, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon96_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon96_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon96_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_17 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_17;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon96_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getOrCreateUuidForEncryptedFilename$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon97_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon97_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon97_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_18 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_18;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon97_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r42, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.util.UUID$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r41);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon98_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon98_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon98_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_19 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_19;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon98_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r42);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon99_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon99_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon99_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_20 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_20;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon99_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon63;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon63:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r43, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon100_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon100_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon100_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_21 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_21;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon100_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon66;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon66:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r44);
    assert {:sourceloc "Aes256Cryptor.java", 342, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r12;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r13;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon7_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValueAsBytes$java.lang.Object(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r3);
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon8_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$anon6:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$writePathSpecificMetadata$java.lang.String_byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$r5);
    assert {:sourceloc "Aes256Cryptor.java", 404, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$block83;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$block83:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon66$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon66$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon101_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon101_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon101_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon70:
    assert {:sourceloc "Aes256Cryptor.java", 343, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r14;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block70:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon101_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon102_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon102_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon102_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon102_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon93_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon94_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon94_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon94_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon90_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$i2
   <= 250;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block69;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block69:
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_22 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r30 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_22;
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r30);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon103_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon103_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon103_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_23 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_23;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon103_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon73;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon73:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r31, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon104_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon104_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon104_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_24 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_24;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon104_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon76;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon76:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r33, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r32);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r33;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon83_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon84_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon84_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon84_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon79_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon80_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon80_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon80_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.lang.IllegalStateException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon80_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.lang.IllegalStateException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return:
    out_r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return;
    out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto anon20$1;

  anon20$1:
    goto anon46_Then, anon46_Else;

  anon45_Then:
    assume {:partition} out_i4 < unsafe.$arrSizeHeap[in_r4] && out_i4 >= 0;
    out_$exception := out_$exception;
    goto anon20;

  anon17:
    assert {:sourceloc "Aes256Cryptor.java", 306, -1, -1, -1} {:clone} true;
    goto anon45_Then, anon45_Else;

  anon45_Else:
    assume {:partition} !(out_i4 < unsafe.$arrSizeHeap[in_r4] && out_i4 >= 0);
    call out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_3;
    out_$return, out_$exception, out_r6, out_i4, out_$fakelocal_4, out_$r9, out_r5, out_$fakelocal_3 := in_$return, in_$exception, in_r6, in_i4, in_$fakelocal_4, in_$r9, in_r5, in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := old(unsafe.$heap), old(unsafe.$objIndex), old(unsafe.$stringSizeHeap);
    return;

  anon44_Else:
    assume {:partition} in_i2 > out_i4;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} {:comment "elseblock"} true;
    goto anon17;

  anon28_dummy:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return := out_$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception := out_$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6 := out_r6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r3 := in_r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4 := out_i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4 := out_$fakelocal_4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9 := out_$r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r4 := in_r4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5 := out_r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3 := out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i2 := in_i2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r0 := in_r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r2 := in_r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap := unsafe.$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$block65;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$block65:
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon44_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon44_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon44_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i2;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon28:
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon28_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon48_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon49_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon48_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon49_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon49_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon49_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon24:
    assert {:sourceloc "Aes256Cryptor.java", 304, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception := unsafe.java.util.List$add$java.lang.Object(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon48_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon48_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon46_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon24;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon47_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon24;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon46_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon47_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon47_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon47_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon20:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5 := unsafe.$refArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r4][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 303, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 303, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r34, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r33, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$l3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r42, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r35, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r38, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$stringSizeHeap := unsafe.$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$hMacMasterKey263];
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return, unsafe.$type]
   <: unsafe.javax.crypto.Mac;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$in_parameter__0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block47;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block47:
    assert {:sourceloc "Aes256Cryptor.java", 258, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := unsafe.javax.crypto.Mac$getInstance$java.lang.String(unsafe.$StringConst1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon11_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon11_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon11_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 259, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon7;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon7:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := unsafe.javax.crypto.Mac$init$java.security.Key(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r1);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block50:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block51:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon15_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block50;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon15_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block49;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block49:
    assert {:sourceloc "Aes256Cryptor.java", 260, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 263, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r8 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r3, unsafe.$StringConst12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r8);
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon11_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon12_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon12_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon12_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$anon12_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block48:
    assert {:sourceloc "Aes256Cryptor.java", 264, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 261, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.AssertionError);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := unsafe.java.lang.AssertionError$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r5, unsafe.$StringConst11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$r7);
    assert {:sourceloc "Aes256Cryptor.java", 262, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$block51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$hmacSha256$javax.crypto.SecretKey$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0$1:
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon77_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon77_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon77_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon77_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$getBytes$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1);
    assert {:sourceloc "Aes256Cryptor.java", 328, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon78_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon78_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon78_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon78_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon6:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.javax.crypto.Mac$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon79_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon79_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon79_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon10:
    assert {:sourceloc "Aes256Cryptor.java", 329, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.ArrayUtils$subarray$byte$lp$$rp$_int_int(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, 0, 10);
    assert {:sourceloc "Aes256Cryptor.java", 330, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 331, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon81_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon81_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon81_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon81_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon13;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon13:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r5);
    assert {:sourceloc "Aes256Cryptor.java", 332, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$array$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r6);
    assert {:sourceloc "Aes256Cryptor.java", 332, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2 := 1;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon13$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon13$1:
    assert {:sourceloc "Aes256Cryptor.java", 333, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20 := unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464;
    assert {:sourceloc "Aes256Cryptor.java", 333, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$getBytes$java.nio.charset.Charset(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20);
    assert {:sourceloc "Aes256Cryptor.java", 334, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon82_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon82_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon82_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon82_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon16:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r8);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon83_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon83_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon83_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r21 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r21);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon85_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon85_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon85_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon85_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon23:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r5);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r23);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon86_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon86_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon86_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon86_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon26;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon26:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r24, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon87_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon87_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon87_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon87_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon29;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon29:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$encodeAsString$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r9);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon88_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon88_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon88_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon88_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon32:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r27);
    assert {:sourceloc "Aes256Cryptor.java", 335, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon89_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon89_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon89_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon89_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon35;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon35:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r28);
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i0 := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10];
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11 := 4];
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r29 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i1 := unsafe.$stringSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r29];
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i0
   + inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i1;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon90_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon90_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon90_Else:
    assume {:partition} 250
   < inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i2;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon38:
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r34, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$getBytes$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10);
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r34;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$l0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$this
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$fakelocal_0 := unsafe.$new(unsafe.java.util.zip.CRC32);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception := unsafe.java.util.zip.CRC32$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$r3);
    assert {:sourceloc "Aes256Cryptor.java", 292, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$r3;
    assert {:sourceloc "Aes256Cryptor.java", 293, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception := unsafe.java.util.zip.CRC32$update$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r1);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$l0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception := unsafe.java.util.zip.CRC32$getValue$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$r2);
    assert {:sourceloc "Aes256Cryptor.java", 294, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$l0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$block62;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$block62:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$l3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$crc32Sum$byte$lp$$rp$$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon38$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon38$1:
    assert {:sourceloc "Aes256Cryptor.java", 338, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.Long$toHexString$long(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$l3);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r35 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12;
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r35);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r35, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r11);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon91_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon91_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon91_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon91_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon41:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r36, unsafe.$StringConst15);
    assert {:sourceloc "Aes256Cryptor.java", 339, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon92_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon92_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon92_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon92_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r37);
    assert {:sourceloc "Aes256Cryptor.java", 340, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r12;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 394, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2);
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7);
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block81;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block81:
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon12:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5;
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon93_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon93_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon93_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48:
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_15 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r38 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_15;
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r38);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r38, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r11);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon95_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon95_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon95_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_16 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_16;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon95_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r39, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon96_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon96_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon96_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_17 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_17;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon96_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getOrCreateUuidForEncryptedFilename$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon97_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon97_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon97_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_18 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_18;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon97_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r42, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.util.UUID$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r41);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon98_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon98_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon98_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_19 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_19;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon98_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r40, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r42);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon99_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon99_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon99_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_20 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_20;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon99_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon63;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon63:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r43, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 341, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon100_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon100_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon100_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_21 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_21;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon100_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon66;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon66:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r44);
    assert {:sourceloc "Aes256Cryptor.java", 342, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r12;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r13;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon7_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon7_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon7_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon7_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$writeValueAsBytes$java.lang.Object(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r3);
    assert {:sourceloc "Aes256Cryptor.java", 403, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon8_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon8_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon8_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon8_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$anon6:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$writePathSpecificMetadata$java.lang.String_byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$r5);
    assert {:sourceloc "Aes256Cryptor.java", 404, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$block83;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$block83:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$storeMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String_org.cryptomator.crypto.aes256.LongFilenameMetadata$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon66$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon66$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon101_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon101_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon101_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon70:
    assert {:sourceloc "Aes256Cryptor.java", 343, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r14;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block70:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon101_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon102_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon102_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon102_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon102_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon93_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon94_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon94_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon94_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon90_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$i2
   <= 250;
    assert {:sourceloc "Aes256Cryptor.java", 337, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block69;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block69:
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_22 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r30 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_22;
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r30);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r10);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon103_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon103_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon103_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_23 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_23;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon103_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon73;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon73:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r31, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon104_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon104_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon104_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_24 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_24;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon104_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon76;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon76:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r33, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r32);
    assert {:sourceloc "Aes256Cryptor.java", 345, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r33;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block70;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon83_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon84_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon84_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon84_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon79_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon80_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon80_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon80_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.lang.IllegalStateException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon10;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon80_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.lang.IllegalStateException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon20$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon20$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon46_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon46_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon45_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r4]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon17:
    assert {:sourceloc "Aes256Cryptor.java", 306, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon45_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon45_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon45_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r4]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_$fakelocal_3;
    unsafe.$heap, unsafe.$objIndex, unsafe.$stringSizeHeap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$$stringSizeHeap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon44_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$in_i2
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4;
    assert {:sourceloc "Aes256Cryptor.java", 302, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$anon28_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$Return:
    out_$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$return;
    out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$exception;
    out_r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r6;
    out_i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_i4;
    out_$fakelocal_4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_4;
    out_$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$r9;
    out_r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_r5;
    out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block65$0$out_$fakelocal_3;
    goto anon28_dummy$1;

  anon28_dummy$1:
    return;

  exit:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73(in_$return: ref, 
    in_$exception: ref, 
    in_i4: int, 
    in_r2: ref, 
    in_$r9: ref, 
    in_r6: ref, 
    in_r4: ref, 
    in_$fakelocal_3: ref, 
    in_r0: ref, 
    in_i2: int, 
    in_$fakelocal_4: ref, 
    in_$r10: ref, 
    in_r5: ref, 
    in_$fakelocal_5: int, 
    in_r3: ref)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_i4: int, 
    out_$r9: ref, 
    out_r6: ref, 
    out_$fakelocal_3: ref, 
    out_$fakelocal_4: ref, 
    out_$r10: ref, 
    out_r5: ref, 
    out_$fakelocal_5: int)
{
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r31: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r27: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r28: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z1: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r23: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r31: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r27: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r22: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r28: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r24: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r21: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$heap: $heap_type;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$heap: $heap_type;

  entry:
    out_$return, out_$exception, out_i4, out_$r9, out_r6, out_$fakelocal_3, out_$fakelocal_4, out_$r10, out_r5, out_$fakelocal_5 := in_$return, in_$exception, in_i4, in_$r9, in_r6, in_$fakelocal_3, in_$fakelocal_4, in_$r10, in_r5, in_$fakelocal_5;
    goto block73;

  block73:
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    goto anon48_Then, anon48_Else;

  anon48_Then:
    assume {:partition} out_i4 >= in_i2;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} {:comment "thenblock"} true;
    out_$return, out_$exception, out_i4, out_$r9, out_r6, out_$fakelocal_3, out_$fakelocal_4, out_$r10, out_r5, out_$fakelocal_5 := in_$return, in_$exception, in_i4, in_$r9, in_r6, in_$fakelocal_3, in_$fakelocal_4, in_$r10, in_r5, in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := old(unsafe.$heap), old(unsafe.$objIndex);
    return;

  anon32:
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    out_i4 := out_i4 + 1;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    goto anon32_dummy;

  anon54_Else:
    assume {:partition} out_$exception == unsafe.$null;
    goto anon32;

  anon55_Else:
    assume {:partition} !(unsafe.$heap[out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon32;

  anon54_Then:
    assume {:partition} out_$exception != unsafe.$null;
    goto anon55_Then, anon55_Else;

  anon55_Then:
    assume {:partition} unsafe.$heap[out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    out_$return, out_$exception, out_i4, out_$r9, out_r6, out_$fakelocal_3, out_$fakelocal_4, out_$r10, out_r5, out_$fakelocal_5 := in_$return, in_$exception, in_i4, in_$r9, in_r6, in_$fakelocal_3, in_$fakelocal_4, in_$r10, in_r5, in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := old(unsafe.$heap), old(unsafe.$objIndex);
    return;

  anon28:
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call out_$fakelocal_5, out_$exception := unsafe.java.util.List$add$java.lang.Object(in_r3, out_$r10);
    goto anon54_Then, anon54_Else;

  anon52_Else:
    assume {:partition} out_$exception == unsafe.$null;
    goto anon28;

  anon53_Else:
    assume {:partition} !(unsafe.$heap[out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto anon28;

  anon52_Then:
    assume {:partition} out_$exception != unsafe.$null;
    goto anon53_Then, anon53_Else;

  anon53_Then:
    assume {:partition} unsafe.$heap[out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    out_$r10 := unsafe.$null;
    out_$return, out_$exception, out_i4, out_$r9, out_r6, out_$fakelocal_3, out_$fakelocal_4, out_$r10, out_r5, out_$fakelocal_5 := in_$return, in_$exception, in_i4, in_$r9, in_r6, in_$fakelocal_3, in_$fakelocal_4, in_$r10, in_r5, in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := old(unsafe.$heap), old(unsafe.$objIndex);
    return;

  anon24:
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.String);
    out_$r10 := out_$fakelocal_4;
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call out_$exception := unsafe.java.lang.String$$la$init$ra$$java.lang.String(out_$r10, out_r6);
    goto anon52_Then, anon52_Else;

  anon50_Else:
    assume {:partition} out_$exception == unsafe.$null;
    goto anon24;

  anon51_Else:
    assume {:partition} !(unsafe.$heap[out_$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon24;

  anon50_Then:
    assume {:partition} out_$exception != unsafe.$null;
    goto anon51_Then, anon51_Else;

  anon51_Then:
    assume {:partition} unsafe.$heap[out_$exception, unsafe.$type] <: unsafe.java.io.IOException;
    out_$return := unsafe.$null;
    out_$return, out_$exception, out_i4, out_$r9, out_r6, out_$fakelocal_3, out_$fakelocal_4, out_$r10, out_r5, out_$fakelocal_5 := in_$return, in_$exception, in_i4, in_$r9, in_r6, in_$fakelocal_3, in_$fakelocal_4, in_$r10, in_r5, in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := old(unsafe.$heap), old(unsafe.$objIndex);
    return;

  anon20:
    out_r5 := unsafe.$refArrHeap[in_r4][out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 355, -1, -1, -1} true;
    out_$r9 := unsafe.$heap[in_r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 355, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this := in_r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0 := out_r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1 := out_$r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2 := in_r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon45_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon45_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon45_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon45_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$endsWith$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon46_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon46_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon46_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z0
   != 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 370, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$removeEnd$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 371, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r21, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 372, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r21, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r22);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon47_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon47_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon47_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon47_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r18, unsafe.$StringConst15);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon48_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon12:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r19);
    assert {:sourceloc "Aes256Cryptor.java", 374, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r24;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 394, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r2);
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7);
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block81:
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$r3, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$anon12:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r5;
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon12$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon12$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon49_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon49_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon49_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon16:
    assert {:sourceloc "Aes256Cryptor.java", 375, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.util.UUID$fromString$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r23);
    assert {:sourceloc "Aes256Cryptor.java", 375, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_4;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon51_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon19;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon19:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getEncryptedFilenameForUUID$java.util.UUID(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r20);
    assert {:sourceloc "Aes256Cryptor.java", 376, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block78;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block78:
    assert {:sourceloc "Aes256Cryptor.java", 382, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 383, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 384, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon55_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon55_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon55_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_9;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon55_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon31;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon31:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r27);
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon56_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon56_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon56_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon56_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon34;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon34:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r11);
    assert {:sourceloc "Aes256Cryptor.java", 387, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.nio.ByteBuffer$array$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r29);
    assert {:sourceloc "Aes256Cryptor.java", 387, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r13;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2 := 2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon34$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon34$1:
    assert {:sourceloc "Aes256Cryptor.java", 388, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 388, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_12;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon57_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon37:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r28);
    assert {:sourceloc "Aes256Cryptor.java", 389, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon58_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon58_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon58_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_13;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon58_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon40:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r31);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon59_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon59_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon59_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44:
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14 := unsafe.$new(unsafe.java.lang.String);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_14;
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16 := unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464;
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$_java.nio.charset.Charset(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r16);
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r15;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block80;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block80:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon59_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon60_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon49_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon50_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon50_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon50_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon50_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon46_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z0
   == 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block77;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block77:
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.String$endsWith$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon52_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon52_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon52_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z1
   != 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon22;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon22:
    assert {:sourceloc "Aes256Cryptor.java", 377, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.org.apache.commons.lang3.StringUtils$removeEndIgnoreCase$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 377, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block78;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon52_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$z1
   == 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block79;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block79:
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_6;
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r6);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r6, unsafe.$StringConst19);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon53_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon53_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon53_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon53_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon25;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon25:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$r1);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$fakelocal_8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon54_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$anon28:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r8);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r9);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$block80;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$Return:
    out_r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$return;
    out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$0$$exception;
    goto anon20$1;

  anon20$1:
    goto anon50_Then, anon50_Else;

  anon49_Then:
    assume {:partition} out_i4 < unsafe.$arrSizeHeap[in_r4] && out_i4 >= 0;
    out_$exception := out_$exception;
    goto anon20;

  anon17:
    assert {:sourceloc "Aes256Cryptor.java", 358, -1, -1, -1} {:clone} true;
    goto anon49_Then, anon49_Else;

  anon49_Else:
    assume {:partition} !(out_i4 < unsafe.$arrSizeHeap[in_r4] && out_i4 >= 0);
    call out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_3;
    out_$return, out_$exception, out_i4, out_$r9, out_r6, out_$fakelocal_3, out_$fakelocal_4, out_$r10, out_r5, out_$fakelocal_5 := in_$return, in_$exception, in_i4, in_$r9, in_r6, in_$fakelocal_3, in_$fakelocal_4, in_$r10, in_r5, in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := old(unsafe.$heap), old(unsafe.$objIndex);
    return;

  anon48_Else:
    assume {:partition} in_i2 > out_i4;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} {:comment "elseblock"} true;
    goto anon17;

  anon32_dummy:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return := out_$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception := out_$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4 := out_i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r2 := in_r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9 := out_$r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6 := out_r6;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r4 := in_r4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3 := out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r0 := in_r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i2 := in_i2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4 := out_$fakelocal_4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10 := out_$r10;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5 := out_r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5 := out_$fakelocal_5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r3 := in_r3;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap := unsafe.$heap;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex := unsafe.$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$block73;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$block73:
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon48_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon48_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon48_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i2;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon32:
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon32_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon54_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon55_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon32;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon54_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon55_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon55_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon55_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon28:
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception := unsafe.java.util.List$add$java.lang.Object(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon54_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon54_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon52_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon53_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon52_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon53_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon53_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon53_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.javax.crypto.IllegalBlockSizeException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10 := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon24:
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.String);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4;
    assert {:sourceloc "Aes256Cryptor.java", 356, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception := unsafe.java.lang.String$$la$init$ra$$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon52_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon52_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon50_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon24;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon51_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon24;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon50_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon51_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon51_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon51_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon20:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5 := unsafe.$refArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r4][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 355, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r0, unsafe.javax.crypto.SecretKey$org.cryptomator.crypto.aes256.Aes256Cryptor$primaryMasterKey262];
    assert {:sourceloc "Aes256Cryptor.java", 355, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$in_parameter__2;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon45_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon45_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon45_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon45_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$endsWith$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon46_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon46_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon46_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z0
   != 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 370, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r21, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$removeEnd$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, unsafe.$StringConst16);
    assert {:sourceloc "Aes256Cryptor.java", 371, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r22, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r21, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 372, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r23, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r21, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r17, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r22);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon47_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon47_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon47_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon47_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r18, unsafe.$StringConst15);
    assert {:sourceloc "Aes256Cryptor.java", 373, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon48_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon12:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r24, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r19);
    assert {:sourceloc "Aes256Cryptor.java", 374, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r24;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.CryptorIOSupport;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", 394, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_0;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon13_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon3;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon3:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.org.cryptomator.crypto.CryptorIOSupport$readPathSpecificMetadata$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r2);
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3
   == unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon6;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon6:
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7);
    assert {:sourceloc "Aes256Cryptor.java", 396, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon14_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3
   != unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", 395, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block81;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block81:
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4 := unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r0, unsafe.com.fasterxml.jackson.databind.ObjectMapper$org.cryptomator.crypto.aes256.Aes256Cryptor$objectMapper261];
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon9;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon9:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := unsafe.com.fasterxml.jackson.databind.ObjectMapper$readValue$byte$lp$$rp$_java.lang.Class(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$r3, unsafe.CC$org$_$cryptomator$_$crypto$_$aes256$_$LongFilenameMetadata);
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$fakelocal_3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon12;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$anon12:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r5;
    assert {:sourceloc "Aes256Cryptor.java", 398, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$r6;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$block82;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$getMetadata$org.cryptomator.crypto.CryptorIOSupport_java.lang.String$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon12$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon12$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon49_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon49_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon49_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon16:
    assert {:sourceloc "Aes256Cryptor.java", 375, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.util.UUID$fromString$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r23);
    assert {:sourceloc "Aes256Cryptor.java", 375, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_4;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon51_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon19;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon19:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.cryptomator.crypto.aes256.LongFilenameMetadata$getEncryptedFilenameForUUID$java.util.UUID(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r25, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r20);
    assert {:sourceloc "Aes256Cryptor.java", 376, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block78;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block78:
    assert {:sourceloc "Aes256Cryptor.java", 382, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r27, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringBefore$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 383, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r28, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$substringAfter$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26, unsafe.$StringConst14);
    assert {:sourceloc "Aes256Cryptor.java", 384, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$allocate$int(16);
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon55_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon55_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon55_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_9;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon55_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon31;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon31:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r27);
    assert {:sourceloc "Aes256Cryptor.java", 385, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon56_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon56_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon56_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon56_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon34;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon34:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_11, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$put$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r11);
    assert {:sourceloc "Aes256Cryptor.java", 387, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r13, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.nio.ByteBuffer$array$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r29);
    assert {:sourceloc "Aes256Cryptor.java", 387, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r13;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2 := 2;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon0;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this, unsafe.$type]
   <: unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor;
    assume {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return, unsafe.$type]
   <: unsafe.javax.crypto.Cipher;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0, unsafe.$type]
   <: unsafe.javax.crypto.SecretKey;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.$null;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$this;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__0;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__1;
    assert {:sourceloc "Aes256Cryptor.java", -1, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$in_parameter__2;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block37:
    assert {:sourceloc "Aes256Cryptor.java", 233, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.Cipher$getInstance$java.lang.String(unsafe.$StringConst7);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0 := unsafe.$new(unsafe.javax.crypto.spec.IvParameterSpec);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_0;
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r2);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8:
    assert {:sourceloc "Aes256Cryptor.java", 234, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_1;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon19_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon11;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon11:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$i0, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon20_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon21_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidAlgorithmParameterException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38:
    assert {:sourceloc "Aes256Cryptor.java", 235, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 238, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r4;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.IllegalStateException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_3;
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.java.lang.IllegalStateException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5, unsafe.$StringConst8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r10);
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon17_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon8;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon18_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.security.InvalidKeyException;
    assert {:clone} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r3 := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block39;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block39:
    assert {:sourceloc "Aes256Cryptor.java", 239, -1, -1, -1} true;
    assume unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    assert {:sourceloc "Aes256Cryptor.java", 236, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r6;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$fakelocal_2;
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String_java.lang.Throwable(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7, unsafe.$StringConst5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$r9);
    assert {:sourceloc "Aes256Cryptor.java", 237, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$r7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block41;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon15_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon4;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$anon16_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.NoSuchPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$block38;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$aesCtrCipher$javax.crypto.SecretKey_byte$lp$$rp$_int$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon34$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon34$1:
    assert {:sourceloc "Aes256Cryptor.java", 388, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14 := unsafe.org.apache.commons.codec.binary.BaseNCodec$org.cryptomator.crypto.AbstractCryptor$ENCRYPTED_FILENAME_CODEC465;
    assert {:sourceloc "Aes256Cryptor.java", 388, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_12;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon57_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon37;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon37:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r31, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.codec.binary.BaseNCodec$decode$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r14, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r28);
    assert {:sourceloc "Aes256Cryptor.java", 389, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon58_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon58_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon58_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_13;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon58_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon40;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon40:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r30, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r31);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon59_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon59_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon59_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44:
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14 := unsafe.$new(unsafe.java.lang.String);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_14;
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16 := unsafe.java.nio.charset.Charset$org.apache.commons.io.Charsets$UTF_8464;
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$_java.nio.charset.Charset(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r16);
    assert {:sourceloc "Aes256Cryptor.java", 390, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r15;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block80;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block80:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon59_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon60_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.javax.crypto.BadPaddingException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon49_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon50_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon50_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon50_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon16;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon50_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon46_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z0
   == 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block77;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block77:
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z1, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.String$endsWith$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon52_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon52_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon52_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z1
   != 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon22;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon22:
    assert {:sourceloc "Aes256Cryptor.java", 377, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r26, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.org.apache.commons.lang3.StringUtils$removeEndIgnoreCase$java.lang.String_java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1, unsafe.$StringConst17);
    assert {:sourceloc "Aes256Cryptor.java", 377, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block78;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon52_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$z1
   == 0;
    assert {:sourceloc "Aes256Cryptor.java", 369, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block79;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block79:
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_5;
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_6;
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r6);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r6, unsafe.$StringConst19);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon53_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon53_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon53_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_7;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon53_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon25;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon25:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r7, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$r1);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8
   == unsafe.$null;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$fakelocal_8;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon54_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8
   != unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon28;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$anon28:
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r8);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r9);
    assert {:sourceloc "Aes256Cryptor.java", 379, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$r5;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$block80;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$Return:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPathComponent$java.lang.String_javax.crypto.SecretKey_org.cryptomator.crypto.CryptorIOSupport$1$$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon20$1;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon20$1:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon50_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon50_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon49_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r4]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon17:
    assert {:sourceloc "Aes256Cryptor.java", 358, -1, -1, -1} {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon49_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon49_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon49_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r4]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r9, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r6, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_r5, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_$fakelocal_5;
    unsafe.$heap, unsafe.$objIndex := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$heap, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$$objIndex;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon48_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$in_i2
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4;
    assert {:sourceloc "Aes256Cryptor.java", 354, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon17;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$anon32_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$Return:
    out_$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$return;
    out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$exception;
    out_i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_i4;
    out_$r9 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r9;
    out_r6 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r6;
    out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_3;
    out_$fakelocal_4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_4;
    out_$r10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$r10;
    out_r5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_r5;
    out_$fakelocal_5 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$decryptPath$java.lang.String_char_char_org.cryptomator.crypto.CryptorIOSupport_loop_block73$0$out_$fakelocal_5;
    goto anon32_dummy$1;

  anon32_dummy$1:
    return;

  exit:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92(in_$return: int, 
    in_$exception: ref, 
    in_i0: int, 
    in_$b2: int, 
    in_$fakelocal_3: ref, 
    in_r0: ref, 
    in_i4: int, 
    in_$fakelocal_2: ref, 
    in_r1: ref, 
    in_$b3: int)
   returns (out_$return: int, 
    out_$exception: ref, 
    out_$b2: int, 
    out_$fakelocal_3: ref, 
    out_i4: int, 
    out_$fakelocal_2: ref, 
    out_$b3: int)
{
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap: $heap_type;

  entry:
    out_$return, out_$exception, out_$b2, out_$fakelocal_3, out_i4, out_$fakelocal_2, out_$b3 := in_$return, in_$exception, in_$b2, in_$fakelocal_3, in_i4, in_$fakelocal_2, in_$b3;
    goto block92;

  block92:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto anon36_Then, anon36_Else;

  anon36_Then:
    assume {:partition} out_i4 >= in_i0;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "thenblock"} true;
    out_$return, out_$exception, out_$b2, out_$fakelocal_3, out_i4, out_$fakelocal_2, out_$b3 := in_$return, in_$exception, in_$b2, in_$fakelocal_3, in_i4, in_$fakelocal_2, in_$b3;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  block94:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    out_i4 := out_i4 + 1;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto block94_dummy;

  anon39_Then:
    assume {:partition} out_$b3 == out_$b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "thenblock"} true;
    goto block94;

  anon26:
    out_$b2 := unsafe.$intArrHeap[in_r1][out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} out_$b3 != out_$b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "elseblock"} true;
    out_$return, out_$exception, out_$b2, out_$fakelocal_3, out_i4, out_$fakelocal_2, out_$b3 := in_$return, in_$exception, in_$b2, in_$fakelocal_3, in_i4, in_$fakelocal_2, in_$b3;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon38_Then:
    assume {:partition} out_i4 < unsafe.$arrSizeHeap[in_r1] && out_i4 >= 0;
    out_$exception := out_$exception;
    goto anon26;

  anon23:
    out_$b3 := unsafe.$intArrHeap[in_r0][out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} !(out_i4 < unsafe.$arrSizeHeap[in_r1] && out_i4 >= 0);
    call out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := 0;
    out_$exception := out_$fakelocal_3;
    out_$return, out_$exception, out_$b2, out_$fakelocal_3, out_i4, out_$fakelocal_2, out_$b3 := in_$return, in_$exception, in_$b2, in_$fakelocal_3, in_i4, in_$fakelocal_2, in_$b3;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon37_Then:
    assume {:partition} out_i4 < unsafe.$arrSizeHeap[in_r0] && out_i4 >= 0;
    out_$exception := out_$exception;
    goto anon23;

  anon20:
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} !(out_i4 < unsafe.$arrSizeHeap[in_r0] && out_i4 >= 0);
    call out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := 0;
    out_$exception := out_$fakelocal_2;
    out_$return, out_$exception, out_$b2, out_$fakelocal_3, out_i4, out_$fakelocal_2, out_$b3 := in_$return, in_$exception, in_$b2, in_$fakelocal_3, in_i4, in_$fakelocal_2, in_$b3;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon36_Else:
    assume {:partition} in_i0 > out_i4;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "elseblock"} true;
    goto anon20;

  block94_dummy:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return := out_$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception := out_$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0 := in_i0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2 := out_$b2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3 := out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0 := in_r0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4 := out_i4;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2 := out_$fakelocal_2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1 := in_r1;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3 := out_$b3;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex := unsafe.$objIndex;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap := unsafe.$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block92;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block92:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94:
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
   + 1;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3
   == inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon26:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2 := unsafe.$intArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon39_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3
   != inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2;
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} {:comment "elseblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon26;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon23:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := unsafe.$intArrHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0][inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4];
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon38_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r1]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return := 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon23;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon20:
    assert {:sourceloc "Aes256Cryptor.java", 472, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon37_Else:
    assume {:partition} !(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     < unsafe.$arrSizeHeap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_r0]
   && inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4
     >= 0);
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return := 0;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_3, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i4, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$fakelocal_2, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_$b3;
    unsafe.$objIndex, unsafe.$heap := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$objIndex, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$$heap;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon36_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$in_i0
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4;
    assert {:sourceloc "Aes256Cryptor.java", 471, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$anon20;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$block94_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$Return:
    out_$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$return;
    out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$exception;
    out_$b2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b2;
    out_$fakelocal_3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_3;
    out_i4 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_i4;
    out_$fakelocal_2 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$fakelocal_2;
    out_$b3 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$jdkArraysEquals$byte$lp$$rp$_byte$lp$$rp$_loop_block92$0$out_$b3;
    goto block94_dummy$1;

  block94_dummy$1:
    return;

  exit:
    return;
}



implementation unsafe.org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105(in_$return: ref, 
    in_$exception: ref, 
    in_i10: int, 
    in_r12: ref, 
    in_r10: ref, 
    in_i0: int)
   returns (out_$return: ref, out_$exception: ref, out_i10: int)
{
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i10: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r12: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r10: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i0: int;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception: ref;
  var inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10: int;

  entry:
    out_$return, out_$exception, out_i10 := in_$return, in_$exception, in_i10;
    goto block105;

  block105:
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    goto anon117_Then, anon117_Else;

  anon117_Then:
    assume {:partition} out_i10 >= in_i0;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} {:comment "thenblock"} true;
    out_$return, out_$exception, out_i10 := in_$return, in_$exception, in_i10;
    return;

  anon48:
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    out_i10 := out_i10 + 16;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    goto anon48_dummy;

  anon118_Else:
    assume {:partition} out_$exception == unsafe.$null;
    goto anon48;

  anon119_Else:
    assume {:partition} !(unsafe.$heap[out_$exception, unsafe.$type] <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto anon48;

  anon118_Then:
    assume {:partition} out_$exception != unsafe.$null;
    goto anon119_Then, anon119_Else;

  anon119_Then:
    assume {:partition} unsafe.$heap[out_$exception, unsafe.$type] <: unsafe.java.io.IOException;
    out_$return := unsafe.$null;
    out_$return, out_$exception, out_i10 := in_$return, in_$exception, in_i10;
    return;

  anon44:
    assert {:sourceloc "Aes256Cryptor.java", 597, -1, -1, -1} true;
    call out_$exception := unsafe.java.io.OutputStream$write$byte$lp$$rp$(in_r10, in_r12);
    goto anon118_Then, anon118_Else;

  anon117_Else:
    assume {:partition} in_i0 > out_i10;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} {:comment "elseblock"} true;
    goto anon44;

  anon48_dummy:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$return := out_$return;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$exception := out_$exception;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i10 := out_i10;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r12 := in_r12;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r10 := in_r10;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i0 := in_i0;
    havoc inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$entry;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$entry:
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$block105;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$block105:
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon117_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon117_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon117_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10
   >= inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i0;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} {:comment "thenblock"} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon48:
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10
   + 16;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon48_dummy;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon118_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception
   == unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon119_Else:
    assume {:partition} !(unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException);
    assert {:clone} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon48;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon118_Then:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception
   != unsafe.$null;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon119_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon119_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon119_Then:
    assume {:partition} unsafe.$heap[inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, unsafe.$type]
   <: unsafe.java.io.IOException;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return := unsafe.$null;
    inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$return, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_$exception, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i10;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon44:
    assert {:sourceloc "Aes256Cryptor.java", 597, -1, -1, -1} true;
    call inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception := unsafe.java.io.OutputStream$write$byte$lp$$rp$(inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r10, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_r12);
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon118_Then, inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon118_Else;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon117_Else:
    assume {:partition} inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$in_i0
   > inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10;
    assert {:sourceloc "Aes256Cryptor.java", 596, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon44;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$anon48_dummy:
    assume false;
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$exit:
    goto inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Return;

  inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$Return:
    out_$return := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$return;
    out_$exception := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_$exception;
    out_i10 := inline$org.cryptomator.crypto.aes256.Aes256Cryptor$encryptFile$java.io.InputStream_java.nio.channels.SeekableByteChannel_loop_block105$0$out_i10;
    goto anon48_dummy$1;

  anon48_dummy$1:
    return;

  exit:
    return;
}



type ref;

type javaType;

type Field _;

type $heap_type = <$GenericType__0>[ref,Field $GenericType__0]$GenericType__0;

type boolArrHeap_type = [ref][int]bool;

type refArrHeap_type = [ref][int]ref;

type realArrHeap_type = [ref][int]int;

type intArrHeap_type = [ref][int]int;
