#globals
globals: (unsafe.$heap, fixed.$heap);(unsafe.$intArrayType, fixed.$intArrayType);(unsafe.$charArrayType, fixed.$charArrayType);(unsafe.$boolArrayType, fixed.$boolArrayType);(unsafe.$byteArrayType, fixed.$byteArrayType);(unsafe.$longArrayType, fixed.$longArrayType);(unsafe.$arrSizeHeap, fixed.$arrSizeHeap);(unsafe.$stringSizeHeap, fixed.$stringSizeHeap);(unsafe.$boolArrHeap, fixed.$boolArrHeap);(unsafe.$refArrHeap, fixed.$refArrHeap);(unsafe.$realArrHeap, fixed.$realArrHeap);(unsafe.$intArrHeap, fixed.$intArrHeap);(unsafe.$objIndex, fixed.$objIndex);(unsafe.java.nio.charset.Charset$java.nio.charset.StandardCharsets$UTF_8336, fixed.java.nio.charset.Charset$java.nio.charset.StandardCharsets$UTF_8336);(unsafe.org.slf4j.Logger$org.openmrs.util.Security$log259, fixed.org.slf4j.Logger$org.openmrs.util.Security$log259);(unsafe.java.lang.String$java.lang.StringBuilder$value470, fixed.java.lang.String$java.lang.StringBuilder$value470);(unsafe.char$lp$$rp$$java.lang.String$chars471, fixed.char$lp$$rp$$java.lang.String$chars471);(unsafe.boolean$java.lang.Boolean$value0, fixed.boolean$java.lang.Boolean$value0);
#types
types: (unsafe.ref, fixed.ref);(unsafe.javaType, fixed.javaType);(unsafe.Field, fixed.Field);(unsafe.$heap_type, fixed.$heap_type);(unsafe.boolArrHeap_type, fixed.boolArrHeap_type);(unsafe.refArrHeap_type, fixed.refArrHeap_type);(unsafe.realArrHeap_type, fixed.realArrHeap_type);(unsafe.intArrHeap_type, fixed.intArrHeap_type);
#constants
constants: (unsafe.$type, fixed.$type);(unsafe.$alloc, fixed.$alloc);(unsafe.$null, fixed.$null);(unsafe.java.lang.Object, fixed.java.lang.Object);(unsafe.org.openmrs.util.Security, fixed.org.openmrs.util.Security);(unsafe.java.io.Serializable, fixed.java.io.Serializable);(unsafe.java.lang.Comparable, fixed.java.lang.Comparable);(unsafe.java.lang.CharSequence, fixed.java.lang.CharSequence);(unsafe.org.openmrs.api.APIException, fixed.org.openmrs.api.APIException);(unsafe.java.lang.Throwable, fixed.java.lang.Throwable);(unsafe.java.lang.Exception, fixed.java.lang.Exception);(unsafe.java.lang.RuntimeException, fixed.java.lang.RuntimeException);(unsafe.java.lang.ClassCastException, fixed.java.lang.ClassCastException);(unsafe.$StringConst0, fixed.$StringConst0);(unsafe.java.lang.Appendable, fixed.java.lang.Appendable);(unsafe.java.lang.AbstractStringBuilder, fixed.java.lang.AbstractStringBuilder);(unsafe.$StringConst1, fixed.$StringConst1);(unsafe.$StringConst2, fixed.$StringConst2);(unsafe.java.security.MessageDigestSpi, fixed.java.security.MessageDigestSpi);(unsafe.java.security.MessageDigest, fixed.java.security.MessageDigest);(unsafe.java.security.GeneralSecurityException, fixed.java.security.GeneralSecurityException);(unsafe.java.security.NoSuchAlgorithmException, fixed.java.security.NoSuchAlgorithmException);(unsafe.org.slf4j.Logger, fixed.org.slf4j.Logger);(unsafe.$StringConst3, fixed.$StringConst3);(unsafe.$StringConst4, fixed.$StringConst4);(unsafe.java.lang.IndexOutOfBoundsException, fixed.java.lang.IndexOutOfBoundsException);(unsafe.java.lang.ArrayIndexOutOfBoundsException, fixed.java.lang.ArrayIndexOutOfBoundsException);(unsafe.java.lang.NullPointerException, fixed.java.lang.NullPointerException);(unsafe.$StringConst5, fixed.$StringConst5);(unsafe.java.lang.Number, fixed.java.lang.Number);(unsafe.java.lang.Integer, fixed.java.lang.Integer);(unsafe.java.util.Random, fixed.java.util.Random);(unsafe.java.lang.System, fixed.java.lang.System);(unsafe.java.lang.Long, fixed.java.lang.Long);(unsafe.java.security.spec.AlgorithmParameterSpec, fixed.java.security.spec.AlgorithmParameterSpec);(unsafe.javax.crypto.spec.IvParameterSpec, fixed.javax.crypto.spec.IvParameterSpec);(unsafe.java.security.spec.KeySpec, fixed.java.security.spec.KeySpec);(unsafe.java.security.Key, fixed.java.security.Key);(unsafe.javax.security.auth.Destroyable, fixed.javax.security.auth.Destroyable);(unsafe.javax.crypto.SecretKey, fixed.javax.crypto.SecretKey);(unsafe.javax.crypto.spec.SecretKeySpec, fixed.javax.crypto.spec.SecretKeySpec);(unsafe.$StringConst6, fixed.$StringConst6);(unsafe.$StringConst7, fixed.$StringConst7);(unsafe.javax.crypto.Cipher, fixed.javax.crypto.Cipher);(unsafe.javax.crypto.NoSuchPaddingException, fixed.javax.crypto.NoSuchPaddingException);(unsafe.java.security.InvalidAlgorithmParameterException, fixed.java.security.InvalidAlgorithmParameterException);(unsafe.javax.crypto.BadPaddingException, fixed.javax.crypto.BadPaddingException);(unsafe.java.util.Base64, fixed.java.util.Base64);(unsafe.java.util.Base64$Encoder, fixed.java.util.Base64$Encoder);(unsafe.$StringConst8, fixed.$StringConst8);(unsafe.java.util.Base64$Decoder, fixed.java.util.Base64$Decoder);(unsafe.$StringConst9, fixed.$StringConst9);(unsafe.org.openmrs.api.context.Context, fixed.org.openmrs.api.context.Context);(unsafe.java.util.Dictionary, fixed.java.util.Dictionary);(unsafe.java.util.Map, fixed.java.util.Map);(unsafe.java.lang.Cloneable, fixed.java.lang.Cloneable);(unsafe.java.util.Hashtable, fixed.java.util.Hashtable);(unsafe.java.util.Properties, fixed.java.util.Properties);(unsafe.$StringConst10, fixed.$StringConst10);(unsafe.$StringConst11, fixed.$StringConst11);(unsafe.org.springframework.util.StringUtils, fixed.org.springframework.util.StringUtils);(unsafe.$StringConst12, fixed.$StringConst12);(unsafe.java.security.SecureRandom, fixed.java.security.SecureRandom);(unsafe.$StringConst13, fixed.$StringConst13);(unsafe.$StringConst14, fixed.$StringConst14);(unsafe.$StringConst15, fixed.$StringConst15);(unsafe.javax.crypto.KeyGenerator, fixed.javax.crypto.KeyGenerator);(unsafe.$StringConst16, fixed.$StringConst16);(unsafe.CC$org$_$openmrs$_$util$_$Security, fixed.CC$org$_$openmrs$_$util$_$Security);(unsafe.org.slf4j.LoggerFactory, fixed.org.slf4j.LoggerFactory);(unsafe.java.lang.reflect.AnnotatedElement, fixed.java.lang.reflect.AnnotatedElement);(unsafe.java.lang.reflect.GenericDeclaration, fixed.java.lang.reflect.GenericDeclaration);(unsafe.java.lang.reflect.Type, fixed.java.lang.reflect.Type);(unsafe.java.lang.Class, fixed.java.lang.Class);(unsafe.java.nio.charset.Charset, fixed.java.nio.charset.Charset);(unsafe.java.lang.StringBuilder, fixed.java.lang.StringBuilder);(unsafe.java.lang.String, fixed.java.lang.String);(unsafe.java.lang.Character, fixed.java.lang.Character);(unsafe.java.util.Arrays, fixed.java.util.Arrays);(unsafe.java.lang.Boolean, fixed.java.lang.Boolean);
#functions
function: (unsafe.$arrayType, fixed.$arrayType) / (t, t);($ret, $ret);
function: (unsafe.$intToReal, fixed.$intToReal) / (x, x);($ret, $ret);
function: (unsafe.$intToBool, fixed.$intToBool) / (x, x);($ret, $ret);
function: (unsafe.$refToBool, fixed.$refToBool) / (x, x);($ret, $ret);
function: (unsafe.$boolToInt, fixed.$boolToInt) / (x, x);($ret, $ret);
function: (unsafe.$cmpBool, fixed.$cmpBool) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$cmpRef, fixed.$cmpRef) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$cmpReal, fixed.$cmpReal) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$cmpInt, fixed.$cmpInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$bitOr, fixed.$bitOr) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$bitAnd, fixed.$bitAnd) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$xorInt, fixed.$xorInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$shlInt, fixed.$shlInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$ushrInt, fixed.$ushrInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$shrInt, fixed.$shrInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$mulInt, fixed.$mulInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$divInt, fixed.$divInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$modInt, fixed.$modInt) / (x, x);(y, y);($ret, $ret);
function: (unsafe.$intToRef, fixed.$intToRef) / (id, id);($ret, $ret);

#procedures
procedure: (unsafe.$new, fixed.$new) / (obj_type, obj_type);($obj, $obj);
procedure: (unsafe.java.lang.Object$java.lang.Object$clone$43, fixed.java.lang.Object$java.lang.Object$clone$43) / ($this, $this);($other, $other);
procedure: (unsafe.int$java.lang.String$compareTo$87, fixed.int$java.lang.String$compareTo$87) / ($this, $this);($other, $other);($return, $return);
procedure: (unsafe.org.openmrs.util.Security$$la$init$ra$$, fixed.org.openmrs.util.Security$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.Object$$la$init$ra$$, fixed.java.lang.Object$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$hashMatches$java.lang.String_java.lang.String, fixed.org.openmrs.util.Security$hashMatches$java.lang.String_java.lang.String) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.api.APIException$$la$init$ra$$java.lang.String_java.lang.Object$lp$$rp$, fixed.org.openmrs.api.APIException$$la$init$ra$$java.lang.String_java.lang.Object$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$encodeString$java.lang.String, fixed.org.openmrs.util.Security$encodeString$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$encodeStringSHA1$java.lang.String, fixed.org.openmrs.util.Security$encodeStringSHA1$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$incorrectlyEncodeString$java.lang.String, fixed.org.openmrs.util.Security$incorrectlyEncodeString$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$getPasswordEncodeFailMessage$java.lang.String, fixed.org.openmrs.util.Security$getPasswordEncodeFailMessage$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.security.MessageDigest$getInstance$java.lang.String, fixed.java.security.MessageDigest$getInstance$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.slf4j.Logger$error$java.lang.String_java.lang.Throwable, fixed.org.slf4j.Logger$error$java.lang.String_java.lang.Throwable) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.org.openmrs.api.APIException$$la$init$ra$$java.lang.String_java.lang.Object$lp$$rp$_java.lang.Throwable, fixed.org.openmrs.api.APIException$$la$init$ra$$java.lang.String_java.lang.Object$lp$$rp$_java.lang.Throwable) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($exception, $exception);
procedure: (unsafe.java.security.MessageDigest$digest$byte$lp$$rp$, fixed.java.security.MessageDigest$digest$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$hexString$byte$lp$$rp$, fixed.org.openmrs.util.Security$hexString$byte$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$incorrectHexString$byte$lp$$rp$, fixed.org.openmrs.util.Security$incorrectHexString$byte$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Integer$toHexString$int, fixed.java.lang.Integer$toHexString$int) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$getRandomToken$, fixed.org.openmrs.util.Security$getRandomToken$) / ($return, $return);($exception, $exception);
procedure: (unsafe.java.util.Random$$la$init$ra$$, fixed.java.util.Random$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.System$currentTimeMillis$, fixed.java.lang.System$currentTimeMillis$) / ($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Long$toString$long, fixed.java.lang.Long$toString$long) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.util.Random$nextLong$, fixed.java.util.Random$nextLong$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$encrypt$java.lang.String_byte$lp$$rp$_byte$lp$$rp$, fixed.org.openmrs.util.Security$encrypt$java.lang.String_byte$lp$$rp$_byte$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$, fixed.javax.crypto.spec.IvParameterSpec$$la$init$ra$$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String, fixed.javax.crypto.spec.SecretKeySpec$$la$init$ra$$byte$lp$$rp$_java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.javax.crypto.Cipher$getInstance$java.lang.String, fixed.javax.crypto.Cipher$getInstance$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec, fixed.javax.crypto.Cipher$init$int_java.security.Key_java.security.spec.AlgorithmParameterSpec) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($exception, $exception);
procedure: (unsafe.javax.crypto.Cipher$doFinal$byte$lp$$rp$, fixed.javax.crypto.Cipher$doFinal$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.util.Base64$getEncoder$, fixed.java.util.Base64$getEncoder$) / ($return, $return);($exception, $exception);
procedure: (unsafe.java.util.Base64$Encoder$encode$byte$lp$$rp$, fixed.java.util.Base64$Encoder$encode$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$encrypt$java.lang.String, fixed.org.openmrs.util.Security$encrypt$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$getSavedInitVector$, fixed.org.openmrs.util.Security$getSavedInitVector$) / ($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$getSavedSecretKey$, fixed.org.openmrs.util.Security$getSavedSecretKey$) / ($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$decrypt$java.lang.String_byte$lp$$rp$_byte$lp$$rp$, fixed.org.openmrs.util.Security$decrypt$java.lang.String_byte$lp$$rp$_byte$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($in_parameter__2, $in_parameter__2);($return, $return);($exception, $exception);
procedure: (unsafe.java.util.Base64$getDecoder$, fixed.java.util.Base64$getDecoder$) / ($return, $return);($exception, $exception);
procedure: (unsafe.java.util.Base64$Decoder$decode$java.lang.String, fixed.java.util.Base64$Decoder$decode$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$decrypt$java.lang.String, fixed.org.openmrs.util.Security$decrypt$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.api.context.Context$getRuntimeProperties$, fixed.org.openmrs.api.context.Context$getRuntimeProperties$) / ($return, $return);($exception, $exception);
procedure: (unsafe.java.util.Properties$getProperty$java.lang.String_java.lang.String, fixed.java.util.Properties$getProperty$java.lang.String_java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($return, $return);($exception, $exception);
procedure: (unsafe.org.springframework.util.StringUtils$hasText$java.lang.String, fixed.org.springframework.util.StringUtils$hasText$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$generateNewInitVector$, fixed.org.openmrs.util.Security$generateNewInitVector$) / ($return, $return);($exception, $exception);
procedure: (unsafe.java.security.SecureRandom$$la$init$ra$$, fixed.java.security.SecureRandom$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$, fixed.java.security.SecureRandom$nextBytes$byte$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$generateNewSecretKey$, fixed.org.openmrs.util.Security$generateNewSecretKey$) / ($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.KeyGenerator$getInstance$java.lang.String, fixed.javax.crypto.KeyGenerator$getInstance$java.lang.String) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.javax.crypto.KeyGenerator$init$int, fixed.javax.crypto.KeyGenerator$init$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.javax.crypto.KeyGenerator$generateKey$, fixed.javax.crypto.KeyGenerator$generateKey$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.security.Key$getEncoded$, fixed.java.security.Key$getEncoded$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.org.openmrs.util.Security$$la$clinit$ra$$, fixed.org.openmrs.util.Security$$la$clinit$ra$$) / ($exception, $exception);
procedure: (unsafe.org.slf4j.LoggerFactory$getLogger$java.lang.Class, fixed.org.slf4j.LoggerFactory$getLogger$java.lang.Class) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.nio.charset.Charset$$la$init$ra$$, fixed.java.nio.charset.Charset$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$$la$init$ra$$, fixed.java.lang.StringBuilder$$la$init$ra$$) / ($this, $this);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$append$java.lang.String, fixed.java.lang.StringBuilder$append$java.lang.String) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$append$char, fixed.java.lang.StringBuilder$append$char) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$, fixed.java.lang.String$$la$init$ra$$char$lp$$rp$) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$append$java.lang.Object, fixed.java.lang.StringBuilder$append$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Character$charValue$, fixed.java.lang.Character$charValue$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$toString$, fixed.java.lang.StringBuilder$toString$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.StringBuilder$toCharArray$, fixed.java.lang.StringBuilder$toCharArray$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$_java.nio.charset.Charset, fixed.java.lang.String$$la$init$ra$$byte$lp$$rp$_java.nio.charset.Charset) / ($this, $this);($in_parameter__0, $in_parameter__0);($in_parameter__1, $in_parameter__1);($exception, $exception);
procedure: (unsafe.java.lang.String$$la$init$ra$$java.lang.StringBuilder, fixed.java.lang.String$$la$init$ra$$java.lang.StringBuilder) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.String$charAt$int, fixed.java.lang.String$charAt$int) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$getBytes$, fixed.java.lang.String$getBytes$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$getBytes$java.nio.charset.Charset, fixed.java.lang.String$getBytes$java.nio.charset.Charset) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$toCharArray$, fixed.java.lang.String$toCharArray$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$toCharArray$java.nio.charset.Charset, fixed.java.lang.String$toCharArray$java.nio.charset.Charset) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$hashCode$, fixed.java.lang.String$hashCode$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.util.Arrays$hashCode$char$lp$$rp$, fixed.java.util.Arrays$hashCode$char$lp$$rp$) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.String$equals$java.lang.Object, fixed.java.lang.String$equals$java.lang.Object) / ($this, $this);($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Object$getClass$, fixed.java.lang.Object$getClass$) / ($this, $this);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$$la$init$ra$$boolean, fixed.java.lang.Boolean$$la$init$ra$$boolean) / ($this, $this);($in_parameter__0, $in_parameter__0);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$valueOf$boolean, fixed.java.lang.Boolean$valueOf$boolean) / ($in_parameter__0, $in_parameter__0);($return, $return);($exception, $exception);
procedure: (unsafe.java.lang.Boolean$booleanValue$, fixed.java.lang.Boolean$booleanValue$) / ($this, $this);($return, $return);($exception, $exception);


