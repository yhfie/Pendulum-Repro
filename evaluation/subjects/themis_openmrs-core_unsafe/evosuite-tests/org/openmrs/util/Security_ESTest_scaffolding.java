/**
 * Scaffolding file used to store all the setups needed to run 
 * tests automatically generated by EvoSuite
 * Fri Apr 08 08:14:10 GMT 2022
 */

package org.openmrs.util;

import org.evosuite.runtime.annotation.EvoSuiteClassExclude;
import org.junit.BeforeClass;
import org.junit.Before;
import org.junit.After;
import org.junit.AfterClass;
import org.evosuite.runtime.sandbox.Sandbox;
import org.evosuite.runtime.sandbox.Sandbox.SandboxMode;

@EvoSuiteClassExclude
public class Security_ESTest_scaffolding {

  @org.junit.Rule
  public org.evosuite.runtime.vnet.NonFunctionalRequirementRule nfr = new org.evosuite.runtime.vnet.NonFunctionalRequirementRule();

  private static final java.util.Properties defaultProperties = (java.util.Properties) java.lang.System.getProperties().clone(); 

  private org.evosuite.runtime.thread.ThreadStopper threadStopper =  new org.evosuite.runtime.thread.ThreadStopper (org.evosuite.runtime.thread.KillSwitchHandler.getInstance(), 3000);


  @BeforeClass
  public static void initEvoSuiteFramework() { 
    org.evosuite.runtime.RuntimeSettings.className = "org.openmrs.util.Security"; 
    org.evosuite.runtime.GuiSupport.initialize(); 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfThreads = 100; 
    org.evosuite.runtime.RuntimeSettings.maxNumberOfIterationsPerLoop = 10000; 
    org.evosuite.runtime.RuntimeSettings.mockSystemIn = true; 
    org.evosuite.runtime.RuntimeSettings.sandboxMode = org.evosuite.runtime.sandbox.Sandbox.SandboxMode.RECOMMENDED; 
    org.evosuite.runtime.sandbox.Sandbox.initializeSecurityManagerForSUT(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.init();
    setSystemProperties();
    initializeClasses();
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
  } 

  @AfterClass
  public static void clearEvoSuiteFramework(){ 
    Sandbox.resetDefaultSecurityManager(); 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
  } 

  @Before
  public void initTestCase(){ 
    threadStopper.storeCurrentThreads();
    threadStopper.startRecordingTime();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().initHandler(); 
    org.evosuite.runtime.sandbox.Sandbox.goingToExecuteSUTCode(); 
    setSystemProperties(); 
    org.evosuite.runtime.GuiSupport.setHeadless(); 
    org.evosuite.runtime.Runtime.getInstance().resetRuntime(); 
    org.evosuite.runtime.agent.InstrumentingAgent.activate(); 
  } 

  @After
  public void doneWithTestCase(){ 
    threadStopper.killAndJoinClientThreads();
    org.evosuite.runtime.jvm.ShutdownHookHandler.getInstance().safeExecuteAddedHooks(); 
    org.evosuite.runtime.classhandling.JDKClassResetter.reset(); 
    resetClasses(); 
    org.evosuite.runtime.sandbox.Sandbox.doneWithExecutingSUTCode(); 
    org.evosuite.runtime.agent.InstrumentingAgent.deactivate(); 
    org.evosuite.runtime.GuiSupport.restoreHeadlessMode(); 
  } 

  public static void setSystemProperties() {
 
    java.lang.System.setProperties((java.util.Properties) defaultProperties.clone()); 
    java.lang.System.setProperty("user.dir", "/Users/yannic/repositories/sc-fix/evaluation/subjects/themis_openmrs-core_unsafe"); 
    java.lang.System.setProperty("java.io.tmpdir", "/var/folders/t8/gq90rs1j4hd4n01f9rvyjqv80000gn/T/"); 
  }

  private static void initializeClasses() {
    org.evosuite.runtime.classhandling.ClassStateSupport.initializeClasses(Security_ESTest_scaffolding.class.getClassLoader() ,
      "org.openmrs.Retireable",
      "org.openmrs.api.ProviderService",
      "org.openmrs.util.Security",
      "org.openmrs.Attributable",
      "org.openmrs.OpenmrsObject",
      "org.openmrs.notification.MessagePreparator",
      "org.openmrs.module.ModuleException",
      "org.openmrs.api.LocationService",
      "org.openmrs.Changeable",
      "org.openmrs.api.VisitService",
      "org.openmrs.util.DatabaseUpdateException",
      "org.openmrs.api.ConceptService",
      "org.openmrs.api.context.ContextAuthenticationException",
      "org.springframework.core.NestedRuntimeException",
      "org.openmrs.api.context.ServiceContext$ServiceContextHolder",
      "org.openmrs.api.OpenmrsService",
      "org.openmrs.notification.MessageSender",
      "org.openmrs.module.ModuleClassLoader",
      "org.openmrs.scheduler.SchedulerException",
      "org.openmrs.module.ModuleFactory",
      "org.openmrs.api.DiagnosisService",
      "org.openmrs.logic.LogicService",
      "org.openmrs.api.context.Context$1",
      "org.openmrs.util.OpenmrsClassLoader",
      "org.openmrs.util.InputRequiredException",
      "org.openmrs.api.PatientService",
      "org.springframework.context.ApplicationContextAware",
      "org.openmrs.api.EncounterService",
      "org.openmrs.messagesource.MessageSourceService",
      "org.openmrs.notification.AlertService",
      "org.openmrs.Creatable",
      "org.openmrs.notification.MessageService",
      "org.openmrs.messagesource.MutableMessageSource",
      "org.openmrs.api.APIException",
      "org.openmrs.Auditable",
      "org.openmrs.messagesource.impl.DefaultMessageSourceServiceImpl$DefaultMessageSourceServiceImplHolder",
      "org.springframework.beans.factory.Aware",
      "org.openmrs.api.ProgramWorkflowService",
      "org.openmrs.util.OpenmrsClassLoader$OpenmrsURLConnection",
      "org.openmrs.module.ModuleMustStartException",
      "org.openmrs.BaseOpenmrsMetadata",
      "org.openmrs.module.OpenmrsCoreModuleException",
      "org.openmrs.OpenmrsMetadata",
      "org.openmrs.api.PersonService",
      "org.openmrs.util.LocaleUtility",
      "org.openmrs.api.FormService",
      "org.openmrs.api.context.ServiceContext",
      "org.openmrs.api.ObsService",
      "org.aopalliance.aop.Advice",
      "org.openmrs.hl7.HL7Service",
      "org.openmrs.module.MandatoryModuleException",
      "org.springframework.aop.Advisor",
      "org.springframework.context.MessageSource",
      "org.openmrs.api.OrderService",
      "org.openmrs.api.context.UserContext",
      "org.openmrs.notification.MessageException",
      "org.openmrs.api.SerializationService",
      "org.springframework.beans.BeansException",
      "org.openmrs.api.GlobalPropertyListener",
      "org.openmrs.BaseChangeableOpenmrsMetadata",
      "org.openmrs.api.CohortService",
      "org.openmrs.util.CycleException",
      "org.openmrs.util.OpenmrsClassLoader$OpenmrsClassLoaderHolder",
      "org.openmrs.scheduler.SchedulerService",
      "org.openmrs.BaseOpenmrsObject",
      "org.openmrs.api.UserService",
      "org.openmrs.api.DatatypeService",
      "org.openmrs.User",
      "org.openmrs.api.OrderSetService",
      "org.openmrs.api.ConditionService",
      "org.springframework.context.HierarchicalMessageSource",
      "org.openmrs.api.AdministrationService",
      "org.openmrs.messagesource.impl.DefaultMessageSourceServiceImpl",
      "org.openmrs.api.db.ContextDAO",
      "org.openmrs.api.context.Context",
      "org.springframework.util.StringUtils"
    );
  } 

  private static void resetClasses() {
    org.evosuite.runtime.classhandling.ClassResetter.getInstance().setClassLoader(Security_ESTest_scaffolding.class.getClassLoader()); 

    org.evosuite.runtime.classhandling.ClassStateSupport.resetClasses(
      "org.openmrs.util.Security",
      "org.openmrs.api.context.Context",
      "org.springframework.util.StringUtils",
      "org.openmrs.api.APIException",
      "org.openmrs.api.context.ServiceContext",
      "org.openmrs.api.context.ServiceContext$ServiceContextHolder",
      "org.openmrs.messagesource.impl.DefaultMessageSourceServiceImpl",
      "org.openmrs.messagesource.impl.DefaultMessageSourceServiceImpl$DefaultMessageSourceServiceImplHolder",
      "org.openmrs.util.OpenmrsClassLoader",
      "org.openmrs.util.OpenmrsClassLoader$OpenmrsClassLoaderHolder",
      "org.openmrs.util.OpenmrsClassLoader$OpenmrsURLConnection",
      "org.openmrs.module.ModuleFactory",
      "org.openmrs.util.LocaleUtility"
    );
  }
}
