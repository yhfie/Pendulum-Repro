var unsafe.$heap: $heap_type;

var unsafe.$intArrayType: javaType;

var unsafe.$charArrayType: javaType;

var unsafe.$boolArrayType: javaType;

var unsafe.$byteArrayType: javaType;

var unsafe.$longArrayType: javaType;

var unsafe.$arrSizeHeap: [ref]int;

var unsafe.$stringSizeHeap: [ref]int;

var unsafe.$boolArrHeap: boolArrHeap_type;

var unsafe.$refArrHeap: refArrHeap_type;

var unsafe.$realArrHeap: realArrHeap_type;

var unsafe.$intArrHeap: intArrHeap_type;

var unsafe.$objIndex: int;

var unsafe.java.security.MessageDigest$OSecurityManager$md266: Field ref;

var unsafe.OSecurityManager$OSecurityManager$instance265: ref;

var unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration$com.orientechnologies.orient.core.config.OGlobalConfiguration$SECURITY_USER_PASSWORD_SALT_ITERATIONS367: ref;

var unsafe.java.util.Map$OSecurityManager$SALT_CACHE267: ref;

var unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration$com.orientechnologies.orient.core.config.OGlobalConfiguration$SECURITY_USER_PASSWORD_SALT_CACHE_SIZE368: ref;

var unsafe.boolean$java.lang.Boolean$value0: Field int;

const unique unsafe.$type: Field javaType;

const unique unsafe.$alloc: Field bool;

const unique unsafe.$null: ref;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.Object: javaType extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.OSecurityManager: javaType extends unique unsafe.java.lang.Object complete;

const unique unsafe.$StringConst0: ref extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.security.MessageDigestSpi: javaType extends unique unsafe.java.lang.Object complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.security.MessageDigest: javaType extends unique unsafe.java.security.MessageDigestSpi complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.io.Serializable: javaType extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.Comparable: javaType extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.CharSequence: javaType extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.String: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Serializable, unsafe.java.lang.Comparable, unsafe.java.lang.CharSequence complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.Throwable: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Serializable complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.Exception: javaType extends unique unsafe.java.lang.Throwable complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.security.GeneralSecurityException: javaType extends unique unsafe.java.lang.Exception complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.security.NoSuchAlgorithmException: javaType extends unique unsafe.java.security.GeneralSecurityException complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.com.orientechnologies.common.log.OLogManager: javaType extends complete;

const unique unsafe.$StringConst1: ref extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.RuntimeException: javaType extends unique unsafe.java.lang.Exception complete;

const unique unsafe.$StringConst2: ref extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.io.IOException: javaType extends unique unsafe.java.lang.Exception complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.io.UnsupportedEncodingException: javaType extends unique unsafe.java.io.IOException complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.NullPointerException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.IndexOutOfBoundsException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.ArrayIndexOutOfBoundsException: javaType extends unique unsafe.java.lang.IndexOutOfBoundsException complete;

const unique unsafe.$StringConst3: ref extends complete;

const unique unsafe.$StringConst4: ref extends complete;

const unique unsafe.$StringConst5: ref extends complete;

const unique unsafe.$StringConst6: ref extends complete;

const unique unsafe.$StringConst7: ref extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.IllegalArgumentException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const unique unsafe.$StringConst8: ref extends complete;

const unique unsafe.$StringConst9: ref extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.Appendable: javaType extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.AbstractStringBuilder: javaType extends unique unsafe.java.lang.Object, unsafe.java.lang.Appendable, unsafe.java.lang.CharSequence complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.StringBuilder: javaType extends unique unsafe.java.lang.AbstractStringBuilder, unsafe.java.io.Serializable, unsafe.java.lang.CharSequence complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration: javaType extends complete;

const unique unsafe.$StringConst10: ref extends complete;

const unique unsafe.$StringConst11: ref extends complete;

const unique unsafe.$StringConst12: ref extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.com.orientechnologies.orient.core.exception.OConfigurationException: javaType extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.com.orientechnologies.common.exception.OException: javaType extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.ClassCastException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.util.Random: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Serializable complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.security.SecureRandom: javaType extends unique unsafe.java.util.Random complete;

const unique unsafe.$StringConst13: ref extends complete;

const unique unsafe.$StringConst14: ref extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.Number: javaType extends unique unsafe.java.lang.Object, unsafe.java.io.Serializable complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.Integer: javaType extends unique unsafe.java.lang.Number, unsafe.java.lang.Comparable complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.NumberFormatException: javaType extends unique unsafe.java.lang.IllegalArgumentException complete;

const unique unsafe.$StringConst15: ref extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.util.Arrays: javaType extends unique unsafe.java.lang.Object complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.util.Map: javaType extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.security.spec.KeySpec: javaType extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.javax.crypto.spec.PBEKeySpec: javaType extends unique unsafe.java.lang.Object, unsafe.java.security.spec.KeySpec complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.javax.crypto.SecretKeyFactory: javaType extends unique unsafe.java.lang.Object complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.security.Key: javaType extends unsafe.java.io.Serializable complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.javax.security.auth.Destroyable: javaType extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.javax.crypto.SecretKey: javaType extends unsafe.java.security.Key, unsafe.javax.security.auth.Destroyable complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.security.spec.InvalidKeySpecException: javaType extends unique unsafe.java.security.GeneralSecurityException complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.com.orientechnologies.orient.core.exception.OSecurityException: javaType extends complete;

const unique unsafe.$StringConst16: ref extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.lang.ArithmeticException: javaType extends unique unsafe.java.lang.RuntimeException complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.com.orientechnologies.common.collection.OLRUCache: javaType extends complete;

const {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unique unsafe.java.util.Collections: javaType extends unique unsafe.java.lang.Object complete;

const {:sourceloc "Boolean.java", -1, -1, -1, -1} unique unsafe.java.lang.Boolean: javaType extends unique unsafe.java.lang.Object complete;

function unsafe.$arrayType(t: javaType) : javaType;

function unsafe.$intToReal(x: int) : real;

function unsafe.$intToBool(x: int) : bool;

function unsafe.$refToBool(x: ref) : bool;

function unsafe.$boolToInt(x: bool) : int;

function unsafe.$cmpBool(x: bool, y: bool) : int;

function unsafe.$cmpRef(x: ref, y: ref) : int;

function unsafe.$cmpReal(x: real, y: real) : int;

function unsafe.$cmpInt(x: int, y: int) : int;

function unsafe.$bitOr(x: int, y: int) : int;

function unsafe.$bitAnd(x: int, y: int) : int;

function unsafe.$xorInt(x: int, y: int) : int;

function unsafe.$shlInt(x: int, y: int) : int;

function unsafe.$ushrInt(x: int, y: int) : int;

function unsafe.$shrInt(x: int, y: int) : int;

function unsafe.$mulInt(x: int, y: int) : int;

function unsafe.$divInt(x: int, y: int) : int;

function unsafe.$modInt(x: int, y: int) : int;

function unsafe.$intToRef(id: int) : ref;

axiom (forall x: int :: 
  { unsafe.$intToBool(x): bool } 
  unsafe.$intToBool(x): bool <==> (if x == 0 then false else true));

axiom (forall x: ref :: 
  { unsafe.$refToBool(x): bool } 
  unsafe.$refToBool(x): bool <==> (if x == unsafe.$null then false else true));

axiom (forall x: bool :: 
  { unsafe.$boolToInt(x): int } 
  unsafe.$boolToInt(x): int == (if x <==> true then 1 else 0));

axiom (forall x: real, y: real :: 
  { unsafe.$cmpReal(x, y): int } 
  unsafe.$cmpReal(x, y): int == (if x > y then 1 else (if x < y then -1 else 0)));

axiom (forall x: int, y: int :: 
  { unsafe.$cmpInt(x, y): int } 
  unsafe.$cmpInt(x, y): int == (if x > y then 1 else (if x < y then -1 else 0)));

axiom (forall index: int :: unsafe.$intToRef(index) != unsafe.$null);

axiom (forall i1: int, i2: int :: 
  i1 == i2 <==> unsafe.$intToRef(i1) == unsafe.$intToRef(i2));

procedure {:prefix "unsafe"} unsafe.$new(obj_type: javaType) returns ($obj: ref);
  modifies unsafe.$objIndex, unsafe.$heap;
  free ensures $obj != unsafe.$null;
  free ensures !old(unsafe.$heap[$obj, unsafe.$alloc]);
  free ensures $obj == unsafe.$intToRef(old(unsafe.$objIndex));
  free ensures unsafe.$objIndex == old(unsafe.$objIndex) + 1;
  free ensures unsafe.$heap
   == old(unsafe.$heap)[$obj, unsafe.$alloc := true][$obj, unsafe.$type := obj_type];



procedure {:prefix "unsafe"} unsafe.java.lang.Object$java.lang.Object$clone$43($this: ref) returns ($other: ref);
  free ensures unsafe.$heap[$other, unsafe.$type] == unsafe.$heap[$this, unsafe.$type];
  free ensures unsafe.$heap[$other, unsafe.$alloc] <==> true;
  free ensures $other != unsafe.$null;



procedure {:prefix "unsafe"} unsafe.int$java.lang.String$compareTo$87($this: ref, $other: ref) returns ($return: int);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$$la$init$ra$$($this: ref) returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Object$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.security.MessageDigest$getInstance$java.lang.String($in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.com.orientechnologies.common.log.OLogManager$instance$() returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: ref, 
    $in_parameter__2: ref, 
    $in_parameter__3: ref)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$createHash$java.lang.String_java.lang.String($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap, unsafe.$intArrHeap, unsafe.$stringSizeHeap;



procedure {:prefix "unsafe"} unsafe.java.lang.String$getBytes$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.security.MessageDigest$digest$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$byteArrayToHexStr$byte$lp$$rp$($in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$intArrHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.OSecurityManager$instance$() returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.OSecurityManager$equals_inline$java.lang.String_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.String$toCharArray$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$checkPassword_unsafe$java.lang.String_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap, unsafe.$intArrHeap, unsafe.$stringSizeHeap;



procedure {:prefix "unsafe"} unsafe.java.lang.String$startsWith$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.String$substring$int($this: ref, $in_parameter__0: int) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$createSHA256$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap, unsafe.$intArrHeap;



procedure {:prefix "unsafe"} unsafe.java.lang.String$equals$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: ref)
   returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$intArrHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.OSecurityManager$digestSHA256$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.OSecurityManager$createHash$java.lang.String_java.lang.String_boolean($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: int)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap, unsafe.$intArrHeap, unsafe.$stringSizeHeap;



procedure {:prefix "unsafe"} unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$$la$init$ra$$int($this: ref, $in_parameter__0: int) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$append$char($this: ref, $in_parameter__0: int) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$append$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.String$equalsIgnoreCase$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration$getValueAsInteger$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: int, $in_parameter__2: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap, unsafe.$intArrHeap;



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$toString$($this: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$createHashWithSalt$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap, unsafe.$intArrHeap;



procedure {:prefix "unsafe"} unsafe.java.security.SecureRandom$$la$init$ra$$($this: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: ref, 
    $in_parameter__2: int, 
    $in_parameter__3: int, 
    $in_parameter__4: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$heap, unsafe.$intArrHeap;



procedure {:prefix "unsafe"} unsafe.java.lang.StringBuilder$append$int($this: ref, $in_parameter__0: int) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$intArrHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.String$split$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$hexToByteArray$java.lang.String($in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$arrSizeHeap, unsafe.$intArrHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Integer$parseInt$java.lang.String($in_parameter__0: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.security.MessageDigest$isEqual$byte$lp$$rp$_byte$lp$$rp$($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.util.Arrays$toString$byte$lp$$rp$($in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.util.Map$get$java.lang.Object($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.javax.crypto.spec.PBEKeySpec$$la$init$ra$$char$lp$$rp$_byte$lp$$rp$_int_int($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: ref, 
    $in_parameter__2: int, 
    $in_parameter__3: int)
   returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.SecretKeyFactory$getInstance$java.lang.String($in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.javax.crypto.SecretKeyFactory$generateSecret$java.security.spec.KeySpec($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.security.Key$getEncoded$($this: ref) returns ($return: ref, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.util.Map$put$java.lang.Object_java.lang.Object($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.com.orientechnologies.orient.core.exception.OSecurityException$$la$init$ra$$java.lang.String($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$($this: ref, $in_parameter__0: ref) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.String$substring$int_int($this: ref, $in_parameter__0: int, $in_parameter__1: int)
   returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.Integer$parseInt$java.lang.String_int($in_parameter__0: ref, $in_parameter__1: int)
   returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$$la$clinit$ra$$() returns ($exception: ref);
  modifies unsafe.$objIndex, unsafe.java.util.Map$OSecurityManager$SALT_CACHE267, unsafe.OSecurityManager$OSecurityManager$instance265, unsafe.$arrSizeHeap, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.com.orientechnologies.common.collection.OLRUCache$$la$init$ra$$int($this: ref, $in_parameter__0: int) returns ($exception: ref);



procedure {:prefix "unsafe"} unsafe.java.util.Collections$synchronizedMap$java.util.Map($in_parameter__0: ref) returns ($return: ref, $exception: ref);



procedure {:prefix "unsafe"} unsafe.java.lang.Boolean$$la$init$ra$$boolean($this: ref, $in_parameter__0: int) returns ($exception: ref);
  modifies unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Boolean$valueOf$boolean($in_parameter__0: int) returns ($return: ref, $exception: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.java.lang.Boolean$booleanValue$($this: ref) returns ($return: int, $exception: ref);



procedure {:prefix "unsafe"} unsafe.OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13(in_$return: int, 
    in_$exception: ref, 
    in_$fakelocal_4: ref, 
    in_$fakelocal_2: ref, 
    in_$b5: int, 
    in_$i2: int, 
    in_$b4: int, 
    in_i7: int, 
    in_b6: int, 
    in_r1: ref, 
    in_$b3: int, 
    in_r0: ref, 
    in_$fakelocal_3: ref)
   returns (out_$return: int, 
    out_$exception: ref, 
    out_$fakelocal_4: ref, 
    out_$fakelocal_2: ref, 
    out_$b5: int, 
    out_$i2: int, 
    out_$b4: int, 
    out_i7: int, 
    out_b6: int, 
    out_$b3: int, 
    out_$fakelocal_3: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19(in_$return: int, 
    in_$exception: ref, 
    in_$c3: int, 
    in_$c2: int, 
    in_r3: ref, 
    in_r4: ref, 
    in_i4: int, 
    in_$fakelocal_0: ref, 
    in_i5: int, 
    in_$i1: int, 
    in_$fakelocal_1: ref)
   returns (out_$return: int, 
    out_$exception: ref, 
    out_$c3: int, 
    out_$c2: int, 
    out_i4: int, 
    out_$fakelocal_0: ref, 
    out_i5: int, 
    out_$i1: int, 
    out_$fakelocal_1: ref);
  modifies unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51(in_$return: ref, 
    in_$exception: ref, 
    in_$i7: int, 
    in_$fakelocal_5: ref, 
    in_$i11: int, 
    in_$c12: int, 
    in_$s6: int, 
    in_r0: ref, 
    in_$fakelocal_4: ref, 
    in_$i9: int, 
    in_b0: int, 
    in_r1: ref, 
    in_$i10: int, 
    in_i14: int, 
    in_s1: int, 
    in_$i16: int, 
    in_b2: int, 
    in_$c8: int, 
    in_$fakelocal_2: ref, 
    in_$fakelocal_3: ref, 
    in_$i15: int, 
    in_$i5: int, 
    in_$i13: int)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_$i7: int, 
    out_$fakelocal_5: ref, 
    out_$i11: int, 
    out_$c12: int, 
    out_$s6: int, 
    out_$fakelocal_4: ref, 
    out_$i9: int, 
    out_b0: int, 
    out_$i10: int, 
    out_i14: int, 
    out_s1: int, 
    out_$i16: int, 
    out_b2: int, 
    out_$c8: int, 
    out_$fakelocal_2: ref, 
    out_$fakelocal_3: ref, 
    out_$i15: int, 
    out_$i5: int, 
    out_$i13: int);
  modifies unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap;



procedure {:prefix "unsafe"} unsafe.OSecurityManager$hexToByteArray$java.lang.String_loop_block58(in_$return: ref, 
    in_$exception: ref, 
    in_r1: ref, 
    in_$i2: int, 
    in_$fakelocal_2: ref, 
    in_$fakelocal_3: ref, 
    in_i8: int, 
    in_$i3: int, 
    in_r0: ref, 
    in_$i4: int, 
    in_$i5: int, 
    in_$i6: int, 
    in_$r2: ref, 
    in_$b7: int)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_$i2: int, 
    out_$fakelocal_2: ref, 
    out_$fakelocal_3: ref, 
    out_i8: int, 
    out_$i3: int, 
    out_$i4: int, 
    out_$i5: int, 
    out_$i6: int, 
    out_$r2: ref, 
    out_$b7: int);
  modifies unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap;



implementation unsafe.OSecurityManager$$la$init$ra$$($this: ref) returns ($exception: ref)
{
  var $r5: ref;
  var $r2: ref;
  var $fakelocal_1: ref;
  var r1: ref;
  var $r3: ref;
  var $fakelocal_0: ref;
  var r0: ref;
  var $r4: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "OSecurityManager.java", 65, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    $exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto anon0$1;

  anon0$1:
    goto block1;

  block1:
    assert {:sourceloc "OSecurityManager.java", 67, -1, -1, -1} true;
    call $r2, $exception := unsafe.java.security.MessageDigest$getInstance$java.lang.String(unsafe.$StringConst0);
    goto anon8_Then, anon8_Else;

  anon8_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon4;

  anon4:
    assert {:sourceloc "OSecurityManager.java", 67, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.java.security.MessageDigest$OSecurityManager$md266 := $r2];
    goto block3;

  block3:
    assert {:sourceloc "OSecurityManager.java", 70, -1, -1, -1} true;
    goto block4;

  block4:
    assert {:sourceloc "OSecurityManager.java", 71, -1, -1, -1} true;
    goto block5;

  block5:
    return;

  anon8_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon9_Then, anon9_Else;

  anon9_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon4;

  anon9_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    goto block2;

  block2:
    assert {:sourceloc "OSecurityManager.java", 71, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r3 := $exception;
    assert {:sourceloc "OSecurityManager.java", 68, -1, -1, -1} true;
    r1 := $r3;
    assert {:sourceloc "OSecurityManager.java", 69, -1, -1, -1} true;
    call $r4, $exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 69, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[$fakelocal_0 := 0];
    $r5 := $fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 69, -1, -1, -1} true;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} $r4 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_1;
    return;

  anon10_Then:
    assume {:partition} $r4 != unsafe.$null;
    $exception := $exception;
    goto anon7;

  anon7:
    call $exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$($r4, r0, unsafe.$StringConst1, r1, $r5);
    goto block4;
}



implementation unsafe.OSecurityManager$createHash$java.lang.String_java.lang.String($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: ref, $exception: ref)
{
  var $r4: ref;
  var r1: ref;
  var r5: ref;
  var $r2: ref;
  var $r3: ref;
  var $fakelocal_1: ref;
  var $fakelocal_2: ref;
  var r0: ref;
  var $fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r5 := $in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", 75, -1, -1, -1} true;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} r5 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 75, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "OSecurityManager.java", 76, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[$fakelocal_0 := 7];
    r5 := $fakelocal_0;
    goto block6;

  block6:
    assert {:sourceloc "OSecurityManager.java", 78, -1, -1, -1} true;
    call r1, $exception := unsafe.java.security.MessageDigest$getInstance$java.lang.String(r5);
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon7;

  anon7:
    assert {:sourceloc "OSecurityManager.java", 80, -1, -1, -1} true;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} r0 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_1;
    return;

  anon21_Then:
    assume {:partition} r0 != unsafe.$null;
    $exception := $exception;
    goto anon10;

  anon10:
    call $r2, $exception := unsafe.java.lang.String$getBytes$java.lang.String(r0, unsafe.$StringConst2);
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon14;

  anon14:
    assert {:sourceloc "OSecurityManager.java", 80, -1, -1, -1} true;
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon24_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon17;

  anon17:
    call $r3, $exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(r1, $r2);
    assert {:sourceloc "OSecurityManager.java", 80, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0 := $r3;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return:
    $r4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    $exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto anon17$1;

  anon17$1:
    assert {:sourceloc "OSecurityManager.java", 80, -1, -1, -1} true;
    $return := $r4;
    goto block7;

  block7:
    return;

  anon22_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto anon14;

  anon23_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    $return := unsafe.$null;
    return;

  anon19_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon7;

  anon20_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    $return := unsafe.$null;
    return;

  anon18_Then:
    assume {:partition} r5 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 75, -1, -1, -1} {:comment "thenblock"} true;
    goto block6;
}



implementation unsafe.OSecurityManager$instance$() returns ($return: ref, $exception: ref)
{
  var $r0: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.OSecurityManager;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 84, -1, -1, -1} true;
    $r0 := unsafe.OSecurityManager$OSecurityManager$instance265;
    assert {:sourceloc "OSecurityManager.java", 84, -1, -1, -1} true;
    $return := $r0;
    goto block8;

  block8:
    return;
}



implementation unsafe.OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$($in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref)
{
  var $fakelocal_4: ref;
  var $fakelocal_2: ref;
  var $b5: int;
  var $i2: int;
  var $i0: int;
  var $b4: int;
  var i7: int;
  var b6: int;
  var $fakelocal_0: ref;
  var $fakelocal_1: ref;
  var r1: ref;
  var $b3: int;
  var r0: ref;
  var $fakelocal_3: ref;
  var $z0: int;
  var $i1: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r1: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", 97, -1, -1, -1} true;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} r0 == r1;
    assert {:sourceloc "OSecurityManager.java", 97, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "OSecurityManager.java", 99, -1, -1, -1} true;
    $return := 1;
    goto block17;

  block17:
    return;

  anon33_Then:
    assume {:partition} r0 != r1;
    assert {:sourceloc "OSecurityManager.java", 97, -1, -1, -1} {:comment "thenblock"} true;
    goto block9;

  block9:
    assert {:sourceloc "OSecurityManager.java", 98, -1, -1, -1} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 98, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  anon6:
    assert {:sourceloc "OSecurityManager.java", 99, -1, -1, -1} true;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 99, -1, -1, -1} {:comment "elseblock"} true;
    goto block10;

  block10:
    assert {:sourceloc "OSecurityManager.java", 99, -1, -1, -1} true;
    $return := 0;
    goto block17;

  anon35_Then:
    assume {:partition} r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 99, -1, -1, -1} {:comment "thenblock"} true;
    goto block11;

  block11:
    assert {:sourceloc "OSecurityManager.java", 101, -1, -1, -1} true;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} r0 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon36_Then:
    assume {:partition} r0 != unsafe.$null;
    $exception := $exception;
    goto anon11;

  anon11:
    $i1 := unsafe.$arrSizeHeap[r0];
    assert {:sourceloc "OSecurityManager.java", 101, -1, -1, -1} true;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := 0;
    $exception := $fakelocal_1;
    return;

  anon37_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon14;

  anon14:
    $i0 := unsafe.$arrSizeHeap[r1];
    assert {:sourceloc "OSecurityManager.java", 101, -1, -1, -1} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} $i1 != $i0;
    assert {:sourceloc "OSecurityManager.java", 101, -1, -1, -1} {:comment "elseblock"} true;
    goto anon17;

  anon17:
    assert {:sourceloc "OSecurityManager.java", 102, -1, -1, -1} true;
    $return := 0;
    goto block17;

  anon38_Then:
    assume {:partition} $i1 == $i0;
    assert {:sourceloc "OSecurityManager.java", 101, -1, -1, -1} {:comment "thenblock"} true;
    goto block12;

  block12:
    assert {:sourceloc "OSecurityManager.java", 105, -1, -1, -1} true;
    b6 := 0;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    i7 := 0;
    goto block13;

  block13:
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Entry;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Entry:
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return := $return;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception := $exception;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4 := $fakelocal_4;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2 := $fakelocal_2;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5 := $b5;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2 := $i2;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4 := $b4;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7 := i7;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6 := b6;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r1 := r1;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3 := $b3;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0 := r0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3 := $fakelocal_3;
    havoc inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$entry;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$entry:
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$block13;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$block13:
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon39_Then, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon39_Else;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon39_Else:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return := 0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon29:
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3 := unsafe.$intArrHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r1][inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7];
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5 := unsafe.$xorInt(inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, 
  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3);
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6 := unsafe.$bitOr(inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, 
  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5);
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
   + 1;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon29_dummy;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon42_Then:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     < unsafe.$arrSizeHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r1]
   && inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     >= 0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon29;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon26:
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4 := unsafe.$intArrHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0][inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7];
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon42_Then, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon42_Else;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon42_Else:
    assume {:partition} !(inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     < unsafe.$arrSizeHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r1]
   && inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     >= 0);
    call inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return := 0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon41_Then:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     < unsafe.$arrSizeHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0]
   && inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     >= 0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon26;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon23:
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon41_Then, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon41_Else;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon41_Else:
    assume {:partition} !(inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     < unsafe.$arrSizeHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0]
   && inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     >= 0);
    call inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return := 0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon40_Else:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2
   > inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon23;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon20:
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon40_Then, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon40_Else;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon40_Then:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
   >= inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon39_Then:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon20;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon29_dummy:
    assume false;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$exit:
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return:
    $return := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return;
    $exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception;
    $fakelocal_4 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4;
    $fakelocal_2 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2;
    $b5 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5;
    $i2 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2;
    $b4 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4;
    i7 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7;
    b6 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6;
    $b3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3;
    $fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3;
    goto block13$1;

  block13$1:
    goto block13_last;

  anon39_Else:
    assume {:partition} r0 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := 0;
    $exception := $fakelocal_2;
    return;

  anon39_Then:
    assume {:partition} r0 != unsafe.$null;
    $exception := $exception;
    goto anon20;

  anon20:
    $i2 := unsafe.$arrSizeHeap[r0];
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} $i2 > i7;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} {:comment "elseblock"} true;
    goto anon23;

  anon23:
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} !(i7 < unsafe.$arrSizeHeap[r0] && i7 >= 0);
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_3;
    return;

  anon41_Then:
    assume {:partition} i7 < unsafe.$arrSizeHeap[r0] && i7 >= 0;
    $exception := $exception;
    goto anon26;

  anon26:
    $b4 := unsafe.$intArrHeap[r0][i7];
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} !(i7 < unsafe.$arrSizeHeap[r1] && i7 >= 0);
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_4;
    return;

  anon42_Then:
    assume {:partition} i7 < unsafe.$arrSizeHeap[r1] && i7 >= 0;
    $exception := $exception;
    goto anon29;

  anon29:
    $b3 := unsafe.$intArrHeap[r1][i7];
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    $b5 := unsafe.$xorInt($b4, $b3);
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    b6 := unsafe.$bitOr(b6, $b5);
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    i7 := i7 + 1;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto anon29_dummy;

  anon40_Then:
    assume {:partition} i7 >= $i2;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} {:comment "thenblock"} true;
    goto block14;

  block14:
    assert {:sourceloc "OSecurityManager.java", 110, -1, -1, -1} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} b6 == 0;
    assert {:sourceloc "OSecurityManager.java", 110, -1, -1, -1} {:comment "elseblock"} true;
    goto anon32;

  anon32:
    assert {:sourceloc "OSecurityManager.java", 110, -1, -1, -1} true;
    $z0 := 1;
    assert {:sourceloc "OSecurityManager.java", 110, -1, -1, -1} true;
    goto block16;

  block16:
    assert {:sourceloc "OSecurityManager.java", 110, -1, -1, -1} true;
    $return := $z0;
    goto block17;

  anon43_Then:
    assume {:partition} b6 != 0;
    assert {:sourceloc "OSecurityManager.java", 110, -1, -1, -1} {:comment "thenblock"} true;
    goto block15;

  block15:
    assert {:sourceloc "OSecurityManager.java", 110, -1, -1, -1} true;
    $z0 := 0;
    goto block16;

  anon34_Then:
    assume {:partition} r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 98, -1, -1, -1} {:comment "thenblock"} true;
    goto block10;

  anon29_dummy:
    assume false;
    return;

  block13_last:
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto anon39_Then, anon39_Else;
}



implementation unsafe.OSecurityManager$equals_inline$java.lang.String_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref)
{
  var r2: ref;
  var $c3: int;
  var r1: ref;
  var $c2: int;
  var r3: ref;
  var r0: ref;
  var r4: ref;
  var i4: int;
  var $fakelocal_0: ref;
  var i5: int;
  var $i1: int;
  var $fakelocal_1: ref;
  var $i0: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", 114, -1, -1, -1} true;
    i4 := unsafe.$stringSizeHeap[r1];
    assert {:sourceloc "OSecurityManager.java", 115, -1, -1, -1} true;
    $i0 := unsafe.$stringSizeHeap[r2];
    assert {:sourceloc "OSecurityManager.java", 115, -1, -1, -1} true;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} i4 == $i0;
    assert {:sourceloc "OSecurityManager.java", 115, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "OSecurityManager.java", 116, -1, -1, -1} true;
    call r3, $exception := unsafe.java.lang.String$toCharArray$(r1);
    assert {:sourceloc "OSecurityManager.java", 117, -1, -1, -1} true;
    call r4, $exception := unsafe.java.lang.String$toCharArray$(r2);
    assert {:sourceloc "OSecurityManager.java", 118, -1, -1, -1} true;
    i5 := 0;
    goto block19;

  block19:
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Entry;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Entry:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return := $return;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception := $exception;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3 := $c3;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2 := $c2;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3 := r3;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4 := r4;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4 := i4;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0 := $fakelocal_0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5 := i5;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1 := $i1;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1 := $fakelocal_1;
    havoc inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$entry;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$entry:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block19;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block19:
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4
   + -1;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1
   == 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21:
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
   + 1;
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21_dummy;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3
   == inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon12:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2 := unsafe.$intArrHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4][inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3
   != inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "elseblock"} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon12;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon9:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3 := unsafe.$intArrHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3][inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Else:
    assume {:partition} !(inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0);
    call inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return := 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon9;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon6:
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Else:
    assume {:partition} !(inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0);
    call inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return := 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Else:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1
   != 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon6;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21_dummy:
    assume false;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$exit:
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return:
    $return := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return;
    $exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception;
    $c3 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3;
    $c2 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2;
    i4 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4;
    $fakelocal_0 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0;
    i5 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5;
    $i1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1;
    $fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1;
    goto block19$1;

  block19$1:
    goto block19_last;

  anon17_Else:
    assume {:partition} $i1 != 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  anon6:
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} !(i5 < unsafe.$arrSizeHeap[r3] && i5 >= 0);
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon18_Then:
    assume {:partition} i5 < unsafe.$arrSizeHeap[r3] && i5 >= 0;
    $exception := $exception;
    goto anon9;

  anon9:
    $c3 := unsafe.$intArrHeap[r3][i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} !(i5 < unsafe.$arrSizeHeap[r4] && i5 >= 0);
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_1;
    return;

  anon19_Then:
    assume {:partition} i5 < unsafe.$arrSizeHeap[r4] && i5 >= 0;
    $exception := $exception;
    goto anon12;

  anon12:
    $c2 := unsafe.$intArrHeap[r4][i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} $c3 != $c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "elseblock"} true;
    goto anon15;

  anon15:
    assert {:sourceloc "OSecurityManager.java", 121, -1, -1, -1} true;
    $return := 0;
    goto block22;

  block22:
    return;

  anon20_Then:
    assume {:partition} $c3 == $c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "thenblock"} true;
    goto block21;

  block21:
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    i5 := i5 + 1;
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    goto block21_dummy;

  anon17_Then:
    assume {:partition} $i1 == 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "thenblock"} true;
    goto block20;

  block20:
    assert {:sourceloc "OSecurityManager.java", 124, -1, -1, -1} true;
    $return := 1;
    goto block22;

  anon16_Then:
    assume {:partition} i4 != $i0;
    assert {:sourceloc "OSecurityManager.java", 115, -1, -1, -1} {:comment "thenblock"} true;
    goto block18;

  block18:
    assert {:sourceloc "OSecurityManager.java", 126, -1, -1, -1} true;
    $return := 0;
    goto block22;

  block21_dummy:
    assume false;
    return;

  block19_last:
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    $i1 := i4;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    i4 := i4 + -1;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    goto anon17_Then, anon17_Else;
}



implementation unsafe.OSecurityManager$checkPassword_unsafe$java.lang.String_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref)
{
  var $i2: int;
  var $fakelocal_4: ref;
  var $z0: int;
  var $fakelocal_1: ref;
  var r8: ref;
  var r9: ref;
  var $z2: int;
  var $r6: ref;
  var $z6: int;
  var $i1: int;
  var $z5: int;
  var $fakelocal_3: ref;
  var $z3: int;
  var $i0: int;
  var $r3: ref;
  var $r4: ref;
  var $z4: int;
  var $r5: ref;
  var $z1: int;
  var r0: ref;
  var $fakelocal_2: ref;
  var r2: ref;
  var $fakelocal_0: ref;
  var r1: ref;
  var r7: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r2: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap: $heap_type;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i2: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r1: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$i0: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_6: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r7: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r11: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r9: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i1: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_5: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r0: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r3: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r6: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$z0: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$this: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__1: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__2: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$r1: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$r2: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$r0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$r3: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$this: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$in_parameter__0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$return: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$exception: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$objIndex: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$heap: $heap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap: $heap_type;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$i2: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_1: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r1: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$i0: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_6: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r7: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r11: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_2: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_4: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r5: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r9: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$i1: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_5: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r2: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r0: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r3: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r10: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r6: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$z0: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_3: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_0: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r8: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$this: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__0: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__1: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__2: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$return: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$objIndex: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i0: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i1: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$in_parameter__0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$2$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i0: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i1: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$in_parameter__0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$3$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r37: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r29: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_6: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r21: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r42: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r36: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_8: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_12: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r41: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r35: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r39: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r34: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i0: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r38: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_17: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_18: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r40: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i1: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$i2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$this: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__3: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$objIndex: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$r1: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$r2: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$r0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$r3: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$this: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$in_parameter__0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$return: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$exception: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$objIndex: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$heap: $heap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap: $heap_type;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r2: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c3: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r1: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c2: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r3: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r0: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r4: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i4: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i1: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i0: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$this: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$in_parameter__1: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$return: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", 160, -1, -1, -1} true;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} r2 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon16_Then:
    assume {:partition} r2 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $z0, $exception := unsafe.java.lang.String$startsWith$java.lang.String(r2, unsafe.$StringConst3);
    assert {:sourceloc "OSecurityManager.java", 160, -1, -1, -1} true;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} $z0 != 0;
    assert {:sourceloc "OSecurityManager.java", 160, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  anon6:
    assert {:sourceloc "OSecurityManager.java", 161, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[$fakelocal_1 := 9];
    $r5 := $fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 161, -1, -1, -1} true;
    $i2 := unsafe.$stringSizeHeap[$r5];
    assert {:sourceloc "OSecurityManager.java", 161, -1, -1, -1} true;
    call r7, $exception := unsafe.java.lang.String$substring$int(r2, $i2);
    assert {:sourceloc "OSecurityManager.java", 162, -1, -1, -1} true;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$this := r0;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0 := r1;
    havoc inline$OSecurityManager$createSHA256$java.lang.String$0$r1, inline$OSecurityManager$createSHA256$java.lang.String$0$$r2, inline$OSecurityManager$createSHA256$java.lang.String$0$r0, inline$OSecurityManager$createSHA256$java.lang.String$0$$r3, inline$OSecurityManager$createSHA256$java.lang.String$0$$return, inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r1 := inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$this := inline$OSecurityManager$createSHA256$java.lang.String$0$r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, inline$OSecurityManager$digestSHA256$java.lang.String$0$r12, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$return, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$return := inline$OSecurityManager$createSHA256$java.lang.String$0$$r3;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$block27;

  inline$OSecurityManager$createSHA256$java.lang.String$0$block27:
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Return:
    $r6 := inline$OSecurityManager$createSHA256$java.lang.String$0$$return;
    $exception := inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    goto anon6$1;

  anon6$1:
    assert {:sourceloc "OSecurityManager.java", 162, -1, -1, -1} true;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} $r6 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_2;
    return;

  anon18_Then:
    assume {:partition} $r6 != unsafe.$null;
    $exception := $exception;
    goto anon9;

  anon9:
    call $z6, $exception := unsafe.java.lang.String$equals$java.lang.Object($r6, r7);
    assert {:sourceloc "OSecurityManager.java", 162, -1, -1, -1} true;
    $return := $z6;
    goto block26;

  block26:
    return;

  anon17_Then:
    assume {:partition} $z0 == 0;
    assert {:sourceloc "OSecurityManager.java", 160, -1, -1, -1} {:comment "thenblock"} true;
    goto block23;

  block23:
    assert {:sourceloc "OSecurityManager.java", 164, -1, -1, -1} true;
    call $z1, $exception := unsafe.java.lang.String$startsWith$java.lang.String(r2, unsafe.$StringConst4);
    assert {:sourceloc "OSecurityManager.java", 164, -1, -1, -1} true;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} $z1 != 0;
    assert {:sourceloc "OSecurityManager.java", 164, -1, -1, -1} {:comment "elseblock"} true;
    goto anon12;

  anon12:
    assert {:sourceloc "OSecurityManager.java", 165, -1, -1, -1} true;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[$fakelocal_3 := 20];
    $r4 := $fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 165, -1, -1, -1} true;
    $i1 := unsafe.$stringSizeHeap[$r4];
    assert {:sourceloc "OSecurityManager.java", 165, -1, -1, -1} true;
    call r8, $exception := unsafe.java.lang.String$substring$int(r2, $i1);
    assert {:sourceloc "OSecurityManager.java", 166, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Entry;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Entry:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$this := r0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__0 := r1;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__1 := r8;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__2 := unsafe.$StringConst5;
    havoc inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i2, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_1, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r1, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$i0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_6, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r7, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r11, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_2, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_4, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r9, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i1, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_5, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r3, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r10, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r6, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$z0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_3, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r8, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon0;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__2, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r1 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r3 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", 261, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon26_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon26_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon26_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2
   == unsafe.$null;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon26_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2
   != unsafe.$null;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon3;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon3:
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := unsafe.java.lang.String$split$java.lang.String(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon27_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon27_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon27_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4
   == unsafe.$null;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_1;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon27_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4
   != unsafe.$null;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon6;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon6:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i1 := unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4];
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon28_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon28_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon28_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i1
   != 3;
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon9;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r11 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_2;
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r11, unsafe.$StringConst14);
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r11;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$block44;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$block44:
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon28_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i1
   == 3;
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$block43;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$block43:
    assert {:sourceloc "OSecurityManager.java", 265, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon29_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon29_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon29_Else:
    assume {:partition} !(0
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 0 >= 0);
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon29_Then:
    assume {:partition} 0
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 0 >= 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon12;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon12:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r8 := unsafe.$refArrHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4][0];
    assert {:sourceloc "OSecurityManager.java", 265, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r8;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1, inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1, inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon0;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0 := unsafe.$stringSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0];
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Else:
    assume {:partition} 2 == 0;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Then:
    assume {:partition} 2 != 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon3;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon3:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1 := unsafe.$divInt(inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0, 2);
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1];
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := 0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$block58:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1
   == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1][inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
   + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3
   + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1
   != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$exit:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58$1;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58$1:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58_last;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3 + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1][inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block59;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block59:
    assert {:sourceloc "OSecurityManager.java", 324, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block60;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block60:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58_last:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon12$1;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon12$1:
    assert {:sourceloc "OSecurityManager.java", 266, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon30_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon30_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon30_Else:
    assume {:partition} !(1
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 1 >= 0);
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon30_Then:
    assume {:partition} 1
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 1 >= 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon15;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon15:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r9 := unsafe.$refArrHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4][1];
    assert {:sourceloc "OSecurityManager.java", 266, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r9;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1, inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1, inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon0;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0 := unsafe.$stringSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0];
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Else:
    assume {:partition} 2 == 0;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Then:
    assume {:partition} 2 != 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon3;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon3:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1 := unsafe.$divInt(inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0, 2);
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1];
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := 0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$block58:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1
   == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1][inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
   + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3
   + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r0, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1
   != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$exit:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58$1;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58$1:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58_last;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3 + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1][inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block59;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block59:
    assert {:sourceloc "OSecurityManager.java", 324, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block60;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block60:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58_last:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r6 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon15$1;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon15$1:
    assert {:sourceloc "OSecurityManager.java", 267, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon31_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon31_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon31_Else:
    assume {:partition} !(2
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 2 >= 0);
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_5;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon31_Then:
    assume {:partition} 2
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 2 >= 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon18;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon18:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r10 := unsafe.$refArrHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4][2];
    assert {:sourceloc "OSecurityManager.java", 267, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$i0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := unsafe.java.lang.Integer$parseInt$java.lang.String(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r10);
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon32_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon32_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon32_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon22;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon22:
    assert {:sourceloc "OSecurityManager.java", 269, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon34_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon34_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon34_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5
   == unsafe.$null;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_6;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5
   != unsafe.$null;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon25;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon25:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5];
    assert {:sourceloc "OSecurityManager.java", 269, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r1;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r6;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$i0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i2;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r3;
    havoc inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4;
    assert {:sourceloc "OSecurityManager.java", 275, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32 := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$Entry;

  inline$OSecurityManager$createSHA256$java.lang.String$1$Entry:
    inline$OSecurityManager$createSHA256$java.lang.String$1$$this := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$in_parameter__0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10;
    havoc inline$OSecurityManager$createSHA256$java.lang.String$1$r1, inline$OSecurityManager$createSHA256$java.lang.String$1$$r2, inline$OSecurityManager$createSHA256$java.lang.String$1$r0, inline$OSecurityManager$createSHA256$java.lang.String$1$$r3, inline$OSecurityManager$createSHA256$java.lang.String$1$$return, inline$OSecurityManager$createSHA256$java.lang.String$1$$exception;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$heap := unsafe.$heap;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$anon0;

  inline$OSecurityManager$createSHA256$java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$1$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createSHA256$java.lang.String$1$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$1$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$1$r0 := inline$OSecurityManager$createSHA256$java.lang.String$1$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$1$r1 := inline$OSecurityManager$createSHA256$java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$this := inline$OSecurityManager$createSHA256$java.lang.String$1$r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$1$r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$1$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$1$r0, inline$OSecurityManager$digestSHA256$java.lang.String$1$r12, inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$1$r11, inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$1$r1, inline$OSecurityManager$digestSHA256$java.lang.String$1$r2, inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$1$$return, inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$1$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$1$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := inline$OSecurityManager$digestSHA256$java.lang.String$1$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$1$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$1$r2, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$1$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$1$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$1$r11, inline$OSecurityManager$digestSHA256$java.lang.String$1$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$1$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$1$$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$anon0$1;

  inline$OSecurityManager$createSHA256$java.lang.String$1$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$1$$r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$1$$r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$anon0$2;

  inline$OSecurityManager$createSHA256$java.lang.String$1$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$return := inline$OSecurityManager$createSHA256$java.lang.String$1$$r3;
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$block27;

  inline$OSecurityManager$createSHA256$java.lang.String$1$block27:
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$Return;

  inline$OSecurityManager$createSHA256$java.lang.String$1$Return:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4 := inline$OSecurityManager$createSHA256$java.lang.String$1$$return;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$createSHA256$java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1:
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4;
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Arrays$toString$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$get$java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49:
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45:
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14 := unsafe.$new(unsafe.javax.crypto.spec.PBEKeySpec);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14;
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$toCharArray$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2 := unsafe.$mulInt(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, 
  8);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.spec.PBEKeySpec$$la$init$ra$$char$lp$$rp$_byte$lp$$rp$_int_int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46:
    assert {:sourceloc "OSecurityManager.java", 290, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$getInstance$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 299, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OSecurityException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OSecurityException$$la$init$ra$$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, unsafe.$StringConst16);
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$generateSecret$java.security.spec.KeySpec(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.security.Key$getEncoded$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60:
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63:
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$put$java.lang.Object_java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48:
    assert {:sourceloc "OSecurityManager.java", 298, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r7 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon25$1;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon25$1:
    assert {:sourceloc "OSecurityManager.java", 270, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$z0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := unsafe.java.security.MessageDigest$isEqual$byte$lp$$rp$_byte$lp$$rp$(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r7);
    assert {:sourceloc "OSecurityManager.java", 270, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$z0;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$block44;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon33_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon33_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon33_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon22;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon33_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return:
    $z5 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return;
    $exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto anon12$1;

  anon12$1:
    assert {:sourceloc "OSecurityManager.java", 166, -1, -1, -1} true;
    $return := $z5;
    goto block26;

  anon19_Then:
    assume {:partition} $z1 == 0;
    assert {:sourceloc "OSecurityManager.java", 164, -1, -1, -1} {:comment "thenblock"} true;
    goto block24;

  block24:
    assert {:sourceloc "OSecurityManager.java", 168, -1, -1, -1} true;
    call $z2, $exception := unsafe.java.lang.String$startsWith$java.lang.String(r2, unsafe.$StringConst6);
    assert {:sourceloc "OSecurityManager.java", 168, -1, -1, -1} true;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} $z2 != 0;
    assert {:sourceloc "OSecurityManager.java", 168, -1, -1, -1} {:comment "elseblock"} true;
    goto anon15;

  anon15:
    assert {:sourceloc "OSecurityManager.java", 169, -1, -1, -1} true;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[$fakelocal_4 := 22];
    $r3 := $fakelocal_4;
    assert {:sourceloc "OSecurityManager.java", 169, -1, -1, -1} true;
    $i0 := unsafe.$stringSizeHeap[$r3];
    assert {:sourceloc "OSecurityManager.java", 169, -1, -1, -1} true;
    call r9, $exception := unsafe.java.lang.String$substring$int(r2, $i0);
    assert {:sourceloc "OSecurityManager.java", 170, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$Entry;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$Entry:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$this := r0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__0 := r1;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__1 := r9;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__2 := unsafe.$StringConst7;
    havoc inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$i2, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_1, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r1, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$i0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_6, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r7, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r11, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_2, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_4, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r5, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r9, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$i1, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_5, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r2, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r3, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r10, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r6, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$z0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_3, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r8, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$return, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon0;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__2, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r1 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r2 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r3 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", 261, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon26_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon26_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon26_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r2
   == unsafe.$null;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_0;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon26_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r2
   != unsafe.$null;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon3;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon3:
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := unsafe.java.lang.String$split$java.lang.String(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r2, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon27_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon27_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon27_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4
   == unsafe.$null;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_1;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon27_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4
   != unsafe.$null;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon6;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon6:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$i1 := unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4];
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon28_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon28_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon28_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$i1
   != 3;
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon9;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon9:
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r11 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_2;
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r11, unsafe.$StringConst14);
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r11;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$block44;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$block44:
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon28_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$i1
   == 3;
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$block43;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$block43:
    assert {:sourceloc "OSecurityManager.java", 265, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon29_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon29_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon29_Else:
    assume {:partition} !(0
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4]
   && 0 >= 0);
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_3;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon29_Then:
    assume {:partition} 0
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4]
   && 0 >= 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon12;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon12:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r8 := unsafe.$refArrHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4][0];
    assert {:sourceloc "OSecurityManager.java", 265, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$in_parameter__0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r8;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i2, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i0, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i1, inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i3, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_0, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_1, inline$OSecurityManager$hexToByteArray$java.lang.String$2$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i4, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$b7, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$return, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon0;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$2$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i0 := unsafe.$stringSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$2$r0];
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon17_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon17_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon17_Else:
    assume {:partition} 2 == 0;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon17_Then:
    assume {:partition} 2 != 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon3;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon3:
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i1 := unsafe.$divInt(inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i0, 2);
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_1 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i1];
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8 := 0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$block58:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$return := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$r0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$b7;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$b7;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$block58:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r1
   == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r1][inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8
   + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8
     >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8
     >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i3
   + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r0, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$in_r1
   != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$exit:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$Return:
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$return := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$2$out_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$block58$1;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$block58$1:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$block58_last;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1 == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_2;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1 != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i3 + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$2$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String$2$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String$2$$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8 >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$fakelocal_3;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8 >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1][inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8 + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$return := unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$2$i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String$2$$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$block59;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$block59:
    assert {:sourceloc "OSecurityManager.java", 324, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$2$$return := inline$OSecurityManager$hexToByteArray$java.lang.String$2$r1;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$block60;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$block60:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$block58_last:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$2$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$2$Return:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r5 := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$return;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$2$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon12$1;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon12$1:
    assert {:sourceloc "OSecurityManager.java", 266, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon30_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon30_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon30_Else:
    assume {:partition} !(1
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4]
   && 1 >= 0);
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_4;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon30_Then:
    assume {:partition} 1
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4]
   && 1 >= 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon15;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon15:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r9 := unsafe.$refArrHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4][1];
    assert {:sourceloc "OSecurityManager.java", 266, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$in_parameter__0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r9;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i2, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i0, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i1, inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i3, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_0, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_1, inline$OSecurityManager$hexToByteArray$java.lang.String$3$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i4, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$b7, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$return, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon0;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$3$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i0 := unsafe.$stringSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$3$r0];
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon17_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon17_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon17_Else:
    assume {:partition} 2 == 0;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon17_Then:
    assume {:partition} 2 != 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon3;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon3:
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i1 := unsafe.$divInt(inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i0, 2);
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_1 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i1];
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8 := 0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$block58:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$return := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$r0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$b7;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$b7;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$block58:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r1
   == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r1][inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8
   + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8
     >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8
     >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i3
   + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r0, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$in_r1
   != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$exit:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$Return:
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$return := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$3$out_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$block58$1;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$block58$1:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$block58_last;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1 == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_2;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1 != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i3 + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$3$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String$3$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String$3$$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8 >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$fakelocal_3;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8 >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1][inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8 + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$return := unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$3$i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String$3$$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$block59;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$block59:
    assert {:sourceloc "OSecurityManager.java", 324, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$3$$return := inline$OSecurityManager$hexToByteArray$java.lang.String$3$r1;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$block60;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$block60:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$block58_last:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$3$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$3$Return:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r6 := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$return;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$3$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon15$1;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon15$1:
    assert {:sourceloc "OSecurityManager.java", 267, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon31_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon31_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon31_Else:
    assume {:partition} !(2
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4]
   && 2 >= 0);
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_5;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon31_Then:
    assume {:partition} 2
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4]
   && 2 >= 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon18;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon18:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r10 := unsafe.$refArrHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r4][2];
    assert {:sourceloc "OSecurityManager.java", 267, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$i0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := unsafe.java.lang.Integer$parseInt$java.lang.String(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$r10);
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon32_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon32_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon32_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon22;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon22:
    assert {:sourceloc "OSecurityManager.java", 269, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon34_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon34_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon34_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r5
   == unsafe.$null;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$fakelocal_6;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon34_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r5
   != unsafe.$null;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon25;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon25:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r5];
    assert {:sourceloc "OSecurityManager.java", 269, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Entry;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Entry:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$this := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r1;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__1 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r6;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__2 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$i0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__3 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$i2;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__4 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r3;
    havoc inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r29, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_6, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r42, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r36, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_8, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_12, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r34, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_17, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_18, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$i2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$heap := unsafe.$heap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon0;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__4, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__3;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r3 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__4;
    assert {:sourceloc "OSecurityManager.java", 275, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32 := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r37 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r37);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r38 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon73_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon73_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon73_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_2;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon73_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon3;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon3:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r38);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon74_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon74_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon74_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_3;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon74_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon6;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon6:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$Entry;

  inline$OSecurityManager$createSHA256$java.lang.String$2$Entry:
    inline$OSecurityManager$createSHA256$java.lang.String$2$$this := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r0;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$in_parameter__0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r10;
    havoc inline$OSecurityManager$createSHA256$java.lang.String$2$r1, inline$OSecurityManager$createSHA256$java.lang.String$2$$r2, inline$OSecurityManager$createSHA256$java.lang.String$2$r0, inline$OSecurityManager$createSHA256$java.lang.String$2$$r3, inline$OSecurityManager$createSHA256$java.lang.String$2$$return, inline$OSecurityManager$createSHA256$java.lang.String$2$$exception;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$heap := unsafe.$heap;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$anon0;

  inline$OSecurityManager$createSHA256$java.lang.String$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$2$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createSHA256$java.lang.String$2$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$2$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$2$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$2$r0 := inline$OSecurityManager$createSHA256$java.lang.String$2$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$2$r1 := inline$OSecurityManager$createSHA256$java.lang.String$2$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$this := inline$OSecurityManager$createSHA256$java.lang.String$2$r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$2$r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$2$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$2$r0, inline$OSecurityManager$digestSHA256$java.lang.String$2$r12, inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$2$r11, inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$2$r1, inline$OSecurityManager$digestSHA256$java.lang.String$2$r2, inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$2$$return, inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$2$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$2$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := inline$OSecurityManager$digestSHA256$java.lang.String$2$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$2$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$2$r2, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$2$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$2$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$2$r11, inline$OSecurityManager$digestSHA256$java.lang.String$2$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$2$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$2$$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$anon0$1;

  inline$OSecurityManager$createSHA256$java.lang.String$2$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$2$$r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$2$$r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$anon0$2;

  inline$OSecurityManager$createSHA256$java.lang.String$2$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$return := inline$OSecurityManager$createSHA256$java.lang.String$2$$r3;
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$block27;

  inline$OSecurityManager$createSHA256$java.lang.String$2$block27:
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$Return;

  inline$OSecurityManager$createSHA256$java.lang.String$2$Return:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r4 := inline$OSecurityManager$createSHA256$java.lang.String$2$$return;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$createSHA256$java.lang.String$2$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon6$1;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon6$1:
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r11 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon75_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon75_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon75_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r11
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon9;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon9:
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r39 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_4;
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r39);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r4);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon76_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon76_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon76_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_5;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon76_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon12;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon12:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.util.Arrays$toString$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon77_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon77_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon77_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_6;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon77_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon15;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon15:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r21);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon78_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon78_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon78_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_7;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon78_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon18;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon18:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon79_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon79_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon79_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_8;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon79_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon21;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon21:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i0);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon80_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon80_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon80_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_9;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon80_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon24;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon24:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon81_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon81_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon81_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_10;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon81_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon27;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon27:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i1);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon82_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon82_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon82_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_11 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_11;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon82_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon30;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon30:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon83_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon83_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon83_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_12;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon83_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon33;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon33:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.util.Map$get$java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon84_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon84_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28, unsafe.$type]
   <: unsafe.$intArrayType);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_13 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_13;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon84_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28, unsafe.$type]
   <: unsafe.$intArrayType;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon36;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon36:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon85_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon85_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon85_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon39;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon39:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block49:
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon85_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block45:
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_14 := unsafe.$new(unsafe.javax.crypto.spec.PBEKeySpec);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r40 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_14;
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon86_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon86_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon86_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_15 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_15;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon86_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon42;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon42:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.String$toCharArray$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$i2 := unsafe.$mulInt(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i1, 
  8);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.javax.crypto.spec.PBEKeySpec$$la$init$ra$$char$lp$$rp$_byte$lp$$rp$_int_int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$i2);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r34 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r40;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block46:
    assert {:sourceloc "OSecurityManager.java", 290, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.javax.crypto.SecretKeyFactory$getInstance$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r3);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon87_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon87_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon87_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon46:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon89_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon89_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon89_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r29 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    assert {:sourceloc "OSecurityManager.java", 299, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r36 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r29;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_17 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OSecurityException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r41 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_17;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.com.orientechnologies.orient.core.exception.OSecurityException$$la$init$ra$$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r41, unsafe.$StringConst16);
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r36);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon99_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon99_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon99_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_18 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_18;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon99_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon72;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon72:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r42 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r42;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon89_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon49:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.javax.crypto.SecretKeyFactory$generateSecret$java.security.spec.KeySpec(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r34);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon90_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon90_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon90_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon53:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon92_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon92_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon92_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon92_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon56;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon56:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.security.Key$getEncoded$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon93_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon93_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon93_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon60:
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r15 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon95_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon95_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon95_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r15
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon63;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon63:
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon96_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon96_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon96_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon96_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon66;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon66:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.util.Map$put$java.lang.Object_java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r35);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon97_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon97_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon97_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block48:
    assert {:sourceloc "OSecurityManager.java", 298, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r35;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon97_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon98_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon98_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon98_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon98_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon95_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r15
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon93_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon94_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon94_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon94_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon90_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon91_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon91_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon91_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon91_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon87_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon88_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon88_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon88_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon88_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon75_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r11
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r7 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon25$1;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon25$1:
    assert {:sourceloc "OSecurityManager.java", 270, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$z0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception := unsafe.java.security.MessageDigest$isEqual$byte$lp$$rp$_byte$lp$$rp$(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r5, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$r7);
    assert {:sourceloc "OSecurityManager.java", 270, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$return := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$z0;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$block44;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon32_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon33_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon33_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon33_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon22;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$anon33_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$return := 0;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$Return:
    $z4 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$return;
    $exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$1$$exception;
    goto anon15$1;

  anon15$1:
    assert {:sourceloc "OSecurityManager.java", 170, -1, -1, -1} true;
    $return := $z4;
    goto block26;

  anon20_Then:
    assume {:partition} $z2 == 0;
    assert {:sourceloc "OSecurityManager.java", 168, -1, -1, -1} {:comment "thenblock"} true;
    goto block25;

  block25:
    assert {:sourceloc "OSecurityManager.java", 177, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$Entry;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$Entry:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$this := r0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$in_parameter__0 := r1;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$in_parameter__1 := r2;
    havoc inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon0;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r0 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r2 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", 114, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i4 := unsafe.$stringSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r1];
    assert {:sourceloc "OSecurityManager.java", 115, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i0 := unsafe.$stringSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r2];
    assert {:sourceloc "OSecurityManager.java", 115, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon16_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon16_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon16_Else:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i4
   == inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i0;
    assert {:sourceloc "OSecurityManager.java", 115, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon3;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 116, -1, -1, -1} true;
    call inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception := unsafe.java.lang.String$toCharArray$(inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 117, -1, -1, -1} true;
    call inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception := unsafe.java.lang.String$toCharArray$(inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 118, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5 := 0;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block19;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block19:
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Entry;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Entry:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$return;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c3;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c2;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r3;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r4;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i4;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i1;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_1;
    havoc inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$entry;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$entry:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block19;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block19:
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4
   + -1;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1
   == 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21:
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
   + 1;
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21_dummy;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3
   == inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon12:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2 := unsafe.$intArrHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4][inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3
   != inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "elseblock"} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon12;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon9:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3 := unsafe.$intArrHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3][inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Else:
    assume {:partition} !(inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0);
    call inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return := 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon9;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon6:
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Else:
    assume {:partition} !(inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0);
    call inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return := 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Else:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1
   != 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon6;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21_dummy:
    assume false;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$exit:
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$return := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c3 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c2 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i4 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_0 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block19$1;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block19$1:
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block19_last;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon17_Else:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i1
   != 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon6;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon6:
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon18_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon18_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon18_Else:
    assume {:partition} !(inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r3]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5
     >= 0);
    call inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r3]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5
     >= 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon9;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon9:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c3 := unsafe.$intArrHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r3][inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon19_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon19_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon19_Else:
    assume {:partition} !(inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r4]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5
     >= 0);
    call inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$fakelocal_1;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r4]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5
     >= 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon12;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon12:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c2 := unsafe.$intArrHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$r4][inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon20_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon20_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c3
   != inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon15;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon15:
    assert {:sourceloc "OSecurityManager.java", 121, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$return := 0;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block22;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block22:
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c3
   == inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block21;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block21:
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i5 + 1;
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block21_dummy;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon17_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i1
   == 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block20;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block20:
    assert {:sourceloc "OSecurityManager.java", 124, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$return := 1;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block22;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon16_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i4
   != inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i0;
    assert {:sourceloc "OSecurityManager.java", 115, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block18;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block18:
    assert {:sourceloc "OSecurityManager.java", 126, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$return := 0;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block22;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block21_dummy:
    assume false;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$block19_last:
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$i1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i4;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i4 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$i4
   + -1;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon17_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$anon17_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$Return:
    $z3 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$return;
    $exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String$0$$exception;
    goto block25$1;

  block25$1:
    assert {:sourceloc "OSecurityManager.java", 177, -1, -1, -1} true;
    $return := $z3;
    goto block26;
}



implementation unsafe.OSecurityManager$createSHA256$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var r1: ref;
  var $r2: ref;
  var r0: ref;
  var $r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$this := r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0 := r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, inline$OSecurityManager$digestSHA256$java.lang.String$0$r12, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$return, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Return:
    $r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$return;
    $exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0 := $r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return:
    $r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    $exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto anon0$2;

  anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    $return := $r3;
    goto block27;

  block27:
    return;
}



implementation unsafe.OSecurityManager$createHash$java.lang.String_java.lang.String_boolean($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: int)
   returns ($return: ref, $exception: ref)
{
  var $r16: ref;
  var $r11: ref;
  var $fakelocal_8: ref;
  var $i0: int;
  var $r6: ref;
  var $r22: ref;
  var $fakelocal_14: ref;
  var $fakelocal_3: ref;
  var $fakelocal_11: ref;
  var $fakelocal_16: ref;
  var r0: ref;
  var r2: ref;
  var $r13: ref;
  var $r10: ref;
  var $fakelocal_1: ref;
  var $r12: ref;
  var $fakelocal_12: ref;
  var $z1: int;
  var $r9: ref;
  var r23: ref;
  var $r4: ref;
  var $fakelocal_0: ref;
  var $fakelocal_7: ref;
  var $i1: int;
  var $r21: ref;
  var $z3: int;
  var $r8: ref;
  var $fakelocal_2: ref;
  var $fakelocal_6: ref;
  var $fakelocal_15: ref;
  var $r5: ref;
  var $r17: ref;
  var r3: ref;
  var $fakelocal_4: ref;
  var $fakelocal_5: ref;
  var $r7: ref;
  var $r14: ref;
  var $fakelocal_13: ref;
  var $fakelocal_9: ref;
  var $fakelocal_10: ref;
  var r1: ref;
  var z0: int;
  var $z2: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r2: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap: $heap_type;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_6: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r3: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_7: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$i0: int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r6: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_5: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r2: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r11: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r0: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r5: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r15: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r1: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$this: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__1: int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__2: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$r1: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$r2: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$r0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$r3: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$this: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$in_parameter__0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$return: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$exception: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$objIndex: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$heap: $heap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$1$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$heap: $heap_type;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r13: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_6: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r3: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r4: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_4: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_7: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_3: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r14: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r12: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_2: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$i0: int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r8: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r6: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_1: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_5: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r2: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r11: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r10: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r0: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r7: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_0: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r9: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r5: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r15: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r1: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$this: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$in_parameter__0: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$in_parameter__1: int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$in_parameter__2: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$return: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$objIndex: int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$heap: $heap_type;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r37: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r29: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_6: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r21: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r42: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r36: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_8: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_12: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r41: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r35: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r39: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r34: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i0: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r38: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_17: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_18: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r40: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i1: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$i2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$this: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__3: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$objIndex: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$r1: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$r2: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$r0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$r3: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$this: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$in_parameter__0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$return: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$exception: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$objIndex: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$heap: $heap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$2$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    z0 := $in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", 194, -1, -1, -1} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 194, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "OSecurityManager.java", 195, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    $r22 := $fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 195, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String($r22, unsafe.$StringConst8);
    assert {:sourceloc "OSecurityManager.java", 195, -1, -1, -1} true;
    $exception := $r22;
    goto block35;

  block35:
    return;

  anon34_Then:
    assume {:partition} r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 194, -1, -1, -1} {:comment "thenblock"} true;
    goto block28;

  block28:
    assert {:sourceloc "OSecurityManager.java", 197, -1, -1, -1} true;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} r2 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 197, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  anon6:
    assert {:sourceloc "OSecurityManager.java", 198, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    $r21 := $fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 198, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String($r21, unsafe.$StringConst9);
    assert {:sourceloc "OSecurityManager.java", 198, -1, -1, -1} true;
    $exception := $r21;
    goto block35;

  anon35_Then:
    assume {:partition} r2 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 197, -1, -1, -1} {:comment "thenblock"} true;
    goto block29;

  block29:
    assert {:sourceloc "OSecurityManager.java", 200, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r4 := $fakelocal_2;
    assert {:sourceloc "OSecurityManager.java", 200, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$int($r4, 128);
    assert {:sourceloc "OSecurityManager.java", 200, -1, -1, -1} true;
    r3 := $r4;
    assert {:sourceloc "OSecurityManager.java", 202, -1, -1, -1} true;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} z0 != 0;
    assert {:sourceloc "OSecurityManager.java", 202, -1, -1, -1} {:comment "elseblock"} true;
    goto anon9;

  anon9:
    assert {:sourceloc "OSecurityManager.java", 203, -1, -1, -1} true;
    call $fakelocal_3, $exception := unsafe.java.lang.StringBuilder$append$char(r3, 123);
    assert {:sourceloc "OSecurityManager.java", 204, -1, -1, -1} true;
    call $fakelocal_4, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String(r3, r2);
    assert {:sourceloc "OSecurityManager.java", 205, -1, -1, -1} true;
    call $fakelocal_5, $exception := unsafe.java.lang.StringBuilder$append$char(r3, 125);
    goto block30;

  block30:
    assert {:sourceloc "OSecurityManager.java", 209, -1, -1, -1} true;
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[$fakelocal_6 := 7];
    $r5 := $fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 209, -1, -1, -1} true;
    call $z1, $exception := unsafe.java.lang.String$equalsIgnoreCase$java.lang.String($r5, r2);
    assert {:sourceloc "OSecurityManager.java", 209, -1, -1, -1} true;
    goto anon37_Then, anon37_Else;

  anon37_Else:
    assume {:partition} $z1 != 0;
    assert {:sourceloc "OSecurityManager.java", 209, -1, -1, -1} {:comment "elseblock"} true;
    goto anon12;

  anon12:
    assert {:sourceloc "OSecurityManager.java", 210, -1, -1, -1} true;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$this := r0;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0 := r1;
    havoc inline$OSecurityManager$createSHA256$java.lang.String$0$r1, inline$OSecurityManager$createSHA256$java.lang.String$0$$r2, inline$OSecurityManager$createSHA256$java.lang.String$0$r0, inline$OSecurityManager$createSHA256$java.lang.String$0$$r3, inline$OSecurityManager$createSHA256$java.lang.String$0$$return, inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r1 := inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$this := inline$OSecurityManager$createSHA256$java.lang.String$0$r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, inline$OSecurityManager$digestSHA256$java.lang.String$0$r12, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$return, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$return := inline$OSecurityManager$createSHA256$java.lang.String$0$$r3;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$block27;

  inline$OSecurityManager$createSHA256$java.lang.String$0$block27:
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Return:
    r23 := inline$OSecurityManager$createSHA256$java.lang.String$0$$return;
    $exception := inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    goto anon12$1;

  anon12$1:
    assert {:sourceloc "OSecurityManager.java", 210, -1, -1, -1} true;
    goto block32;

  block32:
    assert {:sourceloc "OSecurityManager.java", 220, -1, -1, -1} true;
    call $fakelocal_16, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String(r3, r23);
    assert {:sourceloc "OSecurityManager.java", 222, -1, -1, -1} true;
    call $r16, $exception := unsafe.java.lang.StringBuilder$toString$(r3);
    assert {:sourceloc "OSecurityManager.java", 222, -1, -1, -1} true;
    $return := $r16;
    goto block35;

  anon37_Then:
    assume {:partition} $z1 == 0;
    assert {:sourceloc "OSecurityManager.java", 209, -1, -1, -1} {:comment "thenblock"} true;
    goto block31;

  block31:
    assert {:sourceloc "OSecurityManager.java", 211, -1, -1, -1} true;
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[$fakelocal_7 := 18];
    $r6 := $fakelocal_7;
    assert {:sourceloc "OSecurityManager.java", 211, -1, -1, -1} true;
    call $z2, $exception := unsafe.java.lang.String$equalsIgnoreCase$java.lang.String($r6, r2);
    assert {:sourceloc "OSecurityManager.java", 211, -1, -1, -1} true;
    goto anon38_Then, anon38_Else;

  anon38_Else:
    assume {:partition} $z2 != 0;
    assert {:sourceloc "OSecurityManager.java", 211, -1, -1, -1} {:comment "elseblock"} true;
    goto anon15;

  anon15:
    assert {:sourceloc "OSecurityManager.java", 212, -1, -1, -1} true;
    $r17 := unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration$com.orientechnologies.orient.core.config.OGlobalConfiguration$SECURITY_USER_PASSWORD_SALT_ITERATIONS367;
    assert {:sourceloc "OSecurityManager.java", 212, -1, -1, -1} true;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} $r17 == unsafe.$null;
    call $fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_8;
    return;

  anon39_Then:
    assume {:partition} $r17 != unsafe.$null;
    $exception := $exception;
    goto anon18;

  anon18:
    call $i1, $exception := unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration$getValueAsInteger$($r17);
    assert {:sourceloc "OSecurityManager.java", 212, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Entry;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Entry:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$this := r0;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__0 := r1;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__1 := $i1;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__2 := r2;
    havoc inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_6, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r3, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_4, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_7, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_3, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_2, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$i0, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r8, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r6, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_1, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_5, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r2, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r11, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r0, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r7, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_0, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r5, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r15, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r1, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__2, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r1 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$i0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r2 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.security.SecureRandom);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r6 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.security.SecureRandom$$la$init$ra$$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r6);
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r3 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r6;
    assert {:sourceloc "OSecurityManager.java", 246, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_1 := 24];
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 247, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r3, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4);
    assert {:sourceloc "OSecurityManager.java", 250, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r1;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$i0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3 := 24;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r2;
    havoc inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4;
    assert {:sourceloc "OSecurityManager.java", 275, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32 := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$Entry;

  inline$OSecurityManager$createSHA256$java.lang.String$1$Entry:
    inline$OSecurityManager$createSHA256$java.lang.String$1$$this := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$in_parameter__0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10;
    havoc inline$OSecurityManager$createSHA256$java.lang.String$1$r1, inline$OSecurityManager$createSHA256$java.lang.String$1$$r2, inline$OSecurityManager$createSHA256$java.lang.String$1$r0, inline$OSecurityManager$createSHA256$java.lang.String$1$$r3, inline$OSecurityManager$createSHA256$java.lang.String$1$$return, inline$OSecurityManager$createSHA256$java.lang.String$1$$exception;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$heap := unsafe.$heap;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$anon0;

  inline$OSecurityManager$createSHA256$java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$1$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createSHA256$java.lang.String$1$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$1$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$1$r0 := inline$OSecurityManager$createSHA256$java.lang.String$1$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$1$r1 := inline$OSecurityManager$createSHA256$java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$this := inline$OSecurityManager$createSHA256$java.lang.String$1$r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$1$r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$1$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$1$r0, inline$OSecurityManager$digestSHA256$java.lang.String$1$r12, inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$1$r11, inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$1$r1, inline$OSecurityManager$digestSHA256$java.lang.String$1$r2, inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$1$$return, inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$1$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$1$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$1$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := inline$OSecurityManager$digestSHA256$java.lang.String$1$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$1$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$1$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$1$r2, inline$OSecurityManager$digestSHA256$java.lang.String$1$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$1$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$1$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$1$r11, inline$OSecurityManager$digestSHA256$java.lang.String$1$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$1$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$1$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$1$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$1$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$1$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$1$$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$1$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$1$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$anon0$1;

  inline$OSecurityManager$createSHA256$java.lang.String$1$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$1$$r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$1$$r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$anon0$2;

  inline$OSecurityManager$createSHA256$java.lang.String$1$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$1$$return := inline$OSecurityManager$createSHA256$java.lang.String$1$$r3;
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$block27;

  inline$OSecurityManager$createSHA256$java.lang.String$1$block27:
    goto inline$OSecurityManager$createSHA256$java.lang.String$1$Return;

  inline$OSecurityManager$createSHA256$java.lang.String$1$Return:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4 := inline$OSecurityManager$createSHA256$java.lang.String$1$$return;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$createSHA256$java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1:
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4;
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Arrays$toString$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$get$java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49:
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45:
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14 := unsafe.$new(unsafe.javax.crypto.spec.PBEKeySpec);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14;
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$toCharArray$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2 := unsafe.$mulInt(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, 
  8);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.spec.PBEKeySpec$$la$init$ra$$char$lp$$rp$_byte$lp$$rp$_int_int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46:
    assert {:sourceloc "OSecurityManager.java", 290, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$getInstance$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 299, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OSecurityException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OSecurityException$$la$init$ra$$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, unsafe.$StringConst16);
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$generateSecret$java.security.spec.KeySpec(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.security.Key$getEncoded$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60:
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63:
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$put$java.lang.Object_java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48:
    assert {:sourceloc "OSecurityManager.java", 298, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r5 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0$1;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r7 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_2;
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r7);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r5;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0$2;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r7, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r8);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon16_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon16_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon16_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon16_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon3;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon3:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$in_parameter__0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$3$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$Return:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$return;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$3$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon3$1;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon3$1:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon17_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon17_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon17_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon17_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon6;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon6:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r11);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon18_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon18_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon18_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_5;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon9;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon9:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon19_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon19_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon19_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_6;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon12;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon12:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$i0);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon20_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon20_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_7;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon15;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon15:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r15, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r15;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$block41;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$block41:
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return:
    r23 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return;
    $exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto anon18$1;

  anon18$1:
    assert {:sourceloc "OSecurityManager.java", 212, -1, -1, -1} true;
    goto block32;

  anon38_Then:
    assume {:partition} $z2 == 0;
    assert {:sourceloc "OSecurityManager.java", 211, -1, -1, -1} {:comment "thenblock"} true;
    goto block33;

  block33:
    assert {:sourceloc "OSecurityManager.java", 214, -1, -1, -1} true;
    call $fakelocal_9 := unsafe.$new(unsafe.java.lang.String);
    unsafe.$stringSizeHeap := unsafe.$stringSizeHeap[$fakelocal_9 := 20];
    $r7 := $fakelocal_9;
    assert {:sourceloc "OSecurityManager.java", 214, -1, -1, -1} true;
    call $z3, $exception := unsafe.java.lang.String$equalsIgnoreCase$java.lang.String($r7, r2);
    assert {:sourceloc "OSecurityManager.java", 214, -1, -1, -1} true;
    goto anon40_Then, anon40_Else;

  anon40_Else:
    assume {:partition} $z3 != 0;
    assert {:sourceloc "OSecurityManager.java", 214, -1, -1, -1} {:comment "elseblock"} true;
    goto anon21;

  anon21:
    assert {:sourceloc "OSecurityManager.java", 215, -1, -1, -1} true;
    $r14 := unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration$com.orientechnologies.orient.core.config.OGlobalConfiguration$SECURITY_USER_PASSWORD_SALT_ITERATIONS367;
    assert {:sourceloc "OSecurityManager.java", 215, -1, -1, -1} true;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} $r14 == unsafe.$null;
    call $fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_10;
    return;

  anon41_Then:
    assume {:partition} $r14 != unsafe.$null;
    $exception := $exception;
    goto anon24;

  anon24:
    call $i0, $exception := unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration$getValueAsInteger$($r14);
    assert {:sourceloc "OSecurityManager.java", 215, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$Entry;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$Entry:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$this := r0;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$in_parameter__0 := r1;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$in_parameter__1 := $i0;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$in_parameter__2 := r2;
    havoc inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r13, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_6, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r3, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r4, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_4, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_7, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_3, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r14, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r12, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_2, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$i0, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r8, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r6, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_1, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_5, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r2, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r11, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r10, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r0, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r7, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_0, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r9, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r5, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r15, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r1, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$return, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$heap := unsafe.$heap;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon0;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$in_parameter__2, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r1 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$i0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r2 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.security.SecureRandom);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r6 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := unsafe.java.security.SecureRandom$$la$init$ra$$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r6);
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r3 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r6;
    assert {:sourceloc "OSecurityManager.java", 246, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_1 := 24];
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r4 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 247, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r3, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r4);
    assert {:sourceloc "OSecurityManager.java", 250, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Entry;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Entry:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$this := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r1;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__1 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r4;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__2 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$i0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__3 := 24;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__4 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r2;
    havoc inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r29, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_6, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r42, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r36, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_8, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_12, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r34, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_17, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_18, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$i2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$heap := unsafe.$heap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon0;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__4, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__3;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r3 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$in_parameter__4;
    assert {:sourceloc "OSecurityManager.java", 275, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32 := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r37 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r37);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r38 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon73_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon73_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon73_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_2;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon73_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon3;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon3:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r38);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon74_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon74_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon74_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_3;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon74_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon6;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon6:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r9);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$Entry;

  inline$OSecurityManager$createSHA256$java.lang.String$2$Entry:
    inline$OSecurityManager$createSHA256$java.lang.String$2$$this := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r0;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$in_parameter__0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r10;
    havoc inline$OSecurityManager$createSHA256$java.lang.String$2$r1, inline$OSecurityManager$createSHA256$java.lang.String$2$$r2, inline$OSecurityManager$createSHA256$java.lang.String$2$r0, inline$OSecurityManager$createSHA256$java.lang.String$2$$r3, inline$OSecurityManager$createSHA256$java.lang.String$2$$return, inline$OSecurityManager$createSHA256$java.lang.String$2$$exception;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$heap := unsafe.$heap;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$anon0;

  inline$OSecurityManager$createSHA256$java.lang.String$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$2$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createSHA256$java.lang.String$2$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$2$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$2$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$2$r0 := inline$OSecurityManager$createSHA256$java.lang.String$2$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$2$r1 := inline$OSecurityManager$createSHA256$java.lang.String$2$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$this := inline$OSecurityManager$createSHA256$java.lang.String$2$r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$2$r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$2$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$2$r0, inline$OSecurityManager$digestSHA256$java.lang.String$2$r12, inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$2$r11, inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$2$r1, inline$OSecurityManager$digestSHA256$java.lang.String$2$r2, inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$2$$return, inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$2$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$2$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$2$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := inline$OSecurityManager$digestSHA256$java.lang.String$2$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$2$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$2$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$2$r2, inline$OSecurityManager$digestSHA256$java.lang.String$2$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$2$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$2$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$2$r11, inline$OSecurityManager$digestSHA256$java.lang.String$2$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$2$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$2$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$2$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$2$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$2$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$2$$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$2$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$2$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$anon0$1;

  inline$OSecurityManager$createSHA256$java.lang.String$2$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$2$$r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$4$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$2$$r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$4$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$anon0$2;

  inline$OSecurityManager$createSHA256$java.lang.String$2$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$2$$return := inline$OSecurityManager$createSHA256$java.lang.String$2$$r3;
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$block27;

  inline$OSecurityManager$createSHA256$java.lang.String$2$block27:
    goto inline$OSecurityManager$createSHA256$java.lang.String$2$Return;

  inline$OSecurityManager$createSHA256$java.lang.String$2$Return:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r4 := inline$OSecurityManager$createSHA256$java.lang.String$2$$return;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$createSHA256$java.lang.String$2$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon6$1;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon6$1:
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r11 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon75_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon75_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon75_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r11
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon9;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon9:
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r39 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_4;
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r39);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r4);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon76_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon76_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon76_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_5;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon76_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon12;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon12:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r19, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.util.Arrays$toString$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon77_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon77_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon77_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_6;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon77_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon15;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon15:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r21);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon78_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon78_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon78_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_7;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon78_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon18;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon18:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r22, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon79_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon79_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon79_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_8;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon79_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon21;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon21:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i0);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon80_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon80_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon80_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_9;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon80_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon24;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon24:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r24, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon81_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon81_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon81_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_10;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon81_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon27;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon27:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i1);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon82_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon82_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon82_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_11 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_11;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon82_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon30;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon30:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r26);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon83_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon83_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon83_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_12;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon83_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon33;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon33:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.util.Map$get$java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon84_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon84_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28, unsafe.$type]
   <: unsafe.$intArrayType);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_13 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_13;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon84_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28, unsafe.$type]
   <: unsafe.$intArrayType;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon36;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon36:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r28;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon85_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon85_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon85_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon39;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon39:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block49:
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon85_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r33
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block45:
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_14 := unsafe.$new(unsafe.javax.crypto.spec.PBEKeySpec);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r40 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_14;
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon86_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon86_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon86_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_15 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_15;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon86_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon42;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon42:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.lang.String$toCharArray$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r1);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$i2 := unsafe.$mulInt(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i1, 
  8);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.javax.crypto.spec.PBEKeySpec$$la$init$ra$$char$lp$$rp$_byte$lp$$rp$_int_int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$i2);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r34 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r40;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block46:
    assert {:sourceloc "OSecurityManager.java", 290, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.javax.crypto.SecretKeyFactory$getInstance$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r3);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon87_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon87_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon87_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon46:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon89_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon89_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon89_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r29 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    assert {:sourceloc "OSecurityManager.java", 299, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r36 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r29;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_17 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OSecurityException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r41 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_17;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.com.orientechnologies.orient.core.exception.OSecurityException$$la$init$ra$$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r41, unsafe.$StringConst16);
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r36);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon99_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon99_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon99_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_18 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_18;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon99_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon72;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon72:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r42 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r31;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r42;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon89_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon49:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.javax.crypto.SecretKeyFactory$generateSecret$java.security.spec.KeySpec(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r34);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon90_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon90_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon90_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon53:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon92_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon92_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon92_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon92_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon56;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon56:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.security.Key$getEncoded$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r14);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon93_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon93_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon93_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon60:
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r15 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon95_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon95_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon95_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r15
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon63;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon63:
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon96_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon96_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon96_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon96_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon66;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon66:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception := unsafe.java.util.Map$put$java.lang.Object_java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r35);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon97_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon97_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon97_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block48:
    assert {:sourceloc "OSecurityManager.java", 298, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$r35;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon97_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon98_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon98_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon98_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon98_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon95_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r15
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon93_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon94_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon94_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon94_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon90_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon91_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon91_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon91_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon91_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon87_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon88_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon88_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon88_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon88_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$anon75_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$r11
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$Return:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r5 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$return;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon0$1;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r7 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_2;
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r7);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$in_parameter__0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r5;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$5$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$Return:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$return;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$5$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon0$2;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r9, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r7, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r8);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon16_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon16_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon16_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r9
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_3;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon16_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r9
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon3;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon3:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r10, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r9, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$in_parameter__0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$r4;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$6$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$Return:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$return;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$6$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon3$1;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon3$1:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon17_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon17_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon17_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r10
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_4;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon17_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r10
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon6;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon6:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r12, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r10, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r11);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon18_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon18_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon18_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r12
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_5;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon18_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r12
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon9;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon9:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r13, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r12, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon19_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon19_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon19_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r13
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_6;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon19_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r13
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon12;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon12:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r14, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r13, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$i0);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon20_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon20_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon20_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r14
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$fakelocal_7;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon20_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r14
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon15;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$anon15:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r15, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r14);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$return := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$r15;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$block41;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$block41:
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$Return:
    r23 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$return;
    $exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$1$$exception;
    goto anon24$1;

  anon24$1:
    assert {:sourceloc "OSecurityManager.java", 215, -1, -1, -1} true;
    goto block32;

  anon40_Then:
    assume {:partition} $z3 == 0;
    assert {:sourceloc "OSecurityManager.java", 214, -1, -1, -1} {:comment "thenblock"} true;
    goto block34;

  block34:
    assert {:sourceloc "OSecurityManager.java", 218, -1, -1, -1} true;
    call $fakelocal_11 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    $r8 := $fakelocal_11;
    assert {:sourceloc "OSecurityManager.java", 218, -1, -1, -1} true;
    call $fakelocal_12 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r9 := $fakelocal_12;
    assert {:sourceloc "OSecurityManager.java", 218, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$($r9);
    assert {:sourceloc "OSecurityManager.java", 218, -1, -1, -1} true;
    call $r10, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r9, unsafe.$StringConst10);
    assert {:sourceloc "OSecurityManager.java", 218, -1, -1, -1} true;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} $r10 == unsafe.$null;
    call $fakelocal_13 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_13;
    return;

  anon42_Then:
    assume {:partition} $r10 != unsafe.$null;
    $exception := $exception;
    goto anon27;

  anon27:
    call $r11, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r10, r2);
    assert {:sourceloc "OSecurityManager.java", 218, -1, -1, -1} true;
    goto anon43_Then, anon43_Else;

  anon43_Else:
    assume {:partition} $r11 == unsafe.$null;
    call $fakelocal_14 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_14;
    return;

  anon43_Then:
    assume {:partition} $r11 != unsafe.$null;
    $exception := $exception;
    goto anon30;

  anon30:
    call $r12, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r11, unsafe.$StringConst11);
    assert {:sourceloc "OSecurityManager.java", 218, -1, -1, -1} true;
    goto anon44_Then, anon44_Else;

  anon44_Else:
    assume {:partition} $r12 == unsafe.$null;
    call $fakelocal_15 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_15;
    return;

  anon44_Then:
    assume {:partition} $r12 != unsafe.$null;
    $exception := $exception;
    goto anon33;

  anon33:
    call $r13, $exception := unsafe.java.lang.StringBuilder$toString$($r12);
    assert {:sourceloc "OSecurityManager.java", 218, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String($r8, $r13);
    assert {:sourceloc "OSecurityManager.java", 218, -1, -1, -1} true;
    $exception := $r8;
    goto block35;

  anon36_Then:
    assume {:partition} z0 == 0;
    assert {:sourceloc "OSecurityManager.java", 202, -1, -1, -1} {:comment "thenblock"} true;
    goto block30;
}



implementation unsafe.OSecurityManager$digestSHA256$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var $r4: ref;
  var $r6: ref;
  var $r3: ref;
  var r0: ref;
  var r12: ref;
  var $fakelocal_0: ref;
  var $r5: ref;
  var $r7: ref;
  var $r8: ref;
  var $r10: ref;
  var $fakelocal_3: ref;
  var r11: ref;
  var $fakelocal_1: ref;
  var $fakelocal_4: ref;
  var r1: ref;
  var r2: ref;
  var $fakelocal_2: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    $return := unsafe.$null;
    goto block39;

  block39:
    return;

  anon20_Then:
    assume {:partition} r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto block36;

  block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    $r3 := unsafe.$heap[r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call $r4, $exception := unsafe.java.lang.String$getBytes$java.lang.String(r1, unsafe.$StringConst2);
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon7;

  anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto anon23_Then, anon23_Else;

  anon23_Else:
    assume {:partition} $r3 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon23_Then:
    assume {:partition} $r3 != unsafe.$null;
    $exception := $exception;
    goto anon10;

  anon10:
    call $r5, $exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$($r3, $r4);
    goto anon24_Then, anon24_Else;

  anon24_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block38;

  block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    $return := $r5;
    goto block39;

  anon24_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon25_Then, anon25_Else;

  anon25_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto block38;

  anon25_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto block37;

  block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r6 := $exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    r2 := $r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call $r7, $exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[$fakelocal_1 := 0];
    $r8 := $fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} $r7 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon26_Then:
    assume {:partition} $r7 != unsafe.$null;
    $exception := $exception;
    goto anon16;

  anon16:
    call $exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$($r7, r0, unsafe.$StringConst12, r2, $r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call $fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    r11 := $fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call $exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call $r10, $exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(r11, r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} !(unsafe.$heap[$r10, unsafe.$type] <: unsafe.java.lang.Throwable);
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := unsafe.$null;
    $exception := $fakelocal_4;
    return;

  anon27_Then:
    assume {:partition} unsafe.$heap[$r10, unsafe.$type] <: unsafe.java.lang.Throwable;
    $exception := $exception;
    goto anon19;

  anon19:
    r12 := $r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    $exception := r12;
    goto block39;

  anon21_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto anon7;

  anon22_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    $return := unsafe.$null;
    goto block37;
}



implementation unsafe.OSecurityManager$createHashWithSalt$java.lang.String($this: ref, $in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var r1: ref;
  var $r3: ref;
  var $fakelocal_0: ref;
  var $i0: int;
  var r0: ref;
  var $r2: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_6: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r3: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_7: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$i0: int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r6: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_5: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r2: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r11: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r0: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r5: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r15: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r1: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$this: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__1: int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__2: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r2: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 240, -1, -1, -1} true;
    $r2 := unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration$com.orientechnologies.orient.core.config.OGlobalConfiguration$SECURITY_USER_PASSWORD_SALT_ITERATIONS367;
    assert {:sourceloc "OSecurityManager.java", 240, -1, -1, -1} true;
    goto anon4_Then, anon4_Else;

  anon4_Else:
    assume {:partition} $r2 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon4_Then:
    assume {:partition} $r2 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $i0, $exception := unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration$getValueAsInteger$($r2);
    assert {:sourceloc "OSecurityManager.java", 240, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Entry;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Entry:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$this := r0;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__0 := r1;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__1 := $i0;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__2 := unsafe.$StringConst7;
    havoc inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_6, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r3, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_4, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_7, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_3, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_2, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$i0, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r8, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r6, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_1, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_5, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r2, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r11, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r0, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r7, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_0, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r5, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r15, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r1, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__2, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r1 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$i0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r2 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.security.SecureRandom);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r6 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.security.SecureRandom$$la$init$ra$$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r6);
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r3 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r6;
    assert {:sourceloc "OSecurityManager.java", 246, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_1 := 24];
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 247, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r3, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4);
    assert {:sourceloc "OSecurityManager.java", 250, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r1;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$i0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3 := 24;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r2;
    havoc inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4;
    assert {:sourceloc "OSecurityManager.java", 275, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32 := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$this := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10;
    havoc inline$OSecurityManager$createSHA256$java.lang.String$0$r1, inline$OSecurityManager$createSHA256$java.lang.String$0$$r2, inline$OSecurityManager$createSHA256$java.lang.String$0$r0, inline$OSecurityManager$createSHA256$java.lang.String$0$$r3, inline$OSecurityManager$createSHA256$java.lang.String$0$$return, inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r1 := inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$this := inline$OSecurityManager$createSHA256$java.lang.String$0$r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, inline$OSecurityManager$digestSHA256$java.lang.String$0$r12, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$return, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$return := inline$OSecurityManager$createSHA256$java.lang.String$0$$r3;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$block27;

  inline$OSecurityManager$createSHA256$java.lang.String$0$block27:
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Return:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4 := inline$OSecurityManager$createSHA256$java.lang.String$0$$return;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1:
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4;
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Arrays$toString$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$get$java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49:
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45:
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14 := unsafe.$new(unsafe.javax.crypto.spec.PBEKeySpec);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14;
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$toCharArray$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2 := unsafe.$mulInt(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, 
  8);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.spec.PBEKeySpec$$la$init$ra$$char$lp$$rp$_byte$lp$$rp$_int_int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46:
    assert {:sourceloc "OSecurityManager.java", 290, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$getInstance$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 299, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OSecurityException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OSecurityException$$la$init$ra$$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, unsafe.$StringConst16);
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$generateSecret$java.security.spec.KeySpec(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.security.Key$getEncoded$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60:
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63:
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$put$java.lang.Object_java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48:
    assert {:sourceloc "OSecurityManager.java", 298, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r5 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0$1;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r7 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_2;
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r7);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r5;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0$2;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r7, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r8);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon16_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon16_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon16_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon16_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon3;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon3:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r9, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$r4;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return:
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon3$1;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon3$1:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon17_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon17_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon17_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon17_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon6;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon6:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r10, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r11);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon18_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon18_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon18_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_5;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon9;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon9:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r12, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon19_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon19_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon19_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_6;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon12;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon12:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r13, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$i0);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon20_Then, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon20_Else;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14
   == unsafe.$null;
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$fakelocal_7;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14
   != unsafe.$null;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon15;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$anon15:
    call inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r15, inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r14);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$r15;
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$block41;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$block41:
    goto inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return;

  inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$Return:
    $r3 := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$return;
    $exception := inline$OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String$0$$exception;
    goto anon3$1;

  anon3$1:
    assert {:sourceloc "OSecurityManager.java", 240, -1, -1, -1} true;
    $return := $r3;
    goto block40;

  block40:
    return;
}



implementation unsafe.OSecurityManager$createHashWithSalt$java.lang.String_int_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: int, $in_parameter__2: ref)
   returns ($return: ref, $exception: ref)
{
  var $r13: ref;
  var $fakelocal_6: ref;
  var r3: ref;
  var r4: ref;
  var $fakelocal_4: ref;
  var $fakelocal_7: ref;
  var $fakelocal_3: ref;
  var $r14: ref;
  var $r12: ref;
  var $fakelocal_2: ref;
  var i0: int;
  var $r8: ref;
  var $r6: ref;
  var $fakelocal_1: ref;
  var $fakelocal_5: ref;
  var r2: ref;
  var $r11: ref;
  var $r10: ref;
  var r0: ref;
  var $r7: ref;
  var $fakelocal_0: ref;
  var $r9: ref;
  var r5: ref;
  var $r15: ref;
  var r1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r2: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__2, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    i0 := $in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.security.SecureRandom);
    $r6 := $fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    call $exception := unsafe.java.security.SecureRandom$$la$init$ra$$($r6);
    assert {:sourceloc "OSecurityManager.java", 245, -1, -1, -1} true;
    r3 := $r6;
    assert {:sourceloc "OSecurityManager.java", 246, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[$fakelocal_1 := 24];
    r4 := $fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 247, -1, -1, -1} true;
    call $exception := unsafe.java.security.SecureRandom$nextBytes$byte$lp$$rp$(r3, r4);
    assert {:sourceloc "OSecurityManager.java", 250, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this := r0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0 := r1;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1 := r4;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2 := i0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3 := 24;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4 := r2;
    havoc inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4;
    assert {:sourceloc "OSecurityManager.java", 275, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32 := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$this := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10;
    havoc inline$OSecurityManager$createSHA256$java.lang.String$0$r1, inline$OSecurityManager$createSHA256$java.lang.String$0$$r2, inline$OSecurityManager$createSHA256$java.lang.String$0$r0, inline$OSecurityManager$createSHA256$java.lang.String$0$$r3, inline$OSecurityManager$createSHA256$java.lang.String$0$$return, inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r1 := inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$this := inline$OSecurityManager$createSHA256$java.lang.String$0$r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, inline$OSecurityManager$digestSHA256$java.lang.String$0$r12, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$return, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$return := inline$OSecurityManager$createSHA256$java.lang.String$0$$r3;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$block27;

  inline$OSecurityManager$createSHA256$java.lang.String$0$block27:
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Return:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4 := inline$OSecurityManager$createSHA256$java.lang.String$0$$return;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1:
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4;
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Arrays$toString$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$get$java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49:
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45:
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14 := unsafe.$new(unsafe.javax.crypto.spec.PBEKeySpec);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14;
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$toCharArray$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2 := unsafe.$mulInt(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, 
  8);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.spec.PBEKeySpec$$la$init$ra$$char$lp$$rp$_byte$lp$$rp$_int_int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46:
    assert {:sourceloc "OSecurityManager.java", 290, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$getInstance$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 299, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OSecurityException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OSecurityException$$la$init$ra$$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, unsafe.$StringConst16);
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$generateSecret$java.security.spec.KeySpec(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.security.Key$getEncoded$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60:
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63:
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$put$java.lang.Object_java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48:
    assert {:sourceloc "OSecurityManager.java", 298, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return:
    r5 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return;
    $exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.StringBuilder);
    $r7 := $fakelocal_2;
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$($r7);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0 := r5;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$1$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$Return:
    $r8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$return;
    $exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$1$$exception;
    goto anon0$2;

  anon0$2:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    call $r9, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r7, $r8);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto anon16_Then, anon16_Else;

  anon16_Else:
    assume {:partition} $r9 == unsafe.$null;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon16_Then:
    assume {:partition} $r9 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $r10, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r9, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0 := r4;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$2$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$Return:
    $r11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$return;
    $exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$2$$exception;
    goto anon3$1;

  anon3$1:
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} $r10 == unsafe.$null;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_4;
    return;

  anon17_Then:
    assume {:partition} $r10 != unsafe.$null;
    $exception := $exception;
    goto anon6;

  anon6:
    call $r12, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r10, $r11);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} $r12 == unsafe.$null;
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_5;
    return;

  anon18_Then:
    assume {:partition} $r12 != unsafe.$null;
    $exception := $exception;
    goto anon9;

  anon9:
    call $r13, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r12, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} $r13 == unsafe.$null;
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_6;
    return;

  anon19_Then:
    assume {:partition} $r13 != unsafe.$null;
    $exception := $exception;
    goto anon12;

  anon12:
    call $r14, $exception := unsafe.java.lang.StringBuilder$append$int($r13, i0);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} $r14 == unsafe.$null;
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_7;
    return;

  anon20_Then:
    assume {:partition} $r14 != unsafe.$null;
    $exception := $exception;
    goto anon15;

  anon15:
    call $r15, $exception := unsafe.java.lang.StringBuilder$toString$($r14);
    assert {:sourceloc "OSecurityManager.java", 252, -1, -1, -1} true;
    $return := $r15;
    goto block41;

  block41:
    return;
}



implementation unsafe.OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref)
   returns ($return: int, $exception: ref)
{
  var r1: ref;
  var $z0: int;
  var r0: ref;
  var r2: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i2: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r1: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$i0: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_6: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r7: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r11: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r9: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i1: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_5: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r0: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r3: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r6: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$z0: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$this: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__1: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__2: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r2: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", 256, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Entry;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Entry:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$this := r0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__0 := r1;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__1 := r2;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__2 := unsafe.$StringConst7;
    havoc inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i2, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_1, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r1, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$i0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_6, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r7, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r11, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_2, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_4, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r9, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i1, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_5, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r3, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r10, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r6, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$z0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_3, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r8, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon0;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__1, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__2, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r1 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r3 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", 261, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon26_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon26_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon26_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2
   == unsafe.$null;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon26_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2
   != unsafe.$null;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon3;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon3:
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := unsafe.java.lang.String$split$java.lang.String(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r2, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon27_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon27_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon27_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4
   == unsafe.$null;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_1;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon27_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4
   != unsafe.$null;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon6;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon6:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i1 := unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4];
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon28_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon28_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon28_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i1
   != 3;
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon9;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r11 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_2;
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r11, unsafe.$StringConst14);
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r11;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$block44;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$block44:
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon28_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i1
   == 3;
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$block43;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$block43:
    assert {:sourceloc "OSecurityManager.java", 265, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon29_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon29_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon29_Else:
    assume {:partition} !(0
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 0 >= 0);
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon29_Then:
    assume {:partition} 0
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 0 >= 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon12;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon12:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r8 := unsafe.$refArrHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4][0];
    assert {:sourceloc "OSecurityManager.java", 265, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r8;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1, inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1, inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon0;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0 := unsafe.$stringSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0];
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Else:
    assume {:partition} 2 == 0;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Then:
    assume {:partition} 2 != 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon3;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon3:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1 := unsafe.$divInt(inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0, 2);
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1];
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := 0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$block58:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1
   == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1][inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
   + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3
   + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1
   != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$exit:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58$1;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58$1:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58_last;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3 + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1][inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block59;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block59:
    assert {:sourceloc "OSecurityManager.java", 324, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block60;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block60:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58_last:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon12$1;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon12$1:
    assert {:sourceloc "OSecurityManager.java", 266, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon30_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon30_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon30_Else:
    assume {:partition} !(1
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 1 >= 0);
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon30_Then:
    assume {:partition} 1
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 1 >= 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon15;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon15:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r9 := unsafe.$refArrHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4][1];
    assert {:sourceloc "OSecurityManager.java", 266, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r9;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1, inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1, inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon0;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0 := unsafe.$stringSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0];
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Else:
    assume {:partition} 2 == 0;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Then:
    assume {:partition} 2 != 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon3;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon3:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1 := unsafe.$divInt(inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0, 2);
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1];
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := 0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$block58:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1
   == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1][inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
   + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3
   + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r0, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1
   != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$exit:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58$1;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58$1:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58_last;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3 + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1][inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block59;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block59:
    assert {:sourceloc "OSecurityManager.java", 324, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block60;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block60:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58_last:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r6 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon15$1;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon15$1:
    assert {:sourceloc "OSecurityManager.java", 267, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon31_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon31_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon31_Else:
    assume {:partition} !(2
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 2 >= 0);
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_5;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon31_Then:
    assume {:partition} 2
     < unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4]
   && 2 >= 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon18;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon18:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r10 := unsafe.$refArrHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r4][2];
    assert {:sourceloc "OSecurityManager.java", 267, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$i0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := unsafe.java.lang.Integer$parseInt$java.lang.String(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$r10);
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon32_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon32_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon32_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon22;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon22:
    assert {:sourceloc "OSecurityManager.java", 269, -1, -1, -1} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon34_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon34_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon34_Else:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5
   == unsafe.$null;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$fakelocal_6;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5
   != unsafe.$null;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon25;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon25:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5];
    assert {:sourceloc "OSecurityManager.java", 269, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r1;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r6;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$i0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$i2;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r3;
    havoc inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4;
    assert {:sourceloc "OSecurityManager.java", 275, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32 := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$this := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10;
    havoc inline$OSecurityManager$createSHA256$java.lang.String$0$r1, inline$OSecurityManager$createSHA256$java.lang.String$0$$r2, inline$OSecurityManager$createSHA256$java.lang.String$0$r0, inline$OSecurityManager$createSHA256$java.lang.String$0$$r3, inline$OSecurityManager$createSHA256$java.lang.String$0$$return, inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r1 := inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$this := inline$OSecurityManager$createSHA256$java.lang.String$0$r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, inline$OSecurityManager$digestSHA256$java.lang.String$0$r12, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$return, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$return := inline$OSecurityManager$createSHA256$java.lang.String$0$$r3;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$block27;

  inline$OSecurityManager$createSHA256$java.lang.String$0$block27:
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Return:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4 := inline$OSecurityManager$createSHA256$java.lang.String$0$$return;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1:
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4;
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Arrays$toString$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$get$java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49:
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45:
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14 := unsafe.$new(unsafe.javax.crypto.spec.PBEKeySpec);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14;
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$toCharArray$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2 := unsafe.$mulInt(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, 
  8);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.spec.PBEKeySpec$$la$init$ra$$char$lp$$rp$_byte$lp$$rp$_int_int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46:
    assert {:sourceloc "OSecurityManager.java", 290, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$getInstance$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 299, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OSecurityException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OSecurityException$$la$init$ra$$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, unsafe.$StringConst16);
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$generateSecret$java.security.spec.KeySpec(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.security.Key$getEncoded$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60:
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63:
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$put$java.lang.Object_java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48:
    assert {:sourceloc "OSecurityManager.java", 298, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return:
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r7 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon25$1;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon25$1:
    assert {:sourceloc "OSecurityManager.java", 270, -1, -1, -1} true;
    call inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$z0, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception := unsafe.java.security.MessageDigest$isEqual$byte$lp$$rp$_byte$lp$$rp$(inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r5, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$r7);
    assert {:sourceloc "OSecurityManager.java", 270, -1, -1, -1} true;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$z0;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$block44;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon33_Then, inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon33_Else;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon33_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon22;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$anon33_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return := 0;
    goto inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return;

  inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$Return:
    $z0 := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$return;
    $exception := inline$OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "OSecurityManager.java", 256, -1, -1, -1} true;
    $return := $z0;
    goto block42;

  block42:
    return;
}



implementation unsafe.OSecurityManager$checkPasswordWithSalt$java.lang.String_java.lang.String_java.lang.String($this: ref, $in_parameter__0: ref, $in_parameter__1: ref, $in_parameter__2: ref)
   returns ($return: int, $exception: ref)
{
  var $i2: int;
  var $fakelocal_1: ref;
  var r1: ref;
  var i0: int;
  var $fakelocal_6: ref;
  var r4: ref;
  var r7: ref;
  var $r11: ref;
  var $fakelocal_2: ref;
  var $fakelocal_4: ref;
  var r5: ref;
  var $r9: ref;
  var $i1: int;
  var $fakelocal_5: ref;
  var r2: ref;
  var r0: ref;
  var r3: ref;
  var $r10: ref;
  var r6: ref;
  var $z0: int;
  var $fakelocal_3: ref;
  var $fakelocal_0: ref;
  var $r8: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String$1$$heap: $heap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r2: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__1, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__2, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r3 := $in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", 261, -1, -1, -1} true;
    goto anon26_Then, anon26_Else;

  anon26_Else:
    assume {:partition} r2 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := 0;
    $exception := $fakelocal_0;
    return;

  anon26_Then:
    assume {:partition} r2 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call r4, $exception := unsafe.java.lang.String$split$java.lang.String(r2, unsafe.$StringConst13);
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} true;
    goto anon27_Then, anon27_Else;

  anon27_Else:
    assume {:partition} r4 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := 0;
    $exception := $fakelocal_1;
    return;

  anon27_Then:
    assume {:partition} r4 != unsafe.$null;
    $exception := $exception;
    goto anon6;

  anon6:
    $i1 := unsafe.$arrSizeHeap[r4];
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} true;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} $i1 != 3;
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} {:comment "elseblock"} true;
    goto anon9;

  anon9:
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.IllegalArgumentException);
    $r11 := $fakelocal_2;
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    call $exception := unsafe.java.lang.IllegalArgumentException$$la$init$ra$$java.lang.String($r11, unsafe.$StringConst14);
    assert {:sourceloc "OSecurityManager.java", 263, -1, -1, -1} true;
    $exception := $r11;
    goto block44;

  block44:
    return;

  anon28_Then:
    assume {:partition} $i1 == 3;
    assert {:sourceloc "OSecurityManager.java", 262, -1, -1, -1} {:comment "thenblock"} true;
    goto block43;

  block43:
    assert {:sourceloc "OSecurityManager.java", 265, -1, -1, -1} true;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} !(0 < unsafe.$arrSizeHeap[r4] && 0 >= 0);
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_3;
    return;

  anon29_Then:
    assume {:partition} 0 < unsafe.$arrSizeHeap[r4] && 0 >= 0;
    $exception := $exception;
    goto anon12;

  anon12:
    $r8 := unsafe.$refArrHeap[r4][0];
    assert {:sourceloc "OSecurityManager.java", 265, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0 := $r8;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1, inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1, inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon0;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0 := unsafe.$stringSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0];
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Else:
    assume {:partition} 2 == 0;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon17_Then:
    assume {:partition} 2 != 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon3;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon3:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1 := unsafe.$divInt(inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i0, 2);
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i1];
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := 0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$block58:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1
   == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1][inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
   + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3
   + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1
   != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$exit:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58$1;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58$1:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58_last;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i3 + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String$0$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String$0$$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1][inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8 + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$0$i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String$0$$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block59;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block59:
    assert {:sourceloc "OSecurityManager.java", 324, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return := inline$OSecurityManager$hexToByteArray$java.lang.String$0$r1;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$block60;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block60:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$block58_last:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$0$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$0$Return:
    r5 := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$return;
    $exception := inline$OSecurityManager$hexToByteArray$java.lang.String$0$$exception;
    goto anon12$1;

  anon12$1:
    assert {:sourceloc "OSecurityManager.java", 266, -1, -1, -1} true;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} !(1 < unsafe.$arrSizeHeap[r4] && 1 >= 0);
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_4;
    return;

  anon30_Then:
    assume {:partition} 1 < unsafe.$arrSizeHeap[r4] && 1 >= 0;
    $exception := $exception;
    goto anon15;

  anon15:
    $r9 := unsafe.$refArrHeap[r4][1];
    assert {:sourceloc "OSecurityManager.java", 266, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0 := $r9;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1, inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1, inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon0;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0 := unsafe.$stringSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0];
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Else:
    assume {:partition} 2 == 0;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon17_Then:
    assume {:partition} 2 != 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon3;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon3:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1 := unsafe.$divInt(inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i0, 2);
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i1];
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := 0;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r0 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$block58:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1
   == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1][inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
   + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
     >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3
   + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r0, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$in_r1
   != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$exit:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$Return:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$1$out_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58$1;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58$1:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58_last;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_2;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i3 + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String$1$r0, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i5, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6, inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String$1$$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$fakelocal_3;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1][inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8 + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String$1$i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String$1$$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block59;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block59:
    assert {:sourceloc "OSecurityManager.java", 324, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return := inline$OSecurityManager$hexToByteArray$java.lang.String$1$r1;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$block60;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block60:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$block58_last:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String$1$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String$1$Return:
    r6 := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$return;
    $exception := inline$OSecurityManager$hexToByteArray$java.lang.String$1$$exception;
    goto anon15$1;

  anon15$1:
    assert {:sourceloc "OSecurityManager.java", 267, -1, -1, -1} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} !(2 < unsafe.$arrSizeHeap[r4] && 2 >= 0);
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := 0;
    $exception := $fakelocal_5;
    return;

  anon31_Then:
    assume {:partition} 2 < unsafe.$arrSizeHeap[r4] && 2 >= 0;
    $exception := $exception;
    goto anon18;

  anon18:
    $r10 := unsafe.$refArrHeap[r4][2];
    assert {:sourceloc "OSecurityManager.java", 267, -1, -1, -1} true;
    call i0, $exception := unsafe.java.lang.Integer$parseInt$java.lang.String($r10);
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon22;

  anon22:
    assert {:sourceloc "OSecurityManager.java", 269, -1, -1, -1} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} r5 == unsafe.$null;
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := 0;
    $exception := $fakelocal_6;
    return;

  anon34_Then:
    assume {:partition} r5 != unsafe.$null;
    $exception := $exception;
    goto anon25;

  anon25:
    $i2 := unsafe.$arrSizeHeap[r5];
    assert {:sourceloc "OSecurityManager.java", 269, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Entry:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this := r0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0 := r1;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1 := r6;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2 := i0;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3 := $i2;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4 := r3;
    havoc inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this
   != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__3;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$in_parameter__4;
    assert {:sourceloc "OSecurityManager.java", 275, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32 := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r37, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon73_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon3:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r7, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r38);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_3;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon74_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r9);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$this := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r0;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r10;
    havoc inline$OSecurityManager$createSHA256$java.lang.String$0$r1, inline$OSecurityManager$createSHA256$java.lang.String$0$$r2, inline$OSecurityManager$createSHA256$java.lang.String$0$r0, inline$OSecurityManager$createSHA256$java.lang.String$0$$r3, inline$OSecurityManager$createSHA256$java.lang.String$0$$return, inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r1 := inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$this := inline$OSecurityManager$createSHA256$java.lang.String$0$r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, inline$OSecurityManager$digestSHA256$java.lang.String$0$r12, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$return, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$return := inline$OSecurityManager$createSHA256$java.lang.String$0$$r3;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$block27;

  inline$OSecurityManager$createSHA256$java.lang.String$0$block27:
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Return:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4 := inline$OSecurityManager$createSHA256$java.lang.String$0$$return;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon6$1:
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.StringBuilder);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_4;
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r39, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r4);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_5;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon76_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon12:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r19, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Arrays$toString$byte$lp$$rp$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_6;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon77_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon15:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r20, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r21);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_7;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon78_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon18:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r22, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_8;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon79_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon21:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r23, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_9;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon80_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon24:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r24, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_10;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon81_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon27:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$append$int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r25, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_11;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon82_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon30:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.StringBuilder$toString$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r26);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_12;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon83_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon33:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$get$java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r27, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_13;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon84_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28, unsafe.$type]
   <: unsafe.$intArrayType;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon36:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r28;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon39:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49:
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon85_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r33
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45:
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14 := unsafe.$new(unsafe.javax.crypto.spec.PBEKeySpec);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_14;
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   == unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_15;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon86_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1
   != unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon42:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.lang.String$toCharArray$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r1);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2 := unsafe.$mulInt(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i1, 
  8);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.spec.PBEKeySpec$$la$init$ra$$char$lp$$rp$_byte$lp$$rp$_int_int(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r13, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r2, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$i0, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$i2);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r40;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block46:
    assert {:sourceloc "OSecurityManager.java", 290, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$getInstance$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r3);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 299, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r29;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OSecurityException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_17;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OSecurityException$$la$init$ra$$java.lang.String(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, unsafe.$StringConst16);
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r41, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r36);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_18;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon99_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon72:
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r31;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r42;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon89_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon49:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.javax.crypto.SecretKeyFactory$generateSecret$java.security.spec.KeySpec(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r5, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r34);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon92_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon56:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.security.Key$getEncoded$(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r14);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60:
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon63:
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    assert {:noverify} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon96_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16
   != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon66:
    call inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$fakelocal_16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception := unsafe.java.util.Map$put$java.lang.Object_java.lang.Object(inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r16, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r32, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35);
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Else:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48:
    assert {:sourceloc "OSecurityManager.java", 298, -1, -1, -1} true;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$r35;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block49;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon97_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon98_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon95_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r15
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block48;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon93_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon60;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon94_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon90_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon53;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon91_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon87_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then, inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon46;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon88_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block47;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$anon75_Then:
    assume {:partition} inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$r11
   == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$block45;

  inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$Return:
    r7 := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$return;
    $exception := inline$OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String$0$$exception;
    goto anon25$1;

  anon25$1:
    assert {:sourceloc "OSecurityManager.java", 270, -1, -1, -1} true;
    call $z0, $exception := unsafe.java.security.MessageDigest$isEqual$byte$lp$$rp$_byte$lp$$rp$(r5, r7);
    assert {:sourceloc "OSecurityManager.java", 270, -1, -1, -1} true;
    $return := $z0;
    goto block44;

  anon32_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto anon22;

  anon33_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.NumberFormatException;
    $return := 0;
    return;
}



implementation unsafe.OSecurityManager$getPbkdf2$java.lang.String_byte$lp$$rp$_int_int_java.lang.String($this: ref, 
    $in_parameter__0: ref, 
    $in_parameter__1: ref, 
    $in_parameter__2: int, 
    $in_parameter__3: int, 
    $in_parameter__4: ref)
   returns ($return: ref, $exception: ref)
{
  var r37: ref;
  var $fakelocal_9: ref;
  var $r29: ref;
  var $fakelocal_5: ref;
  var $r16: ref;
  var $r22: ref;
  var $fakelocal_6: ref;
  var $r21: ref;
  var r33: ref;
  var $fakelocal_2: ref;
  var r1: ref;
  var $r19: ref;
  var $r24: ref;
  var $r27: ref;
  var $fakelocal_11: ref;
  var $r25: ref;
  var r42: ref;
  var $r7: ref;
  var r36: ref;
  var r32: ref;
  var $r23: ref;
  var $fakelocal_8: ref;
  var $fakelocal_12: ref;
  var $r15: ref;
  var $fakelocal_7: ref;
  var r41: ref;
  var r35: ref;
  var r39: ref;
  var $r10: ref;
  var $r28: ref;
  var $fakelocal_3: ref;
  var r34: ref;
  var $r26: ref;
  var $fakelocal_16: ref;
  var $r9: ref;
  var i0: int;
  var $fakelocal_1: ref;
  var r38: ref;
  var $fakelocal_10: ref;
  var $r11: ref;
  var r3: ref;
  var $fakelocal_17: ref;
  var $fakelocal_4: ref;
  var $fakelocal_15: ref;
  var $fakelocal_18: ref;
  var $fakelocal_0: ref;
  var $fakelocal_13: ref;
  var $r20: ref;
  var $r14: ref;
  var r2: ref;
  var $r31: ref;
  var r40: ref;
  var $fakelocal_14: ref;
  var r0: ref;
  var i1: int;
  var r4: ref;
  var $r13: ref;
  var r5: ref;
  var $i2: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r2: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r12: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r11: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r1: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$r2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$this: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$return: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception: ref;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex: int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap: $heap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} $this != unsafe.$null;
    assume unsafe.$heap[$in_parameter__4, unsafe.$type] <: unsafe.java.lang.String;
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r1 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r2 := $in_parameter__1;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    i0 := $in_parameter__2;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    i1 := $in_parameter__3;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r3 := $in_parameter__4;
    assert {:sourceloc "OSecurityManager.java", 275, -1, -1, -1} true;
    r32 := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.StringBuilder);
    r37 := $fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(r37);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call $r7, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String(r37, r1);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.String);
    r38 := $fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    call $exception := unsafe.java.lang.String$$la$init$ra$$byte$lp$$rp$(r38, r2);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto anon73_Then, anon73_Else;

  anon73_Else:
    assume {:partition} $r7 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon73_Then:
    assume {:partition} $r7 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call $r9, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r7, r38);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto anon74_Then, anon74_Else;

  anon74_Else:
    assume {:partition} $r9 == unsafe.$null;
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon74_Then:
    assume {:partition} $r9 != unsafe.$null;
    $exception := $exception;
    goto anon6;

  anon6:
    call $r10, $exception := unsafe.java.lang.StringBuilder$toString$($r9);
    assert {:sourceloc "OSecurityManager.java", 277, -1, -1, -1} true;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$this := r0;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0 := $r10;
    havoc inline$OSecurityManager$createSHA256$java.lang.String$0$r1, inline$OSecurityManager$createSHA256$java.lang.String$0$$r2, inline$OSecurityManager$createSHA256$java.lang.String$0$r0, inline$OSecurityManager$createSHA256$java.lang.String$0$$r3, inline$OSecurityManager$createSHA256$java.lang.String$0$$return, inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$heap := unsafe.$heap;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$intArrHeap := unsafe.$intArrHeap;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$createSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    assume unsafe.$heap[inline$OSecurityManager$createSHA256$java.lang.String$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$r1 := inline$OSecurityManager$createSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Entry:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$this := inline$OSecurityManager$createSHA256$java.lang.String$0$r0;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$r1;
    havoc inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, inline$OSecurityManager$digestSHA256$java.lang.String$0$r12, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3, inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4, inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$return, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$digestSHA256$java.lang.String$0$$this != unsafe.$null;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r0 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$this;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block39:
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$r1 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 226, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block36;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block36:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 := unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266];
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.lang.String$getBytes$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r1, unsafe.$StringConst2);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_0;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon23_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon10:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.java.security.MessageDigest$digest$byte$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r3, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r4);
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   == unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block38:
    assert {:sourceloc "OSecurityManager.java", 230, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r5;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon24_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block38;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon25_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$block37:
    assert {:sourceloc "OSecurityManager.java", 227, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 231, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r6;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1 := 0];
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 233, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Else:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 == unsafe.$null;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_2;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon26_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7 != unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon16:
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$digestSHA256$java.lang.String$0$$r7, inline$OSecurityManager$digestSHA256$java.lang.String$0$r0, unsafe.$StringConst12, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2, inline$OSecurityManager$digestSHA256$java.lang.String$0$$r8);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OConfigurationException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r11 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_3;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.orient.core.exception.OConfigurationException$$la$init$ra$$java.lang.String(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, unsafe.$StringConst12);
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(inline$OSecurityManager$digestSHA256$java.lang.String$0$r11, inline$OSecurityManager$digestSHA256$java.lang.String$0$r2);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable);
    call inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ClassCastException);
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$fakelocal_4;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon27_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon19:
    inline$OSecurityManager$digestSHA256$java.lang.String$0$r12 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$r10;
    assert {:sourceloc "OSecurityManager.java", 235, -1, -1, -1} true;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$r12;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block39;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon21_Then:
    assume {:partition} inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception
   != unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then, inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException);
    assert {:clone} true;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$anon7;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$anon22_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception, unsafe.$type]
   <: unsafe.java.io.UnsupportedEncodingException;
    inline$OSecurityManager$digestSHA256$java.lang.String$0$$return := unsafe.$null;
    goto inline$OSecurityManager$digestSHA256$java.lang.String$0$block37;

  inline$OSecurityManager$digestSHA256$java.lang.String$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r2 := inline$OSecurityManager$digestSHA256$java.lang.String$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$digestSHA256$java.lang.String$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$1:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0 := inline$OSecurityManager$createSHA256$java.lang.String$0$$r2;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return, unsafe.$type]
   <: unsafe.java.lang.String;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon28_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon29_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon6:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4 := unsafe.$mulInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i4];
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := 0;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51$1:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0 != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_3;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_4;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Else:
    assume {:partition} 10 > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := 48 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_5;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i11 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 := 65 + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i7 - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$r2;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block57;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$Return:
    inline$OSecurityManager$createSHA256$java.lang.String$0$$r3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$return;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$$0$$exception;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2;

  inline$OSecurityManager$createSHA256$java.lang.String$0$anon0$2:
    assert {:sourceloc "OSecurityManager.java", 181, -1, -1, -1} true;
    inline$OSecurityManager$createSHA256$java.lang.String$0$$return := inline$OSecurityManager$createSHA256$java.lang.String$0$$r3;
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$block27;

  inline$OSecurityManager$createSHA256$java.lang.String$0$block27:
    goto inline$OSecurityManager$createSHA256$java.lang.String$0$Return;

  inline$OSecurityManager$createSHA256$java.lang.String$0$Return:
    r4 := inline$OSecurityManager$createSHA256$java.lang.String$0$$return;
    $exception := inline$OSecurityManager$createSHA256$java.lang.String$0$$exception;
    goto anon6$1;

  anon6$1:
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    $r11 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} true;
    goto anon75_Then, anon75_Else;

  anon75_Else:
    assume {:partition} $r11 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "elseblock"} true;
    goto anon9;

  anon9:
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.StringBuilder);
    r39 := $fakelocal_4;
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call $exception := unsafe.java.lang.StringBuilder$$la$init$ra$$(r39);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call $r19, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String(r39, r4);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto anon76_Then, anon76_Else;

  anon76_Else:
    assume {:partition} $r19 == unsafe.$null;
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_5;
    return;

  anon76_Then:
    assume {:partition} $r19 != unsafe.$null;
    $exception := $exception;
    goto anon12;

  anon12:
    call $r20, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r19, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    call $r21, $exception := unsafe.java.util.Arrays$toString$byte$lp$$rp$(r2);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto anon77_Then, anon77_Else;

  anon77_Else:
    assume {:partition} $r20 == unsafe.$null;
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_6;
    return;

  anon77_Then:
    assume {:partition} $r20 != unsafe.$null;
    $exception := $exception;
    goto anon15;

  anon15:
    call $r22, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r20, $r21);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto anon78_Then, anon78_Else;

  anon78_Else:
    assume {:partition} $r22 == unsafe.$null;
    call $fakelocal_7 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_7;
    return;

  anon78_Then:
    assume {:partition} $r22 != unsafe.$null;
    $exception := $exception;
    goto anon18;

  anon18:
    call $r23, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r22, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto anon79_Then, anon79_Else;

  anon79_Else:
    assume {:partition} $r23 == unsafe.$null;
    call $fakelocal_8 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_8;
    return;

  anon79_Then:
    assume {:partition} $r23 != unsafe.$null;
    $exception := $exception;
    goto anon21;

  anon21:
    call $r24, $exception := unsafe.java.lang.StringBuilder$append$int($r23, i0);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto anon80_Then, anon80_Else;

  anon80_Else:
    assume {:partition} $r24 == unsafe.$null;
    call $fakelocal_9 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_9;
    return;

  anon80_Then:
    assume {:partition} $r24 != unsafe.$null;
    $exception := $exception;
    goto anon24;

  anon24:
    call $r25, $exception := unsafe.java.lang.StringBuilder$append$java.lang.String($r24, unsafe.$StringConst15);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto anon81_Then, anon81_Else;

  anon81_Else:
    assume {:partition} $r25 == unsafe.$null;
    call $fakelocal_10 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_10;
    return;

  anon81_Then:
    assume {:partition} $r25 != unsafe.$null;
    $exception := $exception;
    goto anon27;

  anon27:
    call $r26, $exception := unsafe.java.lang.StringBuilder$append$int($r25, i1);
    assert {:sourceloc "OSecurityManager.java", 281, -1, -1, -1} true;
    goto anon82_Then, anon82_Else;

  anon82_Else:
    assume {:partition} $r26 == unsafe.$null;
    call $fakelocal_11 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_11;
    return;

  anon82_Then:
    assume {:partition} $r26 != unsafe.$null;
    $exception := $exception;
    goto anon30;

  anon30:
    call r32, $exception := unsafe.java.lang.StringBuilder$toString$($r26);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    $r27 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto anon83_Then, anon83_Else;

  anon83_Else:
    assume {:partition} $r27 == unsafe.$null;
    call $fakelocal_12 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_12;
    return;

  anon83_Then:
    assume {:partition} $r27 != unsafe.$null;
    $exception := $exception;
    goto anon33;

  anon33:
    call $r28, $exception := unsafe.java.util.Map$get$java.lang.Object($r27, r32);
    assert {:sourceloc "OSecurityManager.java", 282, -1, -1, -1} true;
    goto anon84_Then, anon84_Else;

  anon84_Else:
    assume {:partition} !(unsafe.$heap[$r28, unsafe.$type] <: unsafe.$intArrayType);
    call $fakelocal_13 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := unsafe.$null;
    $exception := $fakelocal_13;
    return;

  anon84_Then:
    assume {:partition} unsafe.$heap[$r28, unsafe.$type] <: unsafe.$intArrayType;
    $exception := $exception;
    goto anon36;

  anon36:
    r33 := $r28;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} true;
    goto anon85_Then, anon85_Else;

  anon85_Else:
    assume {:partition} r33 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "elseblock"} true;
    goto anon39;

  anon39:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    $return := r33;
    goto block49;

  block49:
    return;

  anon85_Then:
    assume {:partition} r33 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 283, -1, -1, -1} {:comment "thenblock"} true;
    goto block45;

  block45:
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call $fakelocal_14 := unsafe.$new(unsafe.javax.crypto.spec.PBEKeySpec);
    r40 := $fakelocal_14;
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    goto anon86_Then, anon86_Else;

  anon86_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_15 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $return := unsafe.$null;
    $exception := $fakelocal_15;
    return;

  anon86_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon42;

  anon42:
    call $r13, $exception := unsafe.java.lang.String$toCharArray$(r1);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    $i2 := unsafe.$mulInt(i1, 8);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    call $exception := unsafe.javax.crypto.spec.PBEKeySpec$$la$init$ra$$char$lp$$rp$_byte$lp$$rp$_int_int(r40, $r13, r2, i0, $i2);
    assert {:sourceloc "OSecurityManager.java", 287, -1, -1, -1} true;
    r34 := r40;
    goto block46;

  block46:
    assert {:sourceloc "OSecurityManager.java", 290, -1, -1, -1} true;
    call r5, $exception := unsafe.javax.crypto.SecretKeyFactory$getInstance$java.lang.String(r3);
    goto anon87_Then, anon87_Else;

  anon87_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon46;

  anon46:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto anon89_Then, anon89_Else;

  anon89_Else:
    assume {:partition} r5 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    $return := unsafe.$null;
    call $exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto block47;

  block47:
    assert {:sourceloc "OSecurityManager.java", 284, -1, -1, -1} true;
    assume unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Throwable;
    $r29 := $exception;
    assert {:sourceloc "OSecurityManager.java", 299, -1, -1, -1} true;
    r36 := $r29;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call $fakelocal_17 := unsafe.$new(unsafe.com.orientechnologies.orient.core.exception.OSecurityException);
    r41 := $fakelocal_17;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call $exception := unsafe.com.orientechnologies.orient.core.exception.OSecurityException$$la$init$ra$$java.lang.String(r41, unsafe.$StringConst16);
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    call $r31, $exception := unsafe.com.orientechnologies.common.exception.OException$wrapException$com.orientechnologies.common.exception.OException_java.lang.Throwable(r41, r36);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto anon99_Then, anon99_Else;

  anon99_Else:
    assume {:partition} !(unsafe.$heap[$r31, unsafe.$type] <: unsafe.java.lang.Throwable);
    call $fakelocal_18 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $return := unsafe.$null;
    $exception := $fakelocal_18;
    return;

  anon99_Then:
    assume {:partition} unsafe.$heap[$r31, unsafe.$type] <: unsafe.java.lang.Throwable;
    $exception := $exception;
    goto anon72;

  anon72:
    r42 := $r31;
    assert {:sourceloc "OSecurityManager.java", 300, -1, -1, -1} true;
    $exception := r42;
    goto block49;

  anon89_Then:
    assume {:partition} r5 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto anon49;

  anon49:
    call $r14, $exception := unsafe.javax.crypto.SecretKeyFactory$generateSecret$java.security.spec.KeySpec(r5, r34);
    goto anon90_Then, anon90_Else;

  anon90_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon53;

  anon53:
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto anon92_Then, anon92_Else;

  anon92_Else:
    assume {:partition} $r14 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    assert {:noverify} true;
    $return := unsafe.$null;
    call $exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto block47;

  anon92_Then:
    assume {:partition} $r14 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 291, -1, -1, -1} true;
    goto anon56;

  anon56:
    call r35, $exception := unsafe.java.security.Key$getEncoded$($r14);
    goto anon93_Then, anon93_Else;

  anon93_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon60;

  anon60:
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    $r15 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} true;
    goto anon95_Then, anon95_Else;

  anon95_Else:
    assume {:partition} $r15 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "elseblock"} true;
    goto anon63;

  anon63:
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    $r16 := unsafe.java.util.Map$OSecurityManager$SALT_CACHE267;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto anon96_Then, anon96_Else;

  anon96_Else:
    assume {:partition} $r16 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    assert {:noverify} true;
    $return := unsafe.$null;
    call $exception := unsafe.$new(unsafe.java.lang.RuntimeException);
    goto block47;

  anon96_Then:
    assume {:partition} $r16 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 295, -1, -1, -1} true;
    goto anon66;

  anon66:
    call $fakelocal_16, $exception := unsafe.java.util.Map$put$java.lang.Object_java.lang.Object($r16, r32, r35);
    goto anon97_Then, anon97_Else;

  anon97_Else:
    assume {:partition} $exception == unsafe.$null;
    goto block48;

  block48:
    assert {:sourceloc "OSecurityManager.java", 298, -1, -1, -1} true;
    $return := r35;
    goto block49;

  anon97_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon98_Then, anon98_Else;

  anon98_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto block48;

  anon98_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto block47;

  anon95_Then:
    assume {:partition} $r15 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 293, -1, -1, -1} {:comment "thenblock"} true;
    goto block48;

  anon93_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon94_Then, anon94_Else;

  anon94_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Exception);
    assert {:clone} true;
    goto anon60;

  anon94_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.Exception;
    assert {:clone} true;
    goto block47;

  anon90_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon91_Then, anon91_Else;

  anon91_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException);
    assert {:clone} true;
    goto anon53;

  anon91_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.spec.InvalidKeySpecException;
    $return := unsafe.$null;
    goto block47;

  anon87_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon88_Then, anon88_Else;

  anon88_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto anon46;

  anon88_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    $return := unsafe.$null;
    goto block47;

  anon75_Then:
    assume {:partition} $r11 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 279, -1, -1, -1} {:comment "thenblock"} true;
    goto block45;
}



implementation unsafe.OSecurityManager$byteArrayToHexStr$byte$lp$$rp$($in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var $i7: int;
  var $i3: int;
  var $fakelocal_5: ref;
  var $i11: int;
  var $c12: int;
  var $s6: int;
  var r0: ref;
  var $r2: ref;
  var $fakelocal_4: ref;
  var $i9: int;
  var b0: int;
  var $fakelocal_1: ref;
  var $i4: int;
  var r1: ref;
  var $i10: int;
  var $fakelocal_6: ref;
  var $fakelocal_0: ref;
  var i14: int;
  var s1: int;
  var $i16: int;
  var b2: int;
  var $c8: int;
  var $fakelocal_2: ref;
  var $fakelocal_3: ref;
  var $i15: int;
  var $i5: int;
  var $i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} true;
    goto anon28_Then, anon28_Else;

  anon28_Else:
    assume {:partition} r0 == unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "elseblock"} true;
    goto anon3;

  anon3:
    assert {:sourceloc "OSecurityManager.java", 306, -1, -1, -1} true;
    $return := unsafe.$null;
    goto block57;

  block57:
    return;

  anon28_Then:
    assume {:partition} r0 != unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 305, -1, -1, -1} {:comment "thenblock"} true;
    goto block50;

  block50:
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    goto anon29_Then, anon29_Else;

  anon29_Else:
    assume {:partition} r0 == unsafe.$null;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon29_Then:
    assume {:partition} r0 != unsafe.$null;
    $exception := $exception;
    goto anon6;

  anon6:
    $i3 := unsafe.$arrSizeHeap[r0];
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    $i4 := unsafe.$mulInt($i3, 2);
    assert {:sourceloc "OSecurityManager.java", 308, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[$fakelocal_1 := $i4];
    r1 := $fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    i14 := 0;
    goto block51;

  block51:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return := $return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception := $exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7 := $i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5 := $fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11 := $i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12 := $c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6 := $s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0 := r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4 := $fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9 := $i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0 := b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10 := $i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14 := i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1 := s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16 := $i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2 := b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8 := $c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2 := $fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3 := $fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15 := $i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5 := $i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13 := $i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return:
    $return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return;
    $exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    $i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7;
    $fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    $i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11;
    $c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12;
    $s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6;
    $fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    $i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9;
    b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0;
    $i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10;
    i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    $i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    $c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8;
    $fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    $fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    $i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    $i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    $i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    goto block51$1;

  block51$1:
    goto block51_last;

  anon30_Else:
    assume {:partition} r0 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon30_Then:
    assume {:partition} r0 != unsafe.$null;
    $exception := $exception;
    goto anon9;

  anon9:
    $i5 := unsafe.$arrSizeHeap[r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto anon31_Then, anon31_Else;

  anon31_Else:
    assume {:partition} $i5 > i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto anon12;

  anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} !(i14 < unsafe.$arrSizeHeap[r0] && i14 >= 0);
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon32_Then:
    assume {:partition} i14 < unsafe.$arrSizeHeap[r0] && i14 >= 0;
    $exception := $exception;
    goto anon15;

  anon15:
    b0 := unsafe.$intArrHeap[r0][i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    $s6 := unsafe.$bitAnd(b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    s1 := unsafe.$shrInt($s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    b2 := unsafe.$bitAnd(b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    $i9 := unsafe.$mulInt(2, i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto anon33_Then, anon33_Else;

  anon33_Else:
    assume {:partition} 10 > s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto anon18;

  anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    $i15 := 48 + s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto block54;

  block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    $c8 := $i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} !($i9 < unsafe.$arrSizeHeap[r1] && $i9 >= 0);
    call $fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := unsafe.$null;
    $exception := $fakelocal_4;
    return;

  anon34_Then:
    assume {:partition} $i9 < unsafe.$arrSizeHeap[r1] && $i9 >= 0;
    $exception := $exception;
    goto anon21;

  anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[r1 := unsafe.$intArrHeap[r1][$i9 := $c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    $i10 := unsafe.$mulInt(2, i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    $i13 := $i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto anon35_Then, anon35_Else;

  anon35_Else:
    assume {:partition} 10 > b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto anon24;

  anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    $i16 := 48 + b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto block56;

  block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    $c12 := $i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} !($i13 < unsafe.$arrSizeHeap[r1] && $i13 >= 0);
    call $fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := unsafe.$null;
    $exception := $fakelocal_5;
    return;

  anon36_Then:
    assume {:partition} $i13 < unsafe.$arrSizeHeap[r1] && $i13 >= 0;
    $exception := $exception;
    goto anon27;

  anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[r1 := unsafe.$intArrHeap[r1][$i13 := $c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    i14 := i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto anon27_dummy;

  anon35_Then:
    assume {:partition} b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto block55;

  block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    $i11 := 65 + b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    $i16 := $i11 - 10;
    goto block56;

  anon33_Then:
    assume {:partition} s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto block53;

  block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    $i7 := 65 + s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    $i15 := $i7 - 10;
    goto block54;

  anon31_Then:
    assume {:partition} i14 >= $i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    goto block52;

  block52:
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call $fakelocal_6 := unsafe.$new(unsafe.java.lang.String);
    $r2 := $fakelocal_6;
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    call $exception := unsafe.java.lang.String$$la$init$ra$$char$lp$$rp$($r2, r1);
    assert {:sourceloc "OSecurityManager.java", 316, -1, -1, -1} true;
    $return := $r2;
    goto block57;

  anon27_dummy:
    assume false;
    return;

  block51_last:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto anon30_Then, anon30_Else;
}



implementation unsafe.OSecurityManager$hexToByteArray$java.lang.String($in_parameter__0: ref) returns ($return: ref, $exception: ref)
{
  var r1: ref;
  var $i2: int;
  var $fakelocal_2: ref;
  var $i0: int;
  var $fakelocal_3: ref;
  var $i1: int;
  var i8: int;
  var $i3: int;
  var $fakelocal_0: ref;
  var $fakelocal_1: ref;
  var r0: ref;
  var $i4: int;
  var $i5: int;
  var $i6: int;
  var $r2: ref;
  var $b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap: $heap_type;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[$in_parameter__0, unsafe.$type] <: unsafe.java.lang.String;
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    r0 := $in_parameter__0;
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    $i0 := unsafe.$stringSizeHeap[r0];
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    goto anon17_Then, anon17_Else;

  anon17_Else:
    assume {:partition} 2 == 0;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.ArithmeticException);
    $return := unsafe.$null;
    $exception := $fakelocal_0;
    return;

  anon17_Then:
    assume {:partition} 2 != 0;
    $exception := $exception;
    goto anon3;

  anon3:
    $i1 := unsafe.$divInt($i0, 2);
    assert {:sourceloc "OSecurityManager.java", 320, -1, -1, -1} true;
    call $fakelocal_1 := unsafe.$new(unsafe.$intArrayType);
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[$fakelocal_1 := $i1];
    r1 := $fakelocal_1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    i8 := 0;
    goto block58;

  block58:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return := $return;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception := $exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1 := r1;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2 := $i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2 := $fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3 := $fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8 := i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3 := $i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0 := r0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4 := $i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5 := $i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6 := $i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2 := $r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7 := $b7;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$block58:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1
   == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1][inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
   + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3
   + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1
   != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$exit:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return:
    $return := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return;
    $exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    $i2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2;
    $fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2;
    $fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3;
    i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8;
    $i3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3;
    $i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4;
    $i5 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5;
    $i6 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6;
    $r2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2;
    $b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7;
    goto block58$1;

  block58$1:
    goto block58_last;

  anon18_Else:
    assume {:partition} r1 == unsafe.$null;
    call $fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    $return := unsafe.$null;
    $exception := $fakelocal_2;
    return;

  anon18_Then:
    assume {:partition} r1 != unsafe.$null;
    $exception := $exception;
    goto anon6;

  anon6:
    $i2 := unsafe.$arrSizeHeap[r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} $i2 > i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto anon9;

  anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    $i5 := unsafe.$mulInt(2, i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    $i3 := unsafe.$mulInt(2, i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    $i4 := $i3 + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call $r2, $exception := unsafe.java.lang.String$substring$int_int(r0, $i5, $i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call $i6, $exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int($r2, 16);
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} $exception == unsafe.$null;
    goto anon13;

  anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    $b7 := $i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} !(i8 < unsafe.$arrSizeHeap[r1] && i8 >= 0);
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    $return := unsafe.$null;
    $exception := $fakelocal_3;
    return;

  anon22_Then:
    assume {:partition} i8 < unsafe.$arrSizeHeap[r1] && i8 >= 0;
    $exception := $exception;
    goto anon16;

  anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[r1 := unsafe.$intArrHeap[r1][i8 := $b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    i8 := i8 + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto anon16_dummy;

  anon20_Then:
    assume {:partition} $exception != unsafe.$null;
    goto anon21_Then, anon21_Else;

  anon21_Else:
    assume {:partition} !(unsafe.$heap[$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto anon13;

  anon21_Then:
    assume {:partition} unsafe.$heap[$exception, unsafe.$type] <: unsafe.java.lang.NumberFormatException;
    $return := unsafe.$null;
    return;

  anon19_Then:
    assume {:partition} i8 >= $i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    goto block59;

  block59:
    assert {:sourceloc "OSecurityManager.java", 324, -1, -1, -1} true;
    $return := r1;
    goto block60;

  block60:
    return;

  anon16_dummy:
    assume false;
    return;

  block58_last:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto anon18_Then, anon18_Else;
}



implementation unsafe.OSecurityManager$$la$clinit$ra$$() returns ($exception: ref)
{
  var $fakelocal_1: ref;
  var $fakelocal_2: ref;
  var r4: ref;
  var r6: ref;
  var r5: ref;
  var i0: int;
  var $fakelocal_0: ref;
  var $r1: ref;
  var $fakelocal_3: ref;
  var $r3: ref;
  var inline$OSecurityManager$$la$init$ra$$$0$$r5: ref;
  var inline$OSecurityManager$$la$init$ra$$$0$$r2: ref;
  var inline$OSecurityManager$$la$init$ra$$$0$$fakelocal_1: ref;
  var inline$OSecurityManager$$la$init$ra$$$0$r1: ref;
  var inline$OSecurityManager$$la$init$ra$$$0$$r3: ref;
  var inline$OSecurityManager$$la$init$ra$$$0$$fakelocal_0: ref;
  var inline$OSecurityManager$$la$init$ra$$$0$r0: ref;
  var inline$OSecurityManager$$la$init$ra$$$0$$r4: ref;
  var inline$OSecurityManager$$la$init$ra$$$0$$this: ref;
  var inline$OSecurityManager$$la$init$ra$$$0$$exception: ref;
  var inline$OSecurityManager$$la$init$ra$$$0$$objIndex: int;
  var inline$OSecurityManager$$la$init$ra$$$0$$arrSizeHeap: [ref]int;
  var inline$OSecurityManager$$la$init$ra$$$0$$heap: $heap_type;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    $exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 52, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.OSecurityManager);
    r4 := $fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 52, -1, -1, -1} true;
    goto inline$OSecurityManager$$la$init$ra$$$0$Entry;

  inline$OSecurityManager$$la$init$ra$$$0$Entry:
    inline$OSecurityManager$$la$init$ra$$$0$$this := r4;
    havoc inline$OSecurityManager$$la$init$ra$$$0$$r5, inline$OSecurityManager$$la$init$ra$$$0$$r2, inline$OSecurityManager$$la$init$ra$$$0$$fakelocal_1, inline$OSecurityManager$$la$init$ra$$$0$r1, inline$OSecurityManager$$la$init$ra$$$0$$r3, inline$OSecurityManager$$la$init$ra$$$0$$fakelocal_0, inline$OSecurityManager$$la$init$ra$$$0$r0, inline$OSecurityManager$$la$init$ra$$$0$$r4, inline$OSecurityManager$$la$init$ra$$$0$$exception;
    inline$OSecurityManager$$la$init$ra$$$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$$la$init$ra$$$0$$arrSizeHeap := unsafe.$arrSizeHeap;
    inline$OSecurityManager$$la$init$ra$$$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$$la$init$ra$$$0$anon0;

  inline$OSecurityManager$$la$init$ra$$$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} unsafe.$heap[inline$OSecurityManager$$la$init$ra$$$0$$this, unsafe.$type]
   <: unsafe.OSecurityManager;
    assume {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} inline$OSecurityManager$$la$init$ra$$$0$$this != unsafe.$null;
    inline$OSecurityManager$$la$init$ra$$$0$$exception := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    inline$OSecurityManager$$la$init$ra$$$0$r0 := inline$OSecurityManager$$la$init$ra$$$0$$this;
    assert {:sourceloc "OSecurityManager.java", 65, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := inline$OSecurityManager$$la$init$ra$$$0$r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    inline$OSecurityManager$$la$init$ra$$$0$$exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$OSecurityManager$$la$init$ra$$$0$anon0$1;

  inline$OSecurityManager$$la$init$ra$$$0$anon0$1:
    goto inline$OSecurityManager$$la$init$ra$$$0$block1;

  inline$OSecurityManager$$la$init$ra$$$0$block1:
    assert {:sourceloc "OSecurityManager.java", 67, -1, -1, -1} true;
    call inline$OSecurityManager$$la$init$ra$$$0$$r2, inline$OSecurityManager$$la$init$ra$$$0$$exception := unsafe.java.security.MessageDigest$getInstance$java.lang.String(unsafe.$StringConst0);
    goto inline$OSecurityManager$$la$init$ra$$$0$anon8_Then, inline$OSecurityManager$$la$init$ra$$$0$anon8_Else;

  inline$OSecurityManager$$la$init$ra$$$0$anon8_Else:
    assume {:partition} inline$OSecurityManager$$la$init$ra$$$0$$exception == unsafe.$null;
    goto inline$OSecurityManager$$la$init$ra$$$0$anon4;

  inline$OSecurityManager$$la$init$ra$$$0$anon4:
    assert {:sourceloc "OSecurityManager.java", 67, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$OSecurityManager$$la$init$ra$$$0$r0, unsafe.java.security.MessageDigest$OSecurityManager$md266 := inline$OSecurityManager$$la$init$ra$$$0$$r2];
    goto inline$OSecurityManager$$la$init$ra$$$0$block3;

  inline$OSecurityManager$$la$init$ra$$$0$block3:
    assert {:sourceloc "OSecurityManager.java", 70, -1, -1, -1} true;
    goto inline$OSecurityManager$$la$init$ra$$$0$block4;

  inline$OSecurityManager$$la$init$ra$$$0$block4:
    assert {:sourceloc "OSecurityManager.java", 71, -1, -1, -1} true;
    goto inline$OSecurityManager$$la$init$ra$$$0$block5;

  inline$OSecurityManager$$la$init$ra$$$0$block5:
    goto inline$OSecurityManager$$la$init$ra$$$0$Return;

  inline$OSecurityManager$$la$init$ra$$$0$anon8_Then:
    assume {:partition} inline$OSecurityManager$$la$init$ra$$$0$$exception != unsafe.$null;
    goto inline$OSecurityManager$$la$init$ra$$$0$anon9_Then, inline$OSecurityManager$$la$init$ra$$$0$anon9_Else;

  inline$OSecurityManager$$la$init$ra$$$0$anon9_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$$la$init$ra$$$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException);
    assert {:clone} true;
    goto inline$OSecurityManager$$la$init$ra$$$0$anon4;

  inline$OSecurityManager$$la$init$ra$$$0$anon9_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$$la$init$ra$$$0$$exception, unsafe.$type]
   <: unsafe.java.security.NoSuchAlgorithmException;
    goto inline$OSecurityManager$$la$init$ra$$$0$block2;

  inline$OSecurityManager$$la$init$ra$$$0$block2:
    assert {:sourceloc "OSecurityManager.java", 71, -1, -1, -1} true;
    assume unsafe.$heap[inline$OSecurityManager$$la$init$ra$$$0$$exception, unsafe.$type]
   <: unsafe.java.lang.Throwable;
    inline$OSecurityManager$$la$init$ra$$$0$$r3 := inline$OSecurityManager$$la$init$ra$$$0$$exception;
    assert {:sourceloc "OSecurityManager.java", 68, -1, -1, -1} true;
    inline$OSecurityManager$$la$init$ra$$$0$r1 := inline$OSecurityManager$$la$init$ra$$$0$$r3;
    assert {:sourceloc "OSecurityManager.java", 69, -1, -1, -1} true;
    call inline$OSecurityManager$$la$init$ra$$$0$$r4, inline$OSecurityManager$$la$init$ra$$$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$instance$();
    assert {:sourceloc "OSecurityManager.java", 69, -1, -1, -1} true;
    call inline$OSecurityManager$$la$init$ra$$$0$$fakelocal_0 := unsafe.$new(unsafe.$arrayType(unsafe.java.lang.Object));
    unsafe.$arrSizeHeap := unsafe.$arrSizeHeap[inline$OSecurityManager$$la$init$ra$$$0$$fakelocal_0 := 0];
    inline$OSecurityManager$$la$init$ra$$$0$$r5 := inline$OSecurityManager$$la$init$ra$$$0$$fakelocal_0;
    assert {:sourceloc "OSecurityManager.java", 69, -1, -1, -1} true;
    goto inline$OSecurityManager$$la$init$ra$$$0$anon10_Then, inline$OSecurityManager$$la$init$ra$$$0$anon10_Else;

  inline$OSecurityManager$$la$init$ra$$$0$anon10_Else:
    assume {:partition} inline$OSecurityManager$$la$init$ra$$$0$$r4 == unsafe.$null;
    call inline$OSecurityManager$$la$init$ra$$$0$$fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    inline$OSecurityManager$$la$init$ra$$$0$$exception := inline$OSecurityManager$$la$init$ra$$$0$$fakelocal_1;
    goto inline$OSecurityManager$$la$init$ra$$$0$Return;

  inline$OSecurityManager$$la$init$ra$$$0$anon10_Then:
    assume {:partition} inline$OSecurityManager$$la$init$ra$$$0$$r4 != unsafe.$null;
    inline$OSecurityManager$$la$init$ra$$$0$$exception := inline$OSecurityManager$$la$init$ra$$$0$$exception;
    goto inline$OSecurityManager$$la$init$ra$$$0$anon7;

  inline$OSecurityManager$$la$init$ra$$$0$anon7:
    call inline$OSecurityManager$$la$init$ra$$$0$$exception := unsafe.com.orientechnologies.common.log.OLogManager$error$java.lang.Object_java.lang.String_java.lang.Throwable_java.lang.Object$lp$$rp$(inline$OSecurityManager$$la$init$ra$$$0$$r4, inline$OSecurityManager$$la$init$ra$$$0$r0, unsafe.$StringConst1, inline$OSecurityManager$$la$init$ra$$$0$r1, inline$OSecurityManager$$la$init$ra$$$0$$r5);
    goto inline$OSecurityManager$$la$init$ra$$$0$block4;

  inline$OSecurityManager$$la$init$ra$$$0$Return:
    $exception := inline$OSecurityManager$$la$init$ra$$$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "OSecurityManager.java", 52, -1, -1, -1} true;
    unsafe.OSecurityManager$OSecurityManager$instance265 := r4;
    assert {:sourceloc "OSecurityManager.java", 56, -1, -1, -1} true;
    unsafe.java.util.Map$OSecurityManager$SALT_CACHE267 := unsafe.$null;
    assert {:sourceloc "OSecurityManager.java", 59, -1, -1, -1} true;
    $r1 := unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration$com.orientechnologies.orient.core.config.OGlobalConfiguration$SECURITY_USER_PASSWORD_SALT_CACHE_SIZE368;
    assert {:sourceloc "OSecurityManager.java", 59, -1, -1, -1} true;
    goto anon10_Then, anon10_Else;

  anon10_Else:
    assume {:partition} $r1 == unsafe.$null;
    call $fakelocal_1 := unsafe.$new(unsafe.java.lang.RuntimeException);
    $exception := $fakelocal_1;
    return;

  anon10_Then:
    assume {:partition} $r1 != unsafe.$null;
    $exception := $exception;
    goto anon3;

  anon3:
    call i0, $exception := unsafe.com.orientechnologies.orient.core.config.OGlobalConfiguration$getValueAsInteger$($r1);
    assert {:sourceloc "OSecurityManager.java", 60, -1, -1, -1} true;
    goto anon11_Then, anon11_Else;

  anon11_Else:
    assume {:partition} 0 < i0;
    assert {:sourceloc "OSecurityManager.java", 60, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  anon6:
    assert {:sourceloc "OSecurityManager.java", 61, -1, -1, -1} true;
    call $fakelocal_2 := unsafe.$new(unsafe.com.orientechnologies.common.collection.OLRUCache);
    r5 := $fakelocal_2;
    assert {:sourceloc "OSecurityManager.java", 61, -1, -1, -1} true;
    call $exception := unsafe.com.orientechnologies.common.collection.OLRUCache$$la$init$ra$$int(r5, i0);
    assert {:sourceloc "OSecurityManager.java", -1, -1, -1, -1} true;
    goto anon12_Then, anon12_Else;

  anon12_Else:
    assume {:partition} !(unsafe.$heap[r5, unsafe.$type] <: unsafe.java.util.Map);
    call $fakelocal_3 := unsafe.$new(unsafe.java.lang.ClassCastException);
    $exception := $fakelocal_3;
    return;

  anon12_Then:
    assume {:partition} unsafe.$heap[r5, unsafe.$type] <: unsafe.java.util.Map;
    $exception := $exception;
    goto anon9;

  anon9:
    r6 := r5;
    assert {:sourceloc "OSecurityManager.java", 61, -1, -1, -1} true;
    call $r3, $exception := unsafe.java.util.Collections$synchronizedMap$java.util.Map(r6);
    assert {:sourceloc "OSecurityManager.java", 61, -1, -1, -1} true;
    unsafe.java.util.Map$OSecurityManager$SALT_CACHE267 := $r3;
    goto block61;

  block61:
    assert {:sourceloc "OSecurityManager.java", 63, -1, -1, -1} true;
    goto block62;

  block62:
    return;

  anon11_Then:
    assume {:partition} i0 <= 0;
    assert {:sourceloc "OSecurityManager.java", 60, -1, -1, -1} {:comment "thenblock"} true;
    goto block61;
}



implementation unsafe.java.lang.Boolean$$la$init$ra$$boolean($this: ref, $in_parameter__0: int) returns ($exception: ref)
{
  var z0: int;
  var r0: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.Boolean;
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    z0 := $in_parameter__0;
    assert {:sourceloc "Boolean.java", 6, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    $exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "Boolean.java", 7, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[r0, unsafe.boolean$java.lang.Boolean$value0 := z0];
    assert {:sourceloc "Boolean.java", 8, -1, -1, -1} true;
    goto block63;

  block63:
    return;
}



implementation unsafe.java.lang.Boolean$valueOf$boolean($in_parameter__0: int) returns ($return: ref, $exception: ref)
{
  var $fakelocal_0: ref;
  var z0: int;
  var $r0: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0: int;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$in_parameter__0: int;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception: ref;
  var inline$java.lang.Boolean$$la$init$ra$$boolean$0$$heap: $heap_type;
  var inline$java.lang.Object$$la$init$ra$$$0$$this: ref;
  var inline$java.lang.Object$$la$init$ra$$$0$$exception: ref;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume unsafe.$heap[$return, unsafe.$type] <: unsafe.java.lang.Boolean;
    $exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    z0 := $in_parameter__0;
    assert {:sourceloc "Boolean.java", 11, -1, -1, -1} true;
    call $fakelocal_0 := unsafe.$new(unsafe.java.lang.Boolean);
    $r0 := $fakelocal_0;
    assert {:sourceloc "Boolean.java", 11, -1, -1, -1} true;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$Entry;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$Entry:
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this := $r0;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$in_parameter__0 := z0;
    havoc inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0, inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0, inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$heap := unsafe.$heap;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} unsafe.$heap[inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this, unsafe.$type]
   <: unsafe.java.lang.Boolean;
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this != unsafe.$null;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0 := inline$java.lang.Boolean$$la$init$ra$$boolean$0$$this;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0 := inline$java.lang.Boolean$$la$init$ra$$boolean$0$$in_parameter__0;
    assert {:sourceloc "Boolean.java", 6, -1, -1, -1} true;
    goto inline$java.lang.Object$$la$init$ra$$$0$Entry;

  inline$java.lang.Object$$la$init$ra$$$0$Entry:
    inline$java.lang.Object$$la$init$ra$$$0$$this := inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0;
    havoc inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Object$$la$init$ra$$$0$anon0;

  inline$java.lang.Object$$la$init$ra$$$0$anon0:
    inline$java.lang.Object$$la$init$ra$$$0$$exception := unsafe.$null;
    goto inline$java.lang.Object$$la$init$ra$$$0$Return;

  inline$java.lang.Object$$la$init$ra$$$0$Return:
    inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception := inline$java.lang.Object$$la$init$ra$$$0$$exception;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0$1;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$anon0$1:
    assert {:sourceloc "Boolean.java", 7, -1, -1, -1} true;
    unsafe.$heap := unsafe.$heap[inline$java.lang.Boolean$$la$init$ra$$boolean$0$r0, unsafe.boolean$java.lang.Boolean$value0 := inline$java.lang.Boolean$$la$init$ra$$boolean$0$z0];
    assert {:sourceloc "Boolean.java", 8, -1, -1, -1} true;
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$block63;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$block63:
    goto inline$java.lang.Boolean$$la$init$ra$$boolean$0$Return;

  inline$java.lang.Boolean$$la$init$ra$$boolean$0$Return:
    $exception := inline$java.lang.Boolean$$la$init$ra$$boolean$0$$exception;
    goto anon0$1;

  anon0$1:
    assert {:sourceloc "Boolean.java", 11, -1, -1, -1} true;
    $return := $r0;
    goto block64;

  block64:
    return;
}



implementation unsafe.java.lang.Boolean$booleanValue$($this: ref) returns ($return: int, $exception: ref)
{
  var r0: ref;
  var $z0: int;

  anon0:
    assume (forall T: javaType :: unsafe.$heap[unsafe.$null, unsafe.$type] <: T);
    assume (forall _r: ref :: unsafe.$arrSizeHeap[_r] >= 0);
    assume (forall _r: ref :: unsafe.$stringSizeHeap[_r] >= 0);
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} unsafe.$heap[$this, unsafe.$type] <: unsafe.java.lang.Boolean;
    assume {:sourceloc "Boolean.java", -1, -1, -1, -1} $this != unsafe.$null;
    $exception := unsafe.$null;
    assert {:sourceloc "Boolean.java", -1, -1, -1, -1} true;
    r0 := $this;
    assert {:sourceloc "Boolean.java", 15, -1, -1, -1} true;
    $z0 := unsafe.$heap[r0, unsafe.boolean$java.lang.Boolean$value0];
    assert {:sourceloc "Boolean.java", 15, -1, -1, -1} true;
    $return := $z0;
    goto block65;

  block65:
    return;
}



implementation unsafe.java.lang.Object$$la$init$ra$$($this: ref) returns ($exception: ref)
{

  anon0:
    $exception := unsafe.$null;
    return;
}



implementation unsafe.OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13(in_$return: int, 
    in_$exception: ref, 
    in_$fakelocal_4: ref, 
    in_$fakelocal_2: ref, 
    in_$b5: int, 
    in_$i2: int, 
    in_$b4: int, 
    in_i7: int, 
    in_b6: int, 
    in_r1: ref, 
    in_$b3: int, 
    in_r0: ref, 
    in_$fakelocal_3: ref)
   returns (out_$return: int, 
    out_$exception: ref, 
    out_$fakelocal_4: ref, 
    out_$fakelocal_2: ref, 
    out_$b5: int, 
    out_$i2: int, 
    out_$b4: int, 
    out_i7: int, 
    out_b6: int, 
    out_$b3: int, 
    out_$fakelocal_3: ref)
{
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r1: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex: int;
  var inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap: $heap_type;

  entry:
    out_$return, out_$exception, out_$fakelocal_4, out_$fakelocal_2, out_$b5, out_$i2, out_$b4, out_i7, out_b6, out_$b3, out_$fakelocal_3 := in_$return, in_$exception, in_$fakelocal_4, in_$fakelocal_2, in_$b5, in_$i2, in_$b4, in_i7, in_b6, in_$b3, in_$fakelocal_3;
    goto block13;

  block13:
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto anon39_Then, anon39_Else;

  anon39_Else:
    assume {:partition} in_r0 == unsafe.$null;
    call out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    out_$return := 0;
    out_$exception := out_$fakelocal_2;
    out_$return, out_$exception, out_$fakelocal_4, out_$fakelocal_2, out_$b5, out_$i2, out_$b4, out_i7, out_b6, out_$b3, out_$fakelocal_3 := in_$return, in_$exception, in_$fakelocal_4, in_$fakelocal_2, in_$b5, in_$i2, in_$b4, in_i7, in_b6, in_$b3, in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon29:
    out_$b3 := unsafe.$intArrHeap[in_r1][out_i7];
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    out_$b5 := unsafe.$xorInt(out_$b4, out_$b3);
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    out_b6 := unsafe.$bitOr(out_b6, out_$b5);
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    out_i7 := out_i7 + 1;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto anon29_dummy;

  anon42_Then:
    assume {:partition} out_i7 < unsafe.$arrSizeHeap[in_r1] && out_i7 >= 0;
    out_$exception := out_$exception;
    goto anon29;

  anon26:
    out_$b4 := unsafe.$intArrHeap[in_r0][out_i7];
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    goto anon42_Then, anon42_Else;

  anon42_Else:
    assume {:partition} !(out_i7 < unsafe.$arrSizeHeap[in_r1] && out_i7 >= 0);
    call out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := 0;
    out_$exception := out_$fakelocal_4;
    out_$return, out_$exception, out_$fakelocal_4, out_$fakelocal_2, out_$b5, out_$i2, out_$b4, out_i7, out_b6, out_$b3, out_$fakelocal_3 := in_$return, in_$exception, in_$fakelocal_4, in_$fakelocal_2, in_$b5, in_$i2, in_$b4, in_i7, in_b6, in_$b3, in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon41_Then:
    assume {:partition} out_i7 < unsafe.$arrSizeHeap[in_r0] && out_i7 >= 0;
    out_$exception := out_$exception;
    goto anon26;

  anon23:
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    goto anon41_Then, anon41_Else;

  anon41_Else:
    assume {:partition} !(out_i7 < unsafe.$arrSizeHeap[in_r0] && out_i7 >= 0);
    call out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := 0;
    out_$exception := out_$fakelocal_3;
    out_$return, out_$exception, out_$fakelocal_4, out_$fakelocal_2, out_$b5, out_$i2, out_$b4, out_i7, out_b6, out_$b3, out_$fakelocal_3 := in_$return, in_$exception, in_$fakelocal_4, in_$fakelocal_2, in_$b5, in_$i2, in_$b4, in_i7, in_b6, in_$b3, in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon40_Else:
    assume {:partition} out_$i2 > out_i7;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} {:comment "elseblock"} true;
    goto anon23;

  anon20:
    out_$i2 := unsafe.$arrSizeHeap[in_r0];
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto anon40_Then, anon40_Else;

  anon40_Then:
    assume {:partition} out_i7 >= out_$i2;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} {:comment "thenblock"} true;
    out_$return, out_$exception, out_$fakelocal_4, out_$fakelocal_2, out_$b5, out_$i2, out_$b4, out_i7, out_b6, out_$b3, out_$fakelocal_3 := in_$return, in_$exception, in_$fakelocal_4, in_$fakelocal_2, in_$b5, in_$i2, in_$b4, in_i7, in_b6, in_$b3, in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon39_Then:
    assume {:partition} in_r0 != unsafe.$null;
    out_$exception := out_$exception;
    goto anon20;

  anon29_dummy:
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Entry;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Entry:
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return := out_$return;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception := out_$exception;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4 := out_$fakelocal_4;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2 := out_$fakelocal_2;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5 := out_$b5;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2 := out_$i2;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4 := out_$b4;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7 := out_i7;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6 := out_b6;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r1 := in_r1;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3 := out_$b3;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0 := in_r0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3 := out_$fakelocal_3;
    havoc inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$entry;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$entry:
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$block13;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$block13:
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon39_Then, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon39_Else;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon39_Else:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return := 0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon29:
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3 := unsafe.$intArrHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r1][inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7];
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5 := unsafe.$xorInt(inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, 
  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3);
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6 := unsafe.$bitOr(inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, 
  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5);
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
   + 1;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon29_dummy;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon42_Then:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     < unsafe.$arrSizeHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r1]
   && inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     >= 0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon29;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon26:
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4 := unsafe.$intArrHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0][inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7];
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon42_Then, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon42_Else;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon42_Else:
    assume {:partition} !(inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     < unsafe.$arrSizeHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r1]
   && inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     >= 0);
    call inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return := 0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon41_Then:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     < unsafe.$arrSizeHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0]
   && inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     >= 0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon26;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon23:
    assert {:sourceloc "OSecurityManager.java", 108, -1, -1, -1} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon41_Then, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon41_Else;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon41_Else:
    assume {:partition} !(inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     < unsafe.$arrSizeHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0]
   && inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
     >= 0);
    call inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return := 0;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon40_Else:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2
   > inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon23;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon20:
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} true;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon40_Then, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon40_Else;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon40_Then:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7
   >= inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 107, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$return, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$exception, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b5, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$i2, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b4, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_i7, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_b6, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$b3, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_$fakelocal_3;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$objIndex, inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$$heap;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon39_Then:
    assume {:partition} inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon20;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$anon29_dummy:
    assume false;
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$exit:
    goto inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return;

  inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$Return:
    out_$return := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$return;
    out_$exception := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$exception;
    out_$fakelocal_4 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_4;
    out_$fakelocal_2 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_2;
    out_$b5 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b5;
    out_$i2 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$i2;
    out_$b4 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b4;
    out_i7 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_i7;
    out_b6 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_b6;
    out_$b3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$b3;
    out_$fakelocal_3 := inline$OSecurityManager$isEqual_inline$byte$lp$$rp$_byte$lp$$rp$_loop_block13$0$out_$fakelocal_3;
    goto anon29_dummy$1;

  anon29_dummy$1:
    return;

  exit:
    return;
}



implementation unsafe.OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19(in_$return: int, 
    in_$exception: ref, 
    in_$c3: int, 
    in_$c2: int, 
    in_r3: ref, 
    in_r4: ref, 
    in_i4: int, 
    in_$fakelocal_0: ref, 
    in_i5: int, 
    in_$i1: int, 
    in_$fakelocal_1: ref)
   returns (out_$return: int, 
    out_$exception: ref, 
    out_$c3: int, 
    out_$c2: int, 
    out_i4: int, 
    out_$fakelocal_0: ref, 
    out_i5: int, 
    out_$i1: int, 
    out_$fakelocal_1: ref)
{
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1: ref;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex: int;
  var inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap: $heap_type;

  entry:
    out_$return, out_$exception, out_$c3, out_$c2, out_i4, out_$fakelocal_0, out_i5, out_$i1, out_$fakelocal_1 := in_$return, in_$exception, in_$c3, in_$c2, in_i4, in_$fakelocal_0, in_i5, in_$i1, in_$fakelocal_1;
    goto block19;

  block19:
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    out_$i1 := out_i4;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    out_i4 := out_i4 + -1;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    goto anon17_Then, anon17_Else;

  anon17_Then:
    assume {:partition} out_$i1 == 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "thenblock"} true;
    out_$return, out_$exception, out_$c3, out_$c2, out_i4, out_$fakelocal_0, out_i5, out_$i1, out_$fakelocal_1 := in_$return, in_$exception, in_$c3, in_$c2, in_i4, in_$fakelocal_0, in_i5, in_$i1, in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  block21:
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    out_i5 := out_i5 + 1;
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    goto block21_dummy;

  anon20_Then:
    assume {:partition} out_$c3 == out_$c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "thenblock"} true;
    goto block21;

  anon12:
    out_$c2 := unsafe.$intArrHeap[in_r4][out_i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto anon20_Then, anon20_Else;

  anon20_Else:
    assume {:partition} out_$c3 != out_$c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "elseblock"} true;
    out_$return, out_$exception, out_$c3, out_$c2, out_i4, out_$fakelocal_0, out_i5, out_$i1, out_$fakelocal_1 := in_$return, in_$exception, in_$c3, in_$c2, in_i4, in_$fakelocal_0, in_i5, in_$i1, in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon19_Then:
    assume {:partition} out_i5 < unsafe.$arrSizeHeap[in_r4] && out_i5 >= 0;
    out_$exception := out_$exception;
    goto anon12;

  anon9:
    out_$c3 := unsafe.$intArrHeap[in_r3][out_i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto anon19_Then, anon19_Else;

  anon19_Else:
    assume {:partition} !(out_i5 < unsafe.$arrSizeHeap[in_r4] && out_i5 >= 0);
    call out_$fakelocal_1 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := 0;
    out_$exception := out_$fakelocal_1;
    out_$return, out_$exception, out_$c3, out_$c2, out_i4, out_$fakelocal_0, out_i5, out_$i1, out_$fakelocal_1 := in_$return, in_$exception, in_$c3, in_$c2, in_i4, in_$fakelocal_0, in_i5, in_$i1, in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon18_Then:
    assume {:partition} out_i5 < unsafe.$arrSizeHeap[in_r3] && out_i5 >= 0;
    out_$exception := out_$exception;
    goto anon9;

  anon6:
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} !(out_i5 < unsafe.$arrSizeHeap[in_r3] && out_i5 >= 0);
    call out_$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := 0;
    out_$exception := out_$fakelocal_0;
    out_$return, out_$exception, out_$c3, out_$c2, out_i4, out_$fakelocal_0, out_i5, out_$i1, out_$fakelocal_1 := in_$return, in_$exception, in_$c3, in_$c2, in_i4, in_$fakelocal_0, in_i5, in_$i1, in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon17_Else:
    assume {:partition} out_$i1 != 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "elseblock"} true;
    goto anon6;

  block21_dummy:
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Entry;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Entry:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return := out_$return;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception := out_$exception;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3 := out_$c3;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2 := out_$c2;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3 := in_r3;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4 := in_r4;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4 := out_i4;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0 := out_$fakelocal_0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5 := out_i5;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1 := out_$i1;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1 := out_$fakelocal_1;
    havoc inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$entry;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$entry:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block19;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block19:
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4
   + -1;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1
   == 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21:
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
   + 1;
    assert {:sourceloc "OSecurityManager.java", 122, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21_dummy;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3
   == inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon12:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2 := unsafe.$intArrHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4][inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3
   != inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2;
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} {:comment "elseblock"} true;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon12;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon9:
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3 := unsafe.$intArrHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3][inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5];
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon19_Else:
    assume {:partition} !(inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r4]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0);
    call inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return := 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon9;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon6:
    assert {:sourceloc "OSecurityManager.java", 120, -1, -1, -1} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Then, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Else;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon18_Else:
    assume {:partition} !(inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     < unsafe.$arrSizeHeap[inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_r3]
   && inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5
     >= 0);
    call inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return := 0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0;
    inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$return, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$exception, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c3, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$c2, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i4, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_0, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_i5, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$i1, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$in_$fakelocal_1;
    unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$objIndex, inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$$heap;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon17_Else:
    assume {:partition} inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1
   != 0;
    assert {:sourceloc "OSecurityManager.java", 119, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$anon6;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$block21_dummy:
    assume false;
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$exit:
    goto inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return;

  inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$Return:
    out_$return := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$return;
    out_$exception := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$exception;
    out_$c3 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c3;
    out_$c2 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$c2;
    out_i4 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i4;
    out_$fakelocal_0 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_0;
    out_i5 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_i5;
    out_$i1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$i1;
    out_$fakelocal_1 := inline$OSecurityManager$equals_inline$java.lang.String_java.lang.String_loop_block19$0$out_$fakelocal_1;
    goto block21_dummy$1;

  block21_dummy$1:
    return;

  exit:
    return;
}



implementation unsafe.OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51(in_$return: ref, 
    in_$exception: ref, 
    in_$i7: int, 
    in_$fakelocal_5: ref, 
    in_$i11: int, 
    in_$c12: int, 
    in_$s6: int, 
    in_r0: ref, 
    in_$fakelocal_4: ref, 
    in_$i9: int, 
    in_b0: int, 
    in_r1: ref, 
    in_$i10: int, 
    in_i14: int, 
    in_s1: int, 
    in_$i16: int, 
    in_b2: int, 
    in_$c8: int, 
    in_$fakelocal_2: ref, 
    in_$fakelocal_3: ref, 
    in_$i15: int, 
    in_$i5: int, 
    in_$i13: int)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_$i7: int, 
    out_$fakelocal_5: ref, 
    out_$i11: int, 
    out_$c12: int, 
    out_$s6: int, 
    out_$fakelocal_4: ref, 
    out_$i9: int, 
    out_b0: int, 
    out_$i10: int, 
    out_i14: int, 
    out_s1: int, 
    out_$i16: int, 
    out_b2: int, 
    out_$c8: int, 
    out_$fakelocal_2: ref, 
    out_$fakelocal_3: ref, 
    out_$i15: int, 
    out_$i5: int, 
    out_$i13: int)
{
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex: int;
  var inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap: $heap_type;

  entry:
    out_$return, out_$exception, out_$i7, out_$fakelocal_5, out_$i11, out_$c12, out_$s6, out_$fakelocal_4, out_$i9, out_b0, out_$i10, out_i14, out_s1, out_$i16, out_b2, out_$c8, out_$fakelocal_2, out_$fakelocal_3, out_$i15, out_$i5, out_$i13 := in_$return, in_$exception, in_$i7, in_$fakelocal_5, in_$i11, in_$c12, in_$s6, in_$fakelocal_4, in_$i9, in_b0, in_$i10, in_i14, in_s1, in_$i16, in_b2, in_$c8, in_$fakelocal_2, in_$fakelocal_3, in_$i15, in_$i5, in_$i13;
    goto block51;

  block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto anon30_Then, anon30_Else;

  anon30_Else:
    assume {:partition} in_r0 == unsafe.$null;
    call out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_2;
    out_$return, out_$exception, out_$i7, out_$fakelocal_5, out_$i11, out_$c12, out_$s6, out_$fakelocal_4, out_$i9, out_b0, out_$i10, out_i14, out_s1, out_$i16, out_b2, out_$c8, out_$fakelocal_2, out_$fakelocal_3, out_$i15, out_$i5, out_$i13 := in_$return, in_$exception, in_$i7, in_$fakelocal_5, in_$i11, in_$c12, in_$s6, in_$fakelocal_4, in_$i9, in_b0, in_$i10, in_i14, in_s1, in_$i16, in_b2, in_$c8, in_$fakelocal_2, in_$fakelocal_3, in_$i15, in_$i5, in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[in_r1 := unsafe.$intArrHeap[in_r1][out_$i13 := out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    out_i14 := out_i14 + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto anon27_dummy;

  anon36_Then:
    assume {:partition} out_$i13 < unsafe.$arrSizeHeap[in_r1] && out_$i13 >= 0;
    out_$exception := out_$exception;
    goto anon27;

  block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    out_$c12 := out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto anon36_Then, anon36_Else;

  anon36_Else:
    assume {:partition} !(out_$i13 < unsafe.$arrSizeHeap[in_r1] && out_$i13 >= 0);
    call out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_5;
    out_$return, out_$exception, out_$i7, out_$fakelocal_5, out_$i11, out_$c12, out_$s6, out_$fakelocal_4, out_$i9, out_b0, out_$i10, out_i14, out_s1, out_$i16, out_b2, out_$c8, out_$fakelocal_2, out_$fakelocal_3, out_$i15, out_$i5, out_$i13 := in_$return, in_$exception, in_$i7, in_$fakelocal_5, in_$i11, in_$c12, in_$s6, in_$fakelocal_4, in_$i9, in_b0, in_$i10, in_i14, in_s1, in_$i16, in_b2, in_$c8, in_$fakelocal_2, in_$fakelocal_3, in_$i15, in_$i5, in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    out_$i16 := 48 + out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto block56;

  block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    out_$i11 := 65 + out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    out_$i16 := out_$i11 - 10;
    goto block56;

  anon35_Then:
    assume {:partition} out_b2 >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto block55;

  anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[in_r1 := unsafe.$intArrHeap[in_r1][out_$i9 := out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    out_$i10 := unsafe.$mulInt(2, out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    out_$i13 := out_$i10 + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto anon35_Then, anon35_Else;

  anon34_Then:
    assume {:partition} out_$i9 < unsafe.$arrSizeHeap[in_r1] && out_$i9 >= 0;
    out_$exception := out_$exception;
    goto anon21;

  block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    out_$c8 := out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto anon34_Then, anon34_Else;

  anon34_Else:
    assume {:partition} !(out_$i9 < unsafe.$arrSizeHeap[in_r1] && out_$i9 >= 0);
    call out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_4;
    out_$return, out_$exception, out_$i7, out_$fakelocal_5, out_$i11, out_$c12, out_$s6, out_$fakelocal_4, out_$i9, out_b0, out_$i10, out_i14, out_s1, out_$i16, out_b2, out_$c8, out_$fakelocal_2, out_$fakelocal_3, out_$i15, out_$i5, out_$i13 := in_$return, in_$exception, in_$i7, in_$fakelocal_5, in_$i11, in_$c12, in_$s6, in_$fakelocal_4, in_$i9, in_b0, in_$i10, in_i14, in_s1, in_$i16, in_b2, in_$c8, in_$fakelocal_2, in_$fakelocal_3, in_$i15, in_$i5, in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    out_$i15 := 48 + out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto block54;

  block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    out_$i7 := 65 + out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    out_$i15 := out_$i7 - 10;
    goto block54;

  anon33_Then:
    assume {:partition} out_s1 >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto block53;

  anon15:
    out_b0 := unsafe.$intArrHeap[in_r0][out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    out_$s6 := unsafe.$bitAnd(out_b0, 240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    out_s1 := unsafe.$shrInt(out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    out_b2 := unsafe.$bitAnd(out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    out_$i9 := unsafe.$mulInt(2, out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto anon33_Then, anon33_Else;

  anon32_Then:
    assume {:partition} out_i14 < unsafe.$arrSizeHeap[in_r0] && out_i14 >= 0;
    out_$exception := out_$exception;
    goto anon15;

  anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto anon32_Then, anon32_Else;

  anon32_Else:
    assume {:partition} !(out_i14 < unsafe.$arrSizeHeap[in_r0] && out_i14 >= 0);
    call out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_3;
    out_$return, out_$exception, out_$i7, out_$fakelocal_5, out_$i11, out_$c12, out_$s6, out_$fakelocal_4, out_$i9, out_b0, out_$i10, out_i14, out_s1, out_$i16, out_b2, out_$c8, out_$fakelocal_2, out_$fakelocal_3, out_$i15, out_$i5, out_$i13 := in_$return, in_$exception, in_$i7, in_$fakelocal_5, in_$i11, in_$c12, in_$s6, in_$fakelocal_4, in_$i9, in_b0, in_$i10, in_i14, in_s1, in_$i16, in_b2, in_$c8, in_$fakelocal_2, in_$fakelocal_3, in_$i15, in_$i5, in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon31_Else:
    assume {:partition} out_$i5 > out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto anon12;

  anon9:
    out_$i5 := unsafe.$arrSizeHeap[in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto anon31_Then, anon31_Else;

  anon31_Then:
    assume {:partition} out_i14 >= out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    out_$return, out_$exception, out_$i7, out_$fakelocal_5, out_$i11, out_$c12, out_$s6, out_$fakelocal_4, out_$i9, out_b0, out_$i10, out_i14, out_s1, out_$i16, out_b2, out_$c8, out_$fakelocal_2, out_$fakelocal_3, out_$i15, out_$i5, out_$i13 := in_$return, in_$exception, in_$i7, in_$fakelocal_5, in_$i11, in_$c12, in_$s6, in_$fakelocal_4, in_$i9, in_b0, in_$i10, in_i14, in_s1, in_$i16, in_b2, in_$c8, in_$fakelocal_2, in_$fakelocal_3, in_$i15, in_$i5, in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon30_Then:
    assume {:partition} in_r0 != unsafe.$null;
    out_$exception := out_$exception;
    goto anon9;

  anon33_Else:
    assume {:partition} 10 > out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto anon18;

  anon35_Else:
    assume {:partition} 10 > out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto anon24;

  anon27_dummy:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return := out_$return;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception := out_$exception;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7 := out_$i7;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5 := out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11 := out_$i11;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12 := out_$c12;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6 := out_$s6;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0 := in_r0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4 := out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9 := out_$i9;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0 := out_b0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := in_r1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10 := out_$i10;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14 := out_i14;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1 := out_s1;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16 := out_$i16;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2 := out_b2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8 := out_$c8;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2 := out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3 := out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15 := out_$i15;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5 := out_$i5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13 := out_$i13;
    havoc inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$entry:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block51:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   == unsafe.$null;
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12]];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   + 1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon36_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55:
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block56;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block55;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8]];
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10
   + 1;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon21;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon34_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r1]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18:
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := 48
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53:
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7 := 65
   + inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7
   - 10;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block54;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1
   >= 10;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "thenblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$block53;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0 := unsafe.$intArrHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0][inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14];
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 
  240);
    assert {:sourceloc "OSecurityManager.java", 311, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1 := unsafe.$shrInt(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, 4);
    assert {:sourceloc "OSecurityManager.java", 312, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2 := unsafe.$bitAnd(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, 15);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9 := unsafe.$mulInt(2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14);
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon15;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12:
    assert {:sourceloc "OSecurityManager.java", 310, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon32_Else:
    assume {:partition} !(inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     < unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0]
   && inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
     >= 0);
    call inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return := unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon12;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9:
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5 := unsafe.$arrSizeHeap[inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0];
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Else;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon31_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14
   >= inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    assert {:sourceloc "OSecurityManager.java", 309, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$return, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$exception, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i7, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i11, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c12, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$s6, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_4, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i9, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b0, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i10, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_i14, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_s1, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i16, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_b2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$c8, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_2, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$fakelocal_3, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i15, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i5, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_$i13;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$intArrHeap, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$objIndex, inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$$heap;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon30_Then:
    assume {:partition} inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$in_r0
   != unsafe.$null;
    inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon9;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon33_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    assert {:sourceloc "OSecurityManager.java", 313, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon18;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon35_Else:
    assume {:partition} 10
   > inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    assert {:sourceloc "OSecurityManager.java", 314, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon24;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$anon27_dummy:
    assume false;
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$exit:
    goto inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return;

  inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$Return:
    out_$return := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$return;
    out_$exception := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$exception;
    out_$i7 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i7;
    out_$fakelocal_5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_5;
    out_$i11 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i11;
    out_$c12 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c12;
    out_$s6 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$s6;
    out_$fakelocal_4 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_4;
    out_$i9 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i9;
    out_b0 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b0;
    out_$i10 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i10;
    out_i14 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_i14;
    out_s1 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_s1;
    out_$i16 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i16;
    out_b2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_b2;
    out_$c8 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$c8;
    out_$fakelocal_2 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_2;
    out_$fakelocal_3 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$fakelocal_3;
    out_$i15 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i15;
    out_$i5 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i5;
    out_$i13 := inline$OSecurityManager$byteArrayToHexStr$byte$lp$$rp$_loop_block51$0$out_$i13;
    goto anon27_dummy$1;

  anon27_dummy$1:
    return;

  exit:
    return;
}



implementation unsafe.OSecurityManager$hexToByteArray$java.lang.String_loop_block58(in_$return: ref, 
    in_$exception: ref, 
    in_r1: ref, 
    in_$i2: int, 
    in_$fakelocal_2: ref, 
    in_$fakelocal_3: ref, 
    in_i8: int, 
    in_$i3: int, 
    in_r0: ref, 
    in_$i4: int, 
    in_$i5: int, 
    in_$i6: int, 
    in_$r2: ref, 
    in_$b7: int)
   returns (out_$return: ref, 
    out_$exception: ref, 
    out_$i2: int, 
    out_$fakelocal_2: ref, 
    out_$fakelocal_3: ref, 
    out_i8: int, 
    out_$i3: int, 
    out_$i4: int, 
    out_$i5: int, 
    out_$i6: int, 
    out_$r2: ref, 
    out_$b7: int)
{
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2: ref;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap: intArrHeap_type;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex: int;
  var inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap: $heap_type;

  entry:
    out_$return, out_$exception, out_$i2, out_$fakelocal_2, out_$fakelocal_3, out_i8, out_$i3, out_$i4, out_$i5, out_$i6, out_$r2, out_$b7 := in_$return, in_$exception, in_$i2, in_$fakelocal_2, in_$fakelocal_3, in_i8, in_$i3, in_$i4, in_$i5, in_$i6, in_$r2, in_$b7;
    goto block58;

  block58:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto anon18_Then, anon18_Else;

  anon18_Else:
    assume {:partition} in_r1 == unsafe.$null;
    call out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_2;
    out_$return, out_$exception, out_$i2, out_$fakelocal_2, out_$fakelocal_3, out_i8, out_$i3, out_$i4, out_$i5, out_$i6, out_$r2, out_$b7 := in_$return, in_$exception, in_$i2, in_$fakelocal_2, in_$fakelocal_3, in_i8, in_$i3, in_$i4, in_$i5, in_$i6, in_$r2, in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[in_r1 := unsafe.$intArrHeap[in_r1][out_i8 := out_$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    out_i8 := out_i8 + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto anon16_dummy;

  anon22_Then:
    assume {:partition} out_i8 < unsafe.$arrSizeHeap[in_r1] && out_i8 >= 0;
    out_$exception := out_$exception;
    goto anon16;

  anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    out_$b7 := out_$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto anon22_Then, anon22_Else;

  anon22_Else:
    assume {:partition} !(out_i8 < unsafe.$arrSizeHeap[in_r1] && out_i8 >= 0);
    call out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    out_$return := unsafe.$null;
    out_$exception := out_$fakelocal_3;
    out_$return, out_$exception, out_$i2, out_$fakelocal_2, out_$fakelocal_3, out_i8, out_$i3, out_$i4, out_$i5, out_$i6, out_$r2, out_$b7 := in_$return, in_$exception, in_$i2, in_$fakelocal_2, in_$fakelocal_3, in_i8, in_$i3, in_$i4, in_$i5, in_$i6, in_$r2, in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon20_Else:
    assume {:partition} out_$exception == unsafe.$null;
    goto anon13;

  anon21_Else:
    assume {:partition} !(unsafe.$heap[out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto anon13;

  anon20_Then:
    assume {:partition} out_$exception != unsafe.$null;
    goto anon21_Then, anon21_Else;

  anon21_Then:
    assume {:partition} unsafe.$heap[out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    out_$return := unsafe.$null;
    out_$return, out_$exception, out_$i2, out_$fakelocal_2, out_$fakelocal_3, out_i8, out_$i3, out_$i4, out_$i5, out_$i6, out_$r2, out_$b7 := in_$return, in_$exception, in_$i2, in_$fakelocal_2, in_$fakelocal_3, in_i8, in_$i3, in_$i4, in_$i5, in_$i6, in_$r2, in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    out_$i5 := unsafe.$mulInt(2, out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    out_$i3 := unsafe.$mulInt(2, out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    out_$i4 := out_$i3 + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call out_$r2, out_$exception := unsafe.java.lang.String$substring$int_int(in_r0, out_$i5, out_$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call out_$i6, out_$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(out_$r2, 16);
    goto anon20_Then, anon20_Else;

  anon19_Else:
    assume {:partition} out_$i2 > out_i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto anon9;

  anon6:
    out_$i2 := unsafe.$arrSizeHeap[in_r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto anon19_Then, anon19_Else;

  anon19_Then:
    assume {:partition} out_i8 >= out_$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    out_$return, out_$exception, out_$i2, out_$fakelocal_2, out_$fakelocal_3, out_i8, out_$i3, out_$i4, out_$i5, out_$i6, out_$r2, out_$b7 := in_$return, in_$exception, in_$i2, in_$fakelocal_2, in_$fakelocal_3, in_i8, in_$i3, in_$i4, in_$i5, in_$i6, in_$r2, in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := old(unsafe.$intArrHeap), old(unsafe.$objIndex), old(unsafe.$heap);
    return;

  anon18_Then:
    assume {:partition} in_r1 != unsafe.$null;
    out_$exception := out_$exception;
    goto anon6;

  anon16_dummy:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return := out_$return;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception := out_$exception;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1 := in_r1;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2 := out_$i2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2 := out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3 := out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8 := out_i8;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3 := out_$i3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0 := in_r0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4 := out_$i4;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5 := out_$i5;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6 := out_$i6;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2 := out_$r2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7 := out_$b7;
    havoc inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap := unsafe.$intArrHeap;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex := unsafe.$objIndex;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap := unsafe.$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$entry;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$entry:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$block58;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$block58:
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1
   == unsafe.$null;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2 := unsafe.$new(unsafe.java.lang.NullPointerException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16:
    unsafe.$intArrHeap := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1 := unsafe.$intArrHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1][inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7]];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
   + 1;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16_dummy;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     >= 0;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon22_Else:
    assume {:partition} !(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     < unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1]
   && inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
     >= 0);
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3 := unsafe.$new(unsafe.java.lang.ArrayIndexOutOfBoundsException);
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception
   == unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Else:
    assume {:partition} !(unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException);
    assert {:clone} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon13;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception
   != unsafe.$null;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon21_Then:
    assume {:partition} unsafe.$heap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, unsafe.$type]
   <: unsafe.java.lang.NumberFormatException;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return := unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon9:
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3 := unsafe.$mulInt(2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3
   + 2;
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := unsafe.java.lang.String$substring$int_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r0, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4);
    assert {:sourceloc "OSecurityManager.java", 322, -1, -1, -1} true;
    call inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := unsafe.java.lang.Integer$parseInt$java.lang.String_int(inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, 16);
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon20_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Else:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2
   > inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "elseblock"} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon9;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon6:
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2 := unsafe.$arrSizeHeap[inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1];
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} true;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Then, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Else;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon19_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8
   >= inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2;
    assert {:sourceloc "OSecurityManager.java", 321, -1, -1, -1} {:comment "thenblock"} true;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$return, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$exception, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$fakelocal_3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_i8, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i3, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i4, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i5, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$i6, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$r2, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_$b7;
    unsafe.$intArrHeap, unsafe.$objIndex, unsafe.$heap := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$intArrHeap, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$objIndex, inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$$heap;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon18_Then:
    assume {:partition} inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$in_r1
   != unsafe.$null;
    inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon6;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$anon16_dummy:
    assume false;
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$exit:
    goto inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return;

  inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$Return:
    out_$return := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$return;
    out_$exception := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$exception;
    out_$i2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i2;
    out_$fakelocal_2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_2;
    out_$fakelocal_3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$fakelocal_3;
    out_i8 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_i8;
    out_$i3 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i3;
    out_$i4 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i4;
    out_$i5 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i5;
    out_$i6 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$i6;
    out_$r2 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$r2;
    out_$b7 := inline$OSecurityManager$hexToByteArray$java.lang.String_loop_block58$0$out_$b7;
    goto anon16_dummy$1;

  anon16_dummy$1:
    return;

  exit:
    return;
}



type ref;

type javaType;

type Field _;

type $heap_type = <$GenericType__0>[ref,Field $GenericType__0]$GenericType__0;

type boolArrHeap_type = [ref][int]bool;

type refArrHeap_type = [ref][int]ref;

type realArrHeap_type = [ref][int]int;

type intArrHeap_type = [ref][int]int;
