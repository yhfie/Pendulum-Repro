public class sg.edu.nus.comp.tsunami.safe.Safe extends java.lang.Object
{

    public void <init>()
    {
        sg.edu.nus.comp.tsunami.safe.Safe r0;

        r0 := @this: sg.edu.nus.comp.tsunami.safe.Safe;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean not(boolean)
    {
        boolean z0, z1;

        z0 := @parameter0: boolean;

        z1 = 0;

        if z0 == 0 goto label1;

        z1 = 0;

     label1:
        if z0 != 0 goto label2;

        z1 = 1;

     label2:
        return z1;
    }

    public static boolean and(boolean, boolean)
    {
        boolean z0, z1, $z2;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = z0 & z1;

        return $z2;
    }

    public static boolean or(boolean, boolean)
    {
        boolean z0, z1, $z2;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $z2 = z0 | z1;

        return $z2;
    }

    public static boolean gt(long, long)
    {
        long l0, l1;
        byte $b2, $b3;
        boolean z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 = 0;

        $b2 = l0 cmp l1;

        if $b2 <= 0 goto label1;

        z0 = 1;

     label1:
        $b3 = l0 cmp l1;

        if $b3 > 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean lt(long, long)
    {
        long l0, l1;
        byte $b2, $b3;
        boolean z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 = 0;

        $b2 = l0 cmp l1;

        if $b2 >= 0 goto label1;

        z0 = 1;

     label1:
        $b3 = l0 cmp l1;

        if $b3 < 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean ge(long, long)
    {
        long l0, l1;
        byte $b2, $b3;
        boolean z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 = 0;

        $b2 = l0 cmp l1;

        if $b2 < 0 goto label1;

        z0 = 1;

     label1:
        $b3 = l0 cmp l1;

        if $b3 >= 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean le(long, long)
    {
        long l0, l1;
        byte $b2, $b3;
        boolean z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 = 0;

        $b2 = l0 cmp l1;

        if $b2 > 0 goto label1;

        z0 = 1;

     label1:
        $b3 = l0 cmp l1;

        if $b3 <= 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean eq(long, long)
    {
        long l0, l1;
        byte $b2, $b3;
        boolean z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 = 0;

        $b2 = l0 cmp l1;

        if $b2 != 0 goto label1;

        z0 = 1;

     label1:
        $b3 = l0 cmp l1;

        if $b3 == 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean neq(long, long)
    {
        long l0, l1;
        byte $b2, $b3;
        boolean z0;

        l0 := @parameter0: long;

        l1 := @parameter1: long;

        z0 = 0;

        $b2 = l0 cmp l1;

        if $b2 == 0 goto label1;

        z0 = 1;

     label1:
        $b3 = l0 cmp l1;

        if $b3 != 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean gt(double, double)
    {
        double d0, d1;
        byte $b0, $b1;
        boolean z0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        z0 = 0;

        $b0 = d0 cmpl d1;

        if $b0 <= 0 goto label1;

        z0 = 1;

     label1:
        $b1 = d0 cmpg d1;

        if $b1 > 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean lt(double, double)
    {
        double d0, d1;
        byte $b0, $b1;
        boolean z0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        z0 = 0;

        $b0 = d0 cmpg d1;

        if $b0 >= 0 goto label1;

        z0 = 1;

     label1:
        $b1 = d0 cmpl d1;

        if $b1 < 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean ge(double, double)
    {
        double d0, d1;
        byte $b0, $b1;
        boolean z0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        z0 = 0;

        $b0 = d0 cmpl d1;

        if $b0 < 0 goto label1;

        z0 = 1;

     label1:
        $b1 = d0 cmpg d1;

        if $b1 >= 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean le(double, double)
    {
        double d0, d1;
        byte $b0, $b1;
        boolean z0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        z0 = 0;

        $b0 = d0 cmpg d1;

        if $b0 > 0 goto label1;

        z0 = 1;

     label1:
        $b1 = d0 cmpl d1;

        if $b1 <= 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean eq(double, double)
    {
        double d0, d1;
        byte $b0, $b1;
        boolean z0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        z0 = 0;

        $b0 = d0 cmpl d1;

        if $b0 != 0 goto label1;

        z0 = 1;

     label1:
        $b1 = d0 cmpl d1;

        if $b1 == 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean neq(double, double)
    {
        double d0, d1;
        byte $b0, $b1;
        boolean z0;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        z0 = 0;

        $b0 = d0 cmpl d1;

        if $b0 == 0 goto label1;

        z0 = 1;

     label1:
        $b1 = d0 cmpl d1;

        if $b1 != 0 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean eq(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        z0 = 0;

        if r0 != r1 goto label1;

        z0 = 1;

     label1:
        if r0 == r1 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static boolean neq(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        z0 = 0;

        if r0 == r1 goto label1;

        z0 = 1;

     label1:
        if r0 != r1 goto label2;

        z0 = 0;

     label2:
        return z0;
    }

    public static java.lang.Object cond(boolean, java.lang.Object, java.lang.Object)
    {
        boolean z0;
        java.lang.Object r0, r1, r2;

        z0 := @parameter0: boolean;

        r0 := @parameter1: java.lang.Object;

        r1 := @parameter2: java.lang.Object;

        r2 = null;

        if z0 == 0 goto label1;

        r2 = r0;

     label1:
        if z0 != 0 goto label2;

        r2 = r1;

     label2:
        return r2;
    }
}
